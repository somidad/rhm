{"version":3,"sources":["constants.ts","utils.ts","components/EnumTable.tsx","components/PkgTable.tsx","components/VersionTable.tsx","components/AppMenu.tsx","components/ChangePerReleaseTable.tsx","components/ReleaseTable.tsx","components/ChangeTable.tsx","init.ts","components/Options.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["formAfterChange","formAfterChangeNew","formAlias","formAliasNew","formBeforeChange","formBeforeChangeNew","formCustomerIndexList","formDescription","formDescriptionNew","formLineup","formLineupNew","formName","formNameNew","formPrevious","formPreviousNew","formVersion","invalidSortable","keyActions","keyAfterChange","keyAlias","keyBeforeChange","keyChanges","keyCustomers","keyDescription","keyDragHandle","keyHistory","keyLineup","keyName","keyPackage","keyPrevious","keyReleases","keyVersion","keyVersions","parenGlobal","parenNone","parenError","titleActions","titleAfterChange","titleAlias","titleBeforeChange","titleCustomers","titleDescription","titleLineup","titlePackage","titlePrevious","titleVersion","accumulateVersionIndex","versionList","versionIndex","versionIndexList","versionFound","find","version","index","push","indexPrev","findEmptyIndex","indexList","sort","a","b","reduce","indent","input","replace","publishPerCustomer","lineupList","pkgList","customer","candidateLineupIndexList","map","lineup","releaseHistoryPerLineupList","forEach","lineupIndex","releaseHistory","publishPerLineup","filter","releaseHistoryPerLineup","lineupFound","lineupName","name","join","customerIndex","console","group","changeList","versionNext","pkgName","changeListToAccumulate","initialVersion","releaseList","released","release","pkgIndex","customerIndexList","includes","pkg","groupEnd","i","customerIndexListPerChangeList","pkgFound","log","customerFound","findIndex","ci","unshift","alias","chagneIndexListToAccumultate","item","changeListToAccumulatePerRelease","change","changeIndex","flat","length","filterChangeListToAccumulate","changeListPerPkg","changes","description","beforeChange","afterChange","listToChanges","trim","EnumTable","title","enumList","onChange","usedIndexList","useForm","form","refButtonAdd","createRef","refButtonEdit","useState","editIndex","setEditIndex","columns","key","dataIndex","column","onCell","record","addEnumItem","validateFields","then","getFieldValue","enumItem","enumListNew","localeCompare","setFieldsValue","catch","reason","error","onSubmitRename","nameNew","indexFound","slice","dataSource","components","body","cell","children","restProps","onFinish","Item","rules","required","help","onPressEnter","current","click","disabled","ref","onClick","PlusOutlined","CheckOutlined","CloseOutlined","onClickEdit","EditOutlined","removeEnumItem","DeleteOutlined","pagination","size","Option","Select","PkgTable","usedPkgIndexList","useEffect","addPkg","getFieldsValue","pkgListNew","onSubmitEditPkg","aliasNew","lineupIndexNew","lineupNew","package","initialValue","value","icon","removePkg","VersionTable","onPublish","onSelect","addVersion","previous","versionListNew","onSubmitEditVersion","previousNew","usedVersionIndexList","uniq","removeVersion","onClickPublish","ExportOutlined","AppMenu","file","customerList","options","onNew","onLoad","refLoad","refSave","featureName","setFeatureName","reader","FileReader","onload","e","result","target","indexLast","lastIndexOf","substring","parsed","JSON","parse","undefined","versionName","versionIndexPrev","targetCustomerList","targetCustomer","releaseIndex","customerName","releaseFound","customerIndexListPerChangeFound","load","mode","selectable","FileOutlined","FolderOpenOutlined","blob","Blob","stringify","type","download","href","window","URL","createObjectURL","onClickSave","SaveOutlined","accept","hidden","files","readAsText","Text","Typography","ChangePerReleaseTable","editVersionIndex","setEditVersionIndex","editChangeIndex","setEditChangeIndex","onCancelEdit","changeListFiltered","changeListPrev","changeListCurr","versionIndexOfChange","customerIndexListPerRelease","customerListPerRelease","colSpan","allowClear","filterOption","option","toLocaleLowerCase","indexOf","versionOfChangeFound","customerIndexListRaw","customerIndexListPerChangeListNew","onSubmitChange","color","content","PopoverContent","strong","cols","autoSize","ReleaseTable","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","width","addRelease","releaseListNew","onChangeCustomerIndexListPerChangeList","onSubmitEditRelease","pkgIndexNew","customerIndexListNew","customers","releaseToDragFound","Number","pkgToDragFound","pkgNameToDrag","lineupIndexToDrag","lineupToDrag","collisionDetection","closestCenter","onDragStart","event","active","id","onDragEnd","over","oldIndex","toString","newIndex","arrayMove","wrapper","props","items","child","strategy","verticalListSortingStrategy","row","style","useSortable","attributes","listeners","setNodeRef","styleRowBold","fontWeight","styleNew","Object","assign","customerTag","removeRelease","MenuOutlined","cursor","expandable","expandedRowRender","rowExpandable","backgroundColor","border","display","alignItems","paddingLeft","ChangeTable","usedChangeIndexWithVersionIndexList","addChange","changeListNew","onSubmitEditChange","descriptionNew","beforeChangeNew","afterChangeNew","verticalAlign","changeFound","removeChange","customerListInit","lineupListInit","pkgListInit","versionListInit","Options","onChangeOptions","tagStyle","label","Group","Panel","Collapse","App","setOptions","setVersionList","setVersionIndex","setLineupList","setPkgList","setCustomerList","modalVisible","setModalVisible","setReleaseHistory","uniqWith","changeIndexListPrev","changeIndexListPerReleaseList","changeIndexListPerReleasePrev","usedLineupIndexList","lineupIndexListPrev","pkgIndexListPrev","usedCustomerIndexList","customerIndexListPrev","customerIndexListPerReleasePrev","customerIndexListPerChangeListPrev","versionCurr","versionPrev","className","span","offset","defaultActiveKey","TabPane","tab","level","header","v1","index1","indexPrev1","v2","index2","indexPrev2","isVersionListCircular","releaseHistoryPerCustomerIndexListList","cil1","rh1","j","cil2","splice","relaseHistoryPerCustomerIndexList","customerNameList","customerNameJoined","publish","direction","marginTop","justifyContent","rel","GithubOutlined","footer","navigator","clipboard","writeText","CopyOutlined","visible","onCancel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c35b8ea.chunk.js","sourcesContent":["export const formAfterChange = \"afterChange\";\nexport const formAfterChangeNew = \"afterChangeNew\";\nexport const formAlias = \"alias\";\nexport const formAliasNew = \"aliasNew\";\nexport const formBeforeChange = \"beforeChange\";\nexport const formBeforeChangeNew = \"beforeChangeNew\";\nexport const formCustomerIndexList = \"customerIndexList\";\nexport const formDescription = \"description\";\nexport const formDescriptionNew = \"descriptionNew\";\nexport const formLineup = \"lineup\";\nexport const formLineupNew = \"lineupNew\";\nexport const formName = \"name\";\nexport const formNameNew = \"nameNew\";\nexport const formPrevious = \"previous\";\nexport const formPreviousNew = \"previousNew\";\nexport const formVersion = \"version\";\n\nexport const invalidSortable = \"invalidSortable\";\n\nexport const keyActions = \"actions\";\nexport const keyAfterChange = \"afterChange\";\nexport const keyAlias = \"alias\";\nexport const keyBeforeChange = \"beforeChange\";\nexport const keyChanges = \"changes\";\nexport const keyCustomers = \"customers\";\nexport const keyDescription = \"description\";\nexport const keyDragHandle = \"dragHandle\";\nexport const keyHistory = \"history\";\nexport const keyLineup = \"lineup\";\nexport const keyLineups = \"lineups\";\nexport const keyName = \"name\";\nexport const keyOptions = \"options\";\nexport const keyPackage = \"package\";\nexport const keyPackages = \"packages\";\nexport const keyPrevious = \"previous\";\nexport const keyReleases = \"releases\";\nexport const keyVersion = \"version\";\nexport const keyVersions = \"versions\";\n\nexport const parenGlobal = \"(Global)\";\nexport const parenNone = \"(None)\";\nexport const parenError = \"(Error)\";\n\nexport const titleActions = \"Actions\";\nexport const titleAfterChange = \"After change\";\nexport const titleAlias = \"Alias\";\nexport const titleBeforeChange = \"Before change\";\nexport const titleChanges = \"Changes\";\nexport const titleCustomer = \" Customer\";\nexport const titleCustomers = \"Customers\";\nexport const titleDescription = \"Description\";\nexport const titleHistory = \"History\";\nexport const titleLineup = \"Lineup\";\nexport const titleLineups = \"Lineups\";\nexport const titleOptions = \"Options\";\nexport const titlePackage = \"Package\";\nexport const titlePackages = \"Packages\";\nexport const titlePrevious = \"Previous\";\nexport const titleReleases = \"Releases\";\nexport const titleVersion = \"Version\";\nexport const titleVersions = \"Versions\";\n","import { uniq } from \"lodash\";\nimport {\n  Change,\n  ChangeV2,\n  Enum,\n  OldCustomer,\n  OldPkg,\n  OldVersion,\n  Pkg,\n  Release,\n  ReleaseV2,\n  Version,\n  VersionV2,\n} from \"./types\";\n\ntype ReleaseHistoryPerCustomerIndexList = {\n  customerIndexList: number[];\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerLineupIndex = {\n  lineupIndex: number;\n  releaseHistory: string;\n};\n\nexport function accumulateVersionIndex(\n  versionList: VersionV2[],\n  versionIndex: number\n): number[] {\n  const versionIndexList: number[] = [];\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  if (!versionFound) {\n    return versionIndexList;\n  }\n  versionIndexList.push(versionIndex);\n  const { indexPrev } = versionFound;\n  versionIndexList.push(...accumulateVersionIndex(versionList, indexPrev));\n  return versionIndexList;\n}\n\n/**\n * Filter change list to accumulate after the previous package to the current package\n * The previous package and the current package may be released in the same version or different versions\n */\nfunction filterChangeListToAccumulate(\n  customerIndex: number,\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[]\n) {\n  console.group({ customerIndex });\n  const changeList: { pkgName: string; changeList: ChangeV2[] }[] = [];\n  let versionNext = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  let pkgName = \"\";\n  let changeListToAccumulate: ChangeV2[] = [];\n  let initialVersion = true;\n  while (versionNext) {\n    console.group({ versionNext });\n    // Traverse the last release from the first release for each version\n    // If a package is released to the customer,\n    // - Push the accumulated change list with the package name, if package name is not empy\n    // - Reset the accumulated change list\n    // - Update the package name with the current package\n    // Common\n    // - Accumulate changes\n    const { indexPrev, releaseList } = versionNext;\n    // Check at least one package is released with the current version\n    if (initialVersion) {\n      const released = releaseList.find((release) => {\n        const { pkgIndex, customerIndexList } = release;\n        if (!customerIndexList.includes(customerIndex)) {\n          return false;\n        }\n        const pkgFound = pkgList.find((pkg) => {\n          return pkg.index === pkgIndex && pkg.lineupIndex === lineupIndex;\n        });\n        return !!pkgFound;\n      });\n      initialVersion = false;\n      if (!released) {\n        console.groupEnd();\n        console.groupEnd();\n        return changeList;\n      }\n    }\n    for (let i = releaseList.length - 1; i >= 0; i -= 1) {\n      const release = releaseList[i];\n      const { customerIndexList, customerIndexListPerChangeList, pkgIndex } =\n        release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      console.log({ customerIndexList });\n      const customerFound =\n        customerIndexList.findIndex((ci) => ci === customerIndex) !== -1;\n      // Check if the package is with the desired lineup\n      if (pkgFound?.lineupIndex !== lineupIndex) {\n        continue;\n      }\n      if (customerFound) {\n        if (pkgName) {\n          console.log(\"Pushed\", pkgName, changeListToAccumulate);\n          // - Push the accumulated change list with the package name, if package name is not empy\n          changeList.unshift({\n            pkgName,\n            changeList: [...changeListToAccumulate],\n          });\n          // - Reset the accumulated change list\n          changeListToAccumulate = [];\n        }\n        // - Update the package name with the current package\n        const { name, alias } = pkgFound;\n        pkgName = (alias || name) ?? \"\";\n      }\n      // - Accumulate changes\n      const chagneIndexListToAccumultate =\n        customerIndexListPerChangeList.filter((item) => {\n          const { customerIndexList } = item;\n          return (\n            customerIndexList.includes(customerIndex) ||\n            customerIndexList.includes(-1)\n          );\n        });\n      const changeListToAccumulatePerRelease = versionList\n        .map((version) => {\n          const { changeList: changeListPerVersion } = version;\n          const changeListToAccumulatePerVersion = changeListPerVersion.filter(\n            (change) => {\n              return chagneIndexListToAccumultate.find(\n                (item) =>\n                  item.versionIndex === version.index &&\n                  item.changeIndex === change.index\n              );\n            }\n          );\n          return changeListToAccumulatePerVersion;\n        })\n        .flat();\n      changeListToAccumulate.unshift(...changeListToAccumulatePerRelease);\n      console.log({ changeListToAccumulate });\n    }\n    versionNext = versionList.find((version) => version.index === indexPrev);\n    console.groupEnd();\n  }\n  if (pkgName) {\n    console.log(\"Pushed\", pkgName, changeListToAccumulate);\n    // - Push the accumulated change list with the package name, if package name is not empy\n    changeList.unshift({ pkgName, changeList: [...changeListToAccumulate] });\n  }\n  console.groupEnd();\n  return changeList;\n}\n\nexport function findEmptyIndex(indexList: number[]) {\n  return indexList\n    .sort((a, b) => a - b)\n    .reduce((indexPrev, index) => {\n      if (index === indexPrev) {\n        return indexPrev + 1;\n      }\n      return indexPrev;\n    }, 0);\n}\n\nexport function getEnumNameList(enumList: Enum[], indexList: number[]) {\n  return enumList\n    .filter((enumItem) => indexList.includes(enumItem.index))\n    .map((enumItem) => enumItem.name);\n}\n\nfunction indent(input: string) {\n  return input.replace(/^/gm, \"    \");\n}\n\nfunction isVersionListCircular(versionList: VersionV2[], index: number) {\n  const versionFound = versionList.find((version) => version.index === index);\n  if (!versionFound) {\n    return false;\n  }\n  let v1: VersionV2 | undefined = versionFound;\n  let { index: index1, indexPrev: indexPrev1 } = v1;\n  let v2: VersionV2 | undefined = versionFound;\n  let { index: index2, indexPrev: indexPrev2 } = v2;\n  while (v1 || v2) {\n    // eslint-disable-next-line no-loop-func\n    v1 = versionList.find((version) => version.index === indexPrev1);\n    if (!v1) {\n      return false;\n    }\n    ({ index: index1, indexPrev: indexPrev1 } = v1);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    if (index1 === index2) {\n      return true;\n    }\n  }\n}\n\nexport function load(input: string) {\n  const parsed = JSON.parse(input);\n  const { versionList, lineupList, pkgList, customerList, options } = parsed;\n  // Check if it comes from release-history-manager\n  if (versionList[0] && versionList[0].versionIndex !== undefined) {\n    // Migrate\n    const versionListNew: Version[] = (versionList as OldVersion[]).map(\n      (version) => {\n        const {\n          versionIndex: index,\n          versionName: name,\n          versionIndexPrev: indexPrev,\n          changeList,\n          releaseList,\n        } = version;\n        const changeListNew: Change[] = changeList.map((change) => {\n          const {\n            changeIndex: index,\n            description,\n            beforeChange,\n            afterChange,\n            targetCustomerList,\n          } = change;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return {\n            index,\n            description,\n            beforeChange,\n            afterChange,\n            customerIndexList,\n            lineupIndex: -1,\n          };\n        });\n        const releaseListNew: Release[] = releaseList.map((release) => {\n          const { releaseIndex: index, pkgIndex, targetCustomerList } = release;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return { index, pkgIndex, customerIndexList };\n        });\n        return {\n          index,\n          name,\n          indexPrev,\n          changeList: changeListNew,\n          releaseList: releaseListNew,\n        };\n      }\n    );\n    const pkgListNew: Pkg[] = (pkgList as OldPkg[]).map((pkg) => {\n      const { pkgIndex: index, pkgName: name } = pkg;\n      return { index, name, lineupIndex: -1 };\n    });\n    const customerListNew: Enum[] = (customerList as OldCustomer[]).map(\n      (customer) => {\n        const { customerIndex: index, customerName: name } = customer;\n        return { index, name };\n      }\n    );\n    return {\n      versionList: versionListNew,\n      lineupList: [],\n      pkgList: pkgListNew,\n      customerList: customerListNew,\n    };\n  } else {\n    // TODO: Check validity\n  }\n  // Migrate from rhm v1 to v2\n  versionList.forEach((version: Version & VersionV2) => {\n    const { index: versionIndex, changeList, releaseList } = version;\n    releaseList.forEach((release: Release & ReleaseV2) => {\n      release.customerIndexListPerChangeList =\n        release.customerIndexListPerChangeList ?? [];\n    });\n    changeList.forEach((change: Change & ChangeV2) => {\n      const { index: changeIndex, customerIndexList } = change;\n      if (customerIndexList && customerIndexList.length) {\n        customerIndexList.forEach((customerIndex) => {\n          const releaseFound = releaseList.find((release) => {\n            const { pkgIndex } = release;\n            return (pkgList as Pkg[]).find((pkg) => {\n              return (\n                pkg.index === pkgIndex &&\n                pkg.lineupIndex === change.lineupIndex &&\n                release.customerIndexList.includes(customerIndex)\n              );\n            });\n          });\n          if (releaseFound) {\n            const { customerIndexListPerChangeList } =\n              releaseFound as ReleaseV2;\n            const customerIndexListPerChangeFound =\n              customerIndexListPerChangeList.find((item) => {\n                return (\n                  item.versionIndex === versionIndex &&\n                  item.changeIndex === changeIndex\n                );\n              });\n            if (customerIndexListPerChangeFound) {\n              customerIndexListPerChangeFound.customerIndexList = uniq([\n                ...customerIndexListPerChangeFound.customerIndexList,\n                customerIndex,\n              ]);\n            } else {\n              customerIndexListPerChangeList.push({\n                versionIndex,\n                changeIndex,\n                customerIndexList: [customerIndex],\n              });\n            }\n          }\n        });\n      } else if (customerIndexList && !customerIndexList.length) {\n        // Global\n        const releaseFound = releaseList.find((release) => {\n          const { pkgIndex } = release;\n          return (pkgList as Pkg[]).find((pkg) => {\n            return (\n              pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex\n            );\n          });\n        });\n        if (releaseFound) {\n          const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n          const customerIndexListPerChangeFound =\n            customerIndexListPerChangeList.find((item) => {\n              return (\n                item.versionIndex === versionIndex &&\n                item.changeIndex === changeIndex\n              );\n            });\n          if (customerIndexListPerChangeFound) {\n            customerIndexListPerChangeFound.customerIndexList = [-1];\n          } else {\n            customerIndexListPerChangeList.push({\n              versionIndex,\n              changeIndex,\n              customerIndexList: [-1],\n            });\n          }\n        }\n      }\n    });\n  });\n  // TODO\n  return { versionList, lineupList, pkgList, customerList, options };\n}\n\nexport function publish(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customerList: Enum[],\n  tagStyle: \"comma\" | \"separate\"\n) {\n  if (isVersionListCircular(versionList, versionIndex)) {\n    return;\n  }\n  const releaseHistoryPerCustomerIndexListList: ReleaseHistoryPerCustomerIndexList[] =\n    [];\n  // Generate\n  customerList.forEach((customer) => {\n    releaseHistoryPerCustomerIndexListList.push({\n      customerIndexList: [customer.index],\n      releaseHistory: publishPerCustomer(\n        versionList,\n        versionIndex,\n        lineupList,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  // Merge\n  for (\n    let i = releaseHistoryPerCustomerIndexListList.length - 1;\n    i >= 0;\n    i -= 1\n  ) {\n    const { customerIndexList: cil1, releaseHistory: rh1 } =\n      releaseHistoryPerCustomerIndexListList[i];\n    for (let j = i - 1; j >= 0; j -= 1) {\n      const { customerIndexList: cil2, releaseHistory: rh2 } =\n        releaseHistoryPerCustomerIndexListList[j];\n      if (rh1 === rh2) {\n        cil2.push(...cil1);\n        releaseHistoryPerCustomerIndexListList.splice(i, 1);\n        break;\n      }\n    }\n  }\n  // Export\n  const releaseHistory = releaseHistoryPerCustomerIndexListList\n    .filter(\n      (relaseHistoryPerCustomerIndexList) =>\n        relaseHistoryPerCustomerIndexList.releaseHistory\n    )\n    .map((relaseHistoryPerCustomerIndexList) => {\n      const { customerIndexList, releaseHistory } =\n        relaseHistoryPerCustomerIndexList;\n      const customerNameList = getEnumNameList(customerList, customerIndexList);\n      const customerNameJoined =\n        tagStyle === \"comma\"\n          ? `<${customerNameList.join(\", \")}>`\n          : customerNameList\n              .map((customerName) => `<${customerName}>`)\n              .join(\"\");\n      return `${customerNameJoined}\n${indent(releaseHistory)}\n${customerNameJoined.replace(/</g, \"</\")}`;\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerCustomer(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const candidateLineupIndexList = [\n    -1,\n    ...lineupList.map((lineup) => lineup.index),\n  ];\n  const releaseHistoryPerLineupList: ReleaseHistoryPerLineupIndex[] = [];\n  candidateLineupIndexList.forEach((lineupIndex) => {\n    releaseHistoryPerLineupList.push({\n      lineupIndex,\n      releaseHistory: publishPerLineup(\n        versionList,\n        versionIndex,\n        lineupIndex,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  const releaseHistory = releaseHistoryPerLineupList\n    .filter((releaseHistoryPerLineup) => releaseHistoryPerLineup.releaseHistory)\n    .map((releaseHistoryPerLineup) => {\n      const { lineupIndex, releaseHistory } = releaseHistoryPerLineup;\n      const lineupFound = lineupList.find(\n        (lineup) => lineup.index === lineupIndex\n      );\n      if (!lineupFound) {\n        return indent(releaseHistory);\n      } else {\n        const lineupName = lineupFound.name;\n        return `<${lineupName}>\n${indent(releaseHistory)}\n</${lineupName}>`;\n      }\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerLineup(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const { index: customerIndex } = customer;\n  const changeListPerPkgList = filterChangeListToAccumulate(\n    customerIndex,\n    versionList,\n    versionIndex,\n    lineupIndex,\n    pkgList\n  );\n  const releaseHistory = changeListPerPkgList\n    .map((changeListPerPkg, pkgIndex) => {\n      const { pkgName, changeList } = changeListPerPkg;\n      const changes =\n        pkgIndex === 0\n          ? \"- Initial release\"\n          : changeList\n              // .filter((change) => {\n              //   const { index: changeIndex, lineupIndex } = change;\n              //   const pkgFound = changeListPerPkgList\n              //     .slice(0, pkgIndex)\n              //     .find((pkg) => {\n              //       const changeFound = pkg.changeList.find(\n              //         (change) =>\n              //           change.index === changeIndex &&\n              //           change.lineupIndex === lineupIndex\n              //       );\n              //       return changeFound;\n              //     });\n              //   return !pkgFound;\n              // })\n              .map((change) => {\n                const { description, beforeChange, afterChange } = change;\n                const listToChanges = [\"[Description]\", indent(description)];\n                if (beforeChange || afterChange) {\n                  listToChanges.push(\"[Enhancement]\");\n                }\n                if (beforeChange) {\n                  listToChanges.push(indent(\"[Before change]\"));\n                  listToChanges.push(indent(indent(beforeChange)));\n                }\n                if (afterChange) {\n                  listToChanges.push(indent(\"[After change]\"));\n                  listToChanges.push(indent(indent(afterChange)));\n                }\n                return listToChanges.join(\"\\n\");\n              })\n              .join(\"\\n\");\n      if (!changes) {\n        return \"\";\n      }\n      return `${pkgName}\n${indent(changes)}`;\n    })\n    .filter((changes) => !!changes)\n    .join(\"\\n\")\n    .trim();\n  return releaseHistory;\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useState } from \"react\";\nimport { formName, formNameNew, keyActions, keyName, titleActions } from \"../constants\";\nimport { Enum } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\ntype Props = {\n  title: string;\n  enumList: Enum[];\n  onChange: (enumList: Enum[]) => void;\n  usedIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function EnumTable({\n  title,\n  enumList,\n  onChange,\n  usedIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    {\n      key: keyName,\n      dataIndex: keyName,\n      title,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addEnumItem() {\n    form\n      .validateFields([formName])\n      .then(() => {\n        const name = form.getFieldValue(formName);\n        const enumItemFound = enumList.find(\n          (enumItem) => enumItem.name === name\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          enumList.map((enumItem) => enumItem.index)\n        );\n        const enumListNew = [...enumList, { index, name }].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        onChange(enumListNew);\n        form.setFieldsValue({ name: \"\" });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const enumItem = enumList.find((enumItem) => enumItem.index === index);\n    if (!enumItem) {\n      return;\n    }\n    form.setFieldsValue({ nameNew: enumItem.name });\n    setEditIndex(index);\n  }\n\n  function onSubmitRename() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const nameNew = form.getFieldValue(formNameNew);\n        const enumItemFound = enumList.find(\n          (enumItem) =>\n            enumItem.index !== editIndex && enumItem.name === nameNew\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const indexFound = enumList.findIndex(\n          (enumItem) => enumItem.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const enumListNew = [\n          ...enumList.slice(0, indexFound),\n          { index: editIndex, name: nameNew },\n          ...enumList.slice(indexFound + 1),\n        ];\n        onChange(enumListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeEnumItem(index: number) {\n    if (usedIndexList && usedIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = enumList.findIndex(\n      (enumItem) => enumItem.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...enumList.slice(0, indexFound),\n      ...enumList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...enumList.map((enumItem) => {\n      const { index, name } = enumItem;\n      return { key: index, name };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyName ? (\n          <Form form={form} onFinish={addEnumItem}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input\n                onPressEnter={() => refButtonAdd.current?.click()}\n                disabled={editIndex !== -1}\n              />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addEnumItem} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyName ? (\n          <Form form={form} onFinish={onSubmitRename}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitRename}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyName ? (\n          children\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button\n              onClick={() => removeEnumItem(key)}\n              disabled={usedIndexList?.includes(key)}\n            >\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import {\n  CheckOutlined,\n  CloseOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useEffect, useState } from \"react\";\nimport {\n  formAlias,\n  formAliasNew,\n  formLineup,\n  formLineupNew,\n  formName,\n  formNameNew,\n  keyActions,\n  keyAlias,\n  keyLineup,\n  keyPackage,\n  parenError,\n  parenNone,\n  titleActions,\n  titleAlias,\n  titleLineup,\n  titlePackage,\n} from \"../constants\";\nimport { Enum, Pkg } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  pkgList: Pkg[];\n  lineupList: Enum[];\n  onChange: (pkgList: Pkg[]) => void;\n  usedPkgIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string; lineup: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function PkgTable({\n  pkgList,\n  lineupList,\n  onChange,\n  usedPkgIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList]);\n\n  const columns: any[] = [\n    {\n      key: keyPackage,\n      dataIndex: keyPackage,\n      title: titlePackage,\n    },\n    {\n      key: keyAlias,\n      dataIndex: keyAlias,\n      title: titleAlias,\n    },\n    {\n      key: keyLineup,\n      dataIndex: keyLineup,\n      title: titleLineup,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addPkg() {\n    form\n      .validateFields([formName, formAlias, formLineup])\n      .then(() => {\n        const {\n          name,\n          alias,\n          lineup: lineupIndex,\n        } = form.getFieldsValue([formName, formAlias, formLineup]);\n        const pkgFound = pkgList.find((pkg) => pkg.name === name);\n        if (pkgFound) {\n          return;\n        }\n        const index = findEmptyIndex(pkgList.map((pkg) => pkg.index));\n        const pkgListNew = [\n          ...pkgList,\n          { index, name, alias, lineupIndex },\n        ].sort((a, b) => a.name.localeCompare(b.name));\n        onChange(pkgListNew);\n        form.setFieldsValue({\n          name: \"\",\n          alias: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const pkgFound = pkgList.find((pkg) => pkg.index === index);\n    if (!pkgFound) {\n      return;\n    }\n    const { name, alias, lineupIndex } = pkgFound;\n    form.setFieldsValue({\n      nameNew: name,\n      aliasNew: alias,\n      lineupNew: lineupIndex,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditPkg() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const {\n          nameNew,\n          aliasNew,\n          lineupNew: lineupIndexNew,\n        } = form.getFieldsValue([formNameNew, formAliasNew, formLineupNew]);\n        const pkgFound = pkgList.find(\n          (pkg) => pkg.index !== editIndex && pkg.name === nameNew\n        );\n        if (pkgFound) {\n          return;\n        }\n        const indexFound = pkgList.findIndex((pkg) => pkg.index === editIndex);\n        if (indexFound === -1) {\n          return;\n        }\n        const pkgListNew = [\n          ...pkgList.slice(0, indexFound),\n          {\n            index: editIndex,\n            name: nameNew,\n            alias: aliasNew,\n            lineupIndex: lineupIndexNew,\n          },\n          ...pkgList.slice(indexFound + 1),\n        ];\n        onChange(pkgListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removePkg(index: number) {\n    if (usedPkgIndexList && usedPkgIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = pkgList.findIndex((pkg) => pkg.index === index);\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...pkgList.slice(0, indexFound),\n      ...pkgList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...pkgList.map((pkg) => {\n      const { index: key, name, alias, lineupIndex: lineup } = pkg;\n      return { key, package: name, alias, lineup };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form} onFinish={addPkg}>\n            <Form.Item\n              name={formName}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Input\n                onPressEnter={() => refButtonAdd.current?.click()}\n                disabled={editIndex !== -1}\n              />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyAlias ? (\n          <Form form={form} onFinish={addPkg}>\n            <Form.Item name={formAlias} help={false}>\n              <Input\n                onPressEnter={() => refButtonAdd.current?.click()}\n                disabled={editIndex !== -1}\n              />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button\n                ref={refButtonAdd}\n                onClick={addPkg}\n                disabled={editIndex !== -1}\n              >\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item\n              name={formNameNew}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyAlias ? (\n          <Form form={form}>\n            <Form.Item name={formAliasNew} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button\n                ref={refButtonEdit}\n                onClick={onSubmitEditPkg}\n                icon={<CheckOutlined />}\n              />\n              <Button\n                onClick={() => setEditIndex(-1)}\n                icon={<CloseOutlined />}\n              />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          children\n        ) : dataIndex === keyAlias ? (\n          children\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removePkg(key)}\n              disabled={usedPkgIndexList?.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, ExportOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport Link from \"antd/lib/typography/Link\";\nimport { uniq } from \"lodash\";\nimport { createRef, useState } from \"react\";\nimport { formNameNew, formPrevious, formPreviousNew, formVersion, keyActions, keyPrevious, keyVersion, parenError, parenNone, titleActions, titlePrevious, titleVersion } from \"../constants\";\nimport { VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  versionList: VersionV2[];\n  onChange: (versionList: VersionV2[]) => void;\n  onPublish: (key: number) => void;\n  onSelect: (index: number) => void;\n};\n\ntype EditableCellPros = {\n  record: { key: number; version: string; previous: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function VersionTable({\n  versionList,\n  onChange,\n  onPublish,\n  onSelect,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyPrevious, dataIndex: keyPrevious, title: titlePrevious },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addVersion() {\n    form\n      .validateFields([formVersion])\n      .then(() => {\n        const { version: name, previous: indexPrev } = form.getFieldsValue([\n          formVersion,\n          formPrevious,\n        ]);\n        const versionFound = versionList.find(\n          (version) => version.name === name\n        );\n        if (versionFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          versionList.map((version) => version.index)\n        );\n        const versionListNew: VersionV2[] = [\n          ...versionList,\n          { index, name, indexPrev, changeList: [], releaseList: [] },\n        ];\n        form.setFieldsValue({ version: \"\" });\n        onChange(versionListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(key: number) {\n    const versionFound = versionList.find((version) => version.index === key);\n    if (!versionFound) {\n      return;\n    }\n    const { name: nameNew, indexPrev: previousNew } = versionFound;\n    form.setFieldsValue({ nameNew, previousNew });\n    setEditIndex(key);\n  }\n\n  function onClickPublish(key: number) {\n    onPublish(key);\n  }\n\n  function onSubmitEditVersion() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew: name, previousNew: indexPrev } = form.getFieldsValue([\n          formNameNew,\n          formPreviousNew,\n        ]);\n        const nameInUse = versionList.find(\n          (version) => version.index !== editIndex && version.name === name\n        );\n        if (nameInUse) {\n          return;\n        }\n        const indexFound = versionList.findIndex(\n          (version) => version.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const version = versionList[indexFound];\n        const { changeList, releaseList } = version;\n        const versionListNew: VersionV2[] = [\n          ...versionList.slice(0, indexFound),\n          { index: editIndex, name, indexPrev, changeList, releaseList },\n          ...versionList.slice(indexFound + 1),\n        ];\n        onChange(versionListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeVersion(index: number) {\n    const versionFound = versionList.find(\n      (version) => version.indexPrev === index\n    );\n    if (versionFound) {\n      return;\n    }\n    const indexFound = versionList.findIndex(\n      (version) => version.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      ...versionList.slice(indexFound + 1, 0),\n    ];\n    onChange(versionListNew);\n  }\n\n  const usedVersionIndexList = uniq(\n    versionList\n      .filter((version) => {\n        const { index } = version;\n        return !!versionList.find((version) => version.indexPrev === index);\n      })\n      .map((version) => version.index)\n  );\n\n  const dataSource = [\n    { key: -1 },\n    ...versionList.map((version) => {\n      const { index, name, indexPrev } = version;\n      return { key: index, version: name, previous: indexPrev };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellPros) {\n    const { key, previous: indexPrev } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formVersion} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonAdd.current?.click()} disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPrevious} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addVersion} disabled={editIndex !== -1} icon={<PlusOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPreviousNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index} disabled={index === key}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitEditVersion} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <Link onClick={() => onSelect(key)}>{children}</Link>\n        ) : dataIndex === keyPrevious ? (\n          indexPrev === -1 ? (\n            parenNone\n          ) : (\n            versionList.find((version) => version.index === indexPrev)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removeVersion(key)}\n              disabled={usedVersionIndexList.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n            <Button onClick={() => onClickPublish(key)} icon={<ExportOutlined />} />\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import {\n  FileOutlined,\n  FolderOpenOutlined,\n  SaveOutlined,\n} from \"@ant-design/icons\";\nimport { Input, Menu } from \"antd\";\nimport { createRef, useState } from \"react\";\nimport { Enum, Pkg, VersionV2 } from \"../types\";\nimport { load } from \"../utils\";\nimport { Options } from \"./Options\";\n\ntype Props = {\n  customerList: Enum[];\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  versionList: VersionV2[];\n  options: Options;\n  onNew: () => void;\n  onLoad: (content: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n    options?: Options;\n  }) => void;\n};\n\nconst UNTITLED = \"Untitled\";\n\nexport default function AppMenu({\n  customerList,\n  lineupList,\n  pkgList,\n  versionList,\n  options,\n  onNew,\n  onLoad,\n}: Props) {\n  const refLoad = createRef<HTMLInputElement>();\n  let file: File | undefined;\n  const refSave = createRef<HTMLAnchorElement>();\n\n  const [featureName, setFeatureName] = useState(UNTITLED);\n\n  function onChangeFile(e: React.ChangeEvent<HTMLInputElement>) {\n    file = e.target.files?.[0];\n    if (!file) {\n      return;\n    }\n    reader.readAsText(file);\n  }\n\n  function onClickSave() {\n    if (refSave.current === null) {\n      return;\n    }\n    const blob = new Blob(\n      [\n        JSON.stringify({\n          versionList,\n          lineupList,\n          pkgList,\n          customerList,\n          options,\n        }),\n      ],\n      { type: \"application/json\" }\n    );\n    refSave.current.download = `${featureName}.json`;\n    refSave.current.href = window.URL.createObjectURL(blob);\n    refSave.current.click();\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    if (!file) {\n      return;\n    }\n    const result = e.target?.result;\n    if (typeof result !== \"string\") {\n      return;\n    }\n    const { name } = file;\n    const indexLast = name.lastIndexOf(\".\");\n    const featureName = name.substring(0, indexLast);\n    const { versionList, lineupList, pkgList, customerList, options } =\n      load(result);\n    setFeatureName(featureName);\n    onLoad({ customerList, lineupList, pkgList, versionList, options });\n  };\n\n  return (\n    <>\n      <Menu mode=\"horizontal\" selectable={false}>\n        <Menu.Item key=\"new\" onClick={onNew} icon={<FileOutlined />} />\n        <Menu.Item\n          key=\"load\"\n          onClick={() => refLoad.current?.click()}\n          icon={<FolderOpenOutlined />}\n        />\n        <Menu.Item key=\"featureName\" disabled>\n          <Input\n            value={featureName}\n            onChange={(e) => setFeatureName(e.target.value)}\n          />\n        </Menu.Item>\n        <Menu.Item\n          key=\"save\"\n          onClick={() => onClickSave()}\n          icon={<SaveOutlined />}\n        />\n      </Menu>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        hidden\n        ref={refLoad}\n        onChange={onChangeFile}\n      />\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content, jsx-a11y/anchor-is-valid */}\n      <a href=\"#\" ref={refSave} hidden />\n    </>\n  );\n}\n","import { CheckOutlined, CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, Form, Popover, Select, Table, Tag, Typography } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport {\n  formCustomerIndexList,\n  keyActions,\n  keyCustomers,\n  keyDescription,\n  keyVersion,\n  parenError,\n  parenGlobal,\n  titleActions,\n  titleCustomers,\n  titleDescription,\n  titleVersion,\n} from \"../constants\";\nimport {\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  VersionV2,\n} from \"../types\";\nimport { accumulateVersionIndex } from \"../utils\";\nconst { Option } = Select;\nconst { Text } = Typography;\n\ntype ChangePerReleaseTableProps = {\n  customerList: Enum[];\n  pkgList: Pkg[];\n  releaseIndex: number;\n  versionIndex: number;\n  versionList: VersionV2[];\n  onChange: (\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    changeIndex: number;\n    description: string;\n    beforeChange: string;\n    afterChange: string;\n    version: number;\n    customerIndexList: number[];\n  };\n  dataIndex: string;\n  children: any;\n};\n\ntype PopoverContentProps = {\n  beforeChange: string;\n  afterChange: string;\n};\n\nexport default function ChangePerReleaseTable({\n  customerList,\n  pkgList,\n  releaseIndex,\n  versionIndex,\n  versionList,\n  onChange,\n}: ChangePerReleaseTableProps) {\n  const [form] = useForm();\n  const [editVersionIndex, setEditVersionIndex] = useState(-1);\n  const [editChangeIndex, setEditChangeIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }, [customerList, pkgList, releaseIndex, versionIndex, versionList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n  const releaseFound = releaseList.find(\n    (release) => release.index === releaseIndex\n  );\n  const customerIndexListPerChangeList =\n    releaseFound?.customerIndexListPerChangeList ?? [];\n  const pkgIndex = releaseFound?.pkgIndex ?? undefined;\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyDescription, dataIndex: keyDescription, title: titleDescription },\n    { key: keyCustomers, dataIndex: keyCustomers, title: titleCustomers },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function onCancelEdit() {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }\n\n  function onClickEdit(versionIndex: number, changeIndex: number) {\n    const customerIndexListPerChangeFound = customerIndexListPerChangeList.find(\n      (item) => {\n        return (\n          item.versionIndex === versionIndex && item.changeIndex === changeIndex\n        );\n      }\n    );\n    if (customerIndexListPerChangeFound) {\n      const { customerIndexList } = customerIndexListPerChangeFound;\n      form.setFieldsValue({ customerIndexList });\n    }\n    setEditVersionIndex(versionIndex);\n    setEditChangeIndex(changeIndex);\n  }\n\n  function onSubmitChange(versionIndexOfChange: number, changeIndex: number) {\n    const versionOfChangeFound = versionList.find(\n      (version) => version.index === versionIndexOfChange\n    );\n    if (!versionOfChangeFound) {\n      return;\n    }\n    const { changeList } = versionOfChangeFound;\n    const changeFound = changeList.find(\n      (change) => change.index === changeIndex\n    );\n    if (!changeFound) {\n      return;\n    }\n    if (!releaseFound) {\n      return;\n    }\n    const customerIndexListRaw = form.getFieldValue(formCustomerIndexList);\n    const customerIndexList = customerIndexListRaw.includes(-1)\n      ? [-1]\n      : customerIndexListRaw;\n    const { customerIndexListPerChangeList } = releaseFound;\n    const indexFound = customerIndexListPerChangeList.findIndex((item) => {\n      return (\n        item.versionIndex === versionIndexOfChange &&\n        item.changeIndex === changeIndex\n      );\n    });\n    const customerIndexListPerChangeListNew =\n      indexFound === -1\n        ? [\n            ...customerIndexListPerChangeList,\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n          ]\n        : [\n            ...customerIndexListPerChangeList.slice(0, indexFound),\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n            ...customerIndexListPerChangeList.slice(indexFound + 1),\n          ];\n    onChange(customerIndexListPerChangeListNew);\n  }\n\n  /**\n   * versionIndexList[0]: Current version\n   * versionIndexList[n]: Previous version of versionIndexList[n-1]\n   */\n  const versionIndexList = accumulateVersionIndex(versionList, versionIndex);\n  const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n  const changeListFiltered = versionIndexList.reduce(\n    (changeListPrev: (ChangeV2 & { versionIndex: number })[], versionIndex) => {\n      const versionFound = versionList.find(\n        (version) => version.index === versionIndex\n      );\n      if (!versionFound) {\n        return changeListPrev;\n      }\n      const { changeList } = versionFound;\n      const changeListCurr = changeList.filter((change) => {\n        return change.lineupIndex === pkgFound?.lineupIndex;\n      });\n      return [\n        ...changeListPrev,\n        ...changeListCurr.map((change) => {\n          return { versionIndex, ...change };\n        }),\n      ];\n    },\n    []\n  );\n  const dataSource = [\n    ...changeListFiltered.map((change) => {\n      const {\n        index: changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        versionIndex: versionIndexOfChange,\n      } = change;\n      const customerIndexList =\n        customerIndexListPerChangeList.find((item) => {\n          return (\n            item.versionIndex === versionIndexOfChange &&\n            item.changeIndex === changeIndex\n          );\n        })?.customerIndexList ?? [];\n      return {\n        changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        version: versionIndexOfChange,\n        customerIndexList,\n      };\n    }),\n  ];\n\n  const customerIndexListPerRelease = releaseFound?.customerIndexList ?? [];\n  const customerListPerRelease = customerList.filter((customer) => {\n    return customerIndexListPerRelease.includes(customer.index);\n  });\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    // FIXME: No idea why the following check is required to render 'No Data'\n    if (!record) {\n      return (\n        <td colSpan={columns.length} {...restProps}>\n          {children}\n        </td>\n      );\n    }\n    const {\n      changeIndex,\n      beforeChange,\n      afterChange,\n      version: versionIndexOfChange,\n      customerIndexList,\n    } = record;\n    const versionFound = versionList.find((version) => version.index === versionIndexOfChange);\n    return (\n      <td {...restProps}>\n        {editVersionIndex === versionIndexOfChange &&\n        editChangeIndex === changeIndex &&\n        dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name={formCustomerIndexList}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                <Option key={-1} value={-1}>\n                  {parenGlobal}\n                </Option>\n                {customerListPerRelease.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editVersionIndex === versionIndexOfChange &&\n          editChangeIndex === changeIndex &&\n          dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={() => onSubmitChange(versionIndexOfChange, changeIndex)} icon={<CheckOutlined />} />\n              <Button onClick={onCancelEdit} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <>\n            {versionFound?.name ?? parenError}\n            {' '}\n            {versionIndexOfChange === versionIndex ? <Badge color=\"blue\" /> : null}\n          </>\n        ) : dataIndex === keyDescription ? (\n          <Popover\n            content={() => (\n              <PopoverContent\n                beforeChange={beforeChange}\n                afterChange={afterChange}\n              />\n            )}\n          >\n            {children}\n          </Popover>\n        ) : dataIndex === keyCustomers ? (\n          /**TODO\n           * Render previous customers in grey\n           * Render current customers in blue\n           */\n          customerIndexList.map((customerIndex) => {\n            const customerFound =\n              customerIndex === -1\n                ? { name: parenGlobal }\n                : customerList.find(\n                    (customer) => customer.index === customerIndex\n                  );\n            return (\n              <Tag key={customerIndex} color=\"blue\">{customerFound?.name ?? parenError}</Tag>\n            );\n          })\n        ) : dataIndex === keyActions ? (\n          <Button onClick={() => onClickEdit(versionIndexOfChange, changeIndex)} icon={<EditOutlined />} />\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n\n  function PopoverContent({ beforeChange, afterChange }: PopoverContentProps) {\n    return (\n      <>\n        <Text strong>Before change</Text>\n        <br />\n        <TextArea value={beforeChange} cols={80} autoSize />\n        <br />\n        <Text strong>After change</Text>\n        <br />\n        <TextArea value={afterChange} cols={80} autoSize />\n      </>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, MenuOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport {\n  useSensors,\n  useSensor,\n  PointerSensor,\n  KeyboardSensor,\n  DndContext,\n  closestCenter,\n  DragOverlay,\n} from \"@dnd-kit/core\";\nimport {\n  sortableKeyboardCoordinates,\n  arrayMove,\n  SortableContext,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { Button, Form, Select, Table, Tag } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useEffect, useState } from \"react\";\nimport {\n  invalidSortable,\n  keyActions,\n  keyCustomers,\n  keyDragHandle,\n  keyPackage,\n  parenError,\n  parenNone,\n  titleActions,\n  titleCustomers,\n  titlePackage,\n} from \"../constants\";\nimport {\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  ReleaseV2,\n  VersionV2,\n} from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nimport ChangePerReleaseTable from \"./ChangePerReleaseTable\";\n\nconst { Option } = Select;\n\ntype Props = {\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  customerList: Enum[];\n  usedPkgIndexList: number[];\n  versionList: VersionV2[];\n  versionIndex: number;\n  onChange: (releaseList: ReleaseV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    package: number;\n    pkgName: string;\n    customers: number[];\n    lineup: string;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ReleaseTable({\n  lineupList,\n  pkgList,\n  customerList,\n  usedPkgIndexList,\n  versionList,\n  versionIndex,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n  // ID to render overlay.\n  const [activeId, setActiveId] = useState(null);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  function onDragStart(event: any) {\n    const { active } = event;\n    setActiveId(active.id);\n  }\n\n  function onDragEnd(event: any) {\n    const { active, over } = event;\n    if (active.id !== \"-1\" && over.id !== \"-1\" && active.id !== over.id) {\n      const oldIndex = releaseList.findIndex(\n        (release) => release.index.toString() === active.id\n      );\n      const newIndex = releaseList.findIndex(\n        (release) => release.index.toString() === over.id\n      );\n      const releaseListNew = arrayMove(releaseList, oldIndex, newIndex);\n      onChange(releaseListNew);\n    }\n    // Stop overlay.\n    setActiveId(null);\n  }\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList, pkgList, customerList, versionList, versionIndex]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n\n  const columns: any[] = [\n    { key: keyPackage, dataIndex: keyPackage, title: titlePackage },\n    {\n      key: keyCustomers,\n      dataIndex: keyCustomers,\n      title: titleCustomers,\n      width: \"50%\",\n    },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n    { key: keyDragHandle, dataIndex: keyDragHandle, title: \"\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addRelease() {\n    form\n      .validateFields([\"pkgIndex\", \"customerList\"])\n      .then(() => {\n        const { pkgIndex, customerList: customerIndexList } =\n          form.getFieldsValue([\"pkgIndex\", \"customerList\"]);\n        if (pkgIndex === -1) {\n          return;\n        }\n        // Check if package is already in use\n        const pkgInUse = versionList.find((version) => {\n          const { releaseList } = version;\n          return releaseList.find((release) => release.pkgIndex === pkgIndex);\n        });\n        if (pkgInUse) {\n          return;\n        }\n        const index = findEmptyIndex(\n          releaseList.map((release) => release.index)\n        );\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList,\n          {\n            index,\n            pkgIndex,\n            customerIndexList,\n            customerIndexListPerChangeList: [],\n          },\n        ];\n        onChange(releaseListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onChangeCustomerIndexListPerChangeList(\n    releaseIndex: number,\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === releaseIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const release = releaseList[indexFound];\n    const { index, pkgIndex, customerIndexList } = release;\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      { index, pkgIndex, customerIndexList, customerIndexListPerChangeList },\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  function onClickEdit(index: number) {\n    const releaseFound = releaseList.find((release) => release.index === index);\n    if (!releaseFound) {\n      return;\n    }\n    const { pkgIndex: pkgIndexNew, customerIndexList: customerIndexListNew } =\n      releaseFound;\n    const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndexNew);\n    if (!pkgFound) {\n      return;\n    }\n    form.setFieldsValue({ pkgIndexNew, customerIndexListNew });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditRelease() {\n    form\n      .validateFields([\"pkgIndexNew\", \"customerIndexListNew\"])\n      .then(() => {\n        const { pkgIndexNew, customerIndexListNew } = form.getFieldsValue([\n          \"pkgIndexNew\",\n          \"customerIndexListNew\",\n        ]);\n        const releaseFound = releaseList.find(\n          (release) =>\n            release.index !== editIndex && release.pkgIndex === pkgIndexNew\n        );\n        if (releaseFound) {\n          return;\n        }\n        const indexFound = releaseList.findIndex(\n          (release) => release.index === editIndex\n        );\n        const { customerIndexListPerChangeList } = releaseList[indexFound];\n        if (indexFound === -1) {\n          return;\n        }\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList.slice(0, indexFound),\n          {\n            index: editIndex,\n            pkgIndex: pkgIndexNew,\n            customerIndexList: customerIndexListNew,\n            customerIndexListPerChangeList,\n          },\n          ...releaseList.slice(indexFound + 1),\n        ];\n        onChange(releaseListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeRelease(index: number) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...releaseList.map((release) => {\n      const { index: key, pkgIndex, customerIndexList: customers } = release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      const pkgName = pkgFound?.name;\n      const lineupIndex = pkgFound?.lineupIndex;\n      const lineup =\n        lineupIndex === -1\n          ? parenNone\n          : lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError;\n      return { key, package: pkgIndex, pkgName, customers, lineup };\n    }),\n  ];\n\n  const releaseToDragFound = releaseList.find((release) => release.index === Number(activeId));\n  const pkgToDragFound = pkgList.find((pkg) => pkg.index === releaseToDragFound?.pkgIndex);\n  const pkgNameToDrag = pkgToDragFound?.name;\n  const lineupIndexToDrag = pkgToDragFound?.lineupIndex;\n  const lineupToDrag = lineupList.find((lineup) => lineup.index === lineupIndexToDrag)?.name;\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        components={{\n          body: {\n            wrapper: DraggableWrapper,\n            row: DraggableRow,\n            cell: EditableCell,\n          },\n        }}\n        expandable={{\n          expandedRowRender,\n          rowExpandable: (record) => record.key !== -1,\n        }}\n        pagination={false}\n        size=\"small\"\n      />\n      {/* Render overlay component. */}\n      {\n        pkgToDragFound ? (\n          <DragOverlay\n            style={{\n              backgroundColor: \"#e0e0e07f\",\n              border: \"1px solid #e9e9e9\",\n              display: \"flex\",\n              alignItems: \"center\",\n              paddingLeft: 30,\n            }}\n          >\n            {pkgNameToDrag} <Tag>{lineupToDrag}</Tag>\n          </DragOverlay>\n        ) : null\n      }\n    </DndContext>\n  );\n\n  function DraggableWrapper(props: any) {\n    const { children, ...restProps } = props;\n    return (\n      <SortableContext\n        // `children[1]` is `dataSource`.\n        items={children[1].map((child: any) => child.key.toString())}\n        strategy={verticalListSortingStrategy}\n        {...restProps}\n      >\n        <tbody {...restProps}>\n          {\n            // This invokes `Table.components.body.row` for each element of `children`.\n            children\n          }\n        </tbody>\n      </SortableContext>\n    );\n  }\n\n  function DraggableRow(props: any) {\n    const { children, style, ...restProps } = props;\n    const id = props[\"data-row-key\"]?.toString() ?? invalidSortable;\n    const { attributes, listeners, setNodeRef } = useSortable({ id });\n    const styleRowBold = Number(id) > -1 ? { fontWeight: \"bold\" } : null;\n    const styleNew = Object.assign({}, style, styleRowBold);\n    return (\n      <tr ref={setNodeRef} {...attributes} {...restProps} style={styleNew}>\n        {id === invalidSortable\n          ? children\n          : children.map((child: any) => {\n              const { children, ...restProps } = child;\n              const { key } = restProps;\n              return key === keyDragHandle ? (\n                <td {...listeners} {...restProps}>\n                  {child}\n                </td>\n              ) : (\n                <td {...restProps}>{child}</td>\n              );\n            })}\n      </tr>\n    );\n  }\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    if (!record) {\n      return children;\n    }\n    const { key, pkgName, customers: customerIndexList, lineup } = record;\n    return (\n      <>\n        {/* <td {...restProps}> */}\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"pkgIndex\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select disabled={editIndex !== -1}>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option\n                      key={index}\n                      value={index}\n                      disabled={usedPkgIndexList.includes(index)}\n                    >\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerList\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n                disabled={editIndex !== -1}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addRelease} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyDragHandle ? null : editIndex ===\n            key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name=\"pkgIndexNew\">\n              <Select>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option key={index} value={index}>\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerIndexListNew\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditRelease}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          <>\n            {pkgName} <Tag>{lineup}</Tag>\n          </>\n        ) : dataIndex === keyCustomers ? (\n          customerIndexList\n            .map((customerIndex) => {\n              const customerFound = customerList.find(\n                (customer) => customer.index === customerIndex\n              );\n              return (\n                customerFound && (\n                  <Tag key={customerFound.index}>{customerFound.name}</Tag>\n                )\n              );\n            })\n            .filter((customerTag) => !!customerTag)\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button onClick={() => removeRelease(key)}>\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : dataIndex === keyDragHandle ? (\n          <MenuOutlined style={{ cursor: \"grab\" }} />\n        ) : (\n          children\n        )}\n        {/* </td> */}\n      </>\n    );\n  }\n\n  function expandedRowRender(record: any) {\n    const { key: releaseIndex } = record;\n    return (\n      <td colSpan={columns.length + 1}>\n        <ChangePerReleaseTable\n          customerList={customerList}\n          pkgList={pkgList}\n          releaseIndex={releaseIndex}\n          versionIndex={versionIndex}\n          versionList={versionList}\n          onChange={(customerIndexListPerChangeList) =>\n            onChangeCustomerIndexListPerChangeList(\n              releaseIndex,\n              customerIndexListPerChangeList\n            )\n          }\n        />\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport { formAfterChange, formAfterChangeNew, formBeforeChange, formBeforeChangeNew, formDescription, formDescriptionNew, formLineup, formLineupNew, keyActions, keyAfterChange, keyBeforeChange, keyDescription, keyLineup, parenError, parenNone, titleActions, titleAfterChange, titleBeforeChange, titleDescription, titleLineup } from \"../constants\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nconst { Option } = Select;\n\ntype Props = {\n  versionIndex: number;\n  versionList: VersionV2[];\n  lineupList: Enum[];\n  usedChangeIndexWithVersionIndexList: Omit<CustomerIndexListPerChange, \"customerIndexList\">[];\n  onChange: (changeList: ChangeV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    descriptoin: string;\n    beforeChange: string;\n    afterChange: string;\n    lineup: number;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ChangeTable({\n  versionIndex,\n  versionList,\n  lineupList,\n  usedChangeIndexWithVersionIndexList,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [versionIndex, versionList, lineupList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const changeList = versionFound?.changeList ?? [];\n\n  const columns: any[] = [\n    {\n      key: keyDescription,\n      dataIndex: keyDescription,\n      title: titleDescription,\n      width: \"25%\",\n    },\n    {\n      key: keyBeforeChange,\n      dataIndex: keyBeforeChange,\n      title: titleBeforeChange,\n      width: \"25%\",\n    },\n    {\n      key: keyAfterChange,\n      dataIndex: keyAfterChange,\n      title: titleAfterChange,\n      width: \"25%\",\n    },\n    { key: keyLineup, dataIndex: keyLineup, title: titleLineup, width: \"12.5%\" },\n    { key: keyActions, dataIndex: keyActions, title: titleActions, width: \"12.5%\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addChange() {\n    form\n      .validateFields([formDescription, formLineup])\n      .then(() => {\n        const {\n          description,\n          beforeChange,\n          afterChange,\n          lineup: lineupIndex,\n        } = form.getFieldsValue([\n          formDescription,\n          formBeforeChange,\n          formAfterChange,\n          formLineup,\n        ]);\n        const index = findEmptyIndex(changeList.map((change) => change.index));\n        const changeListNew: ChangeV2[] = [\n          ...changeList,\n          { index, description, beforeChange, afterChange, lineupIndex },\n        ];\n        onChange(changeListNew);\n        form.setFieldsValue({\n          description: \"\",\n          beforeChange: \"\",\n          afterChange: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const changeFound = changeList.find((change) => change.index === index);\n    if (!changeFound) {\n      return;\n    }\n    const {\n      description: descriptionNew,\n      beforeChange: beforeChangeNew,\n      afterChange: afterChangeNew,\n      lineupIndex: lineupNew,\n    } = changeFound;\n    form.setFieldsValue({\n      descriptionNew,\n      beforeChangeNew,\n      afterChangeNew,\n      lineupNew,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditChange() {\n    form\n      .validateFields([\n        formDescriptionNew,\n        formLineupNew,\n      ])\n      .then(() => {\n        const {\n          descriptionNew: description,\n          beforeChangeNew: beforeChange,\n          afterChangeNew: afterChange,\n          lineupNew: lineupIndex,\n        } = form.getFieldsValue([\n          formDescriptionNew,\n          formBeforeChangeNew,\n          formAfterChangeNew,\n          formLineupNew,\n        ]);\n        const indexFound = changeList.findIndex(\n          (change) => change.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const changeListNew: ChangeV2[] = [\n          ...changeList.slice(0, indexFound),\n          {\n            index: editIndex,\n            description,\n            beforeChange,\n            afterChange,\n            lineupIndex,\n          },\n          ...changeList.slice(indexFound + 1),\n        ];\n        onChange(changeListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeChange(index: number) {\n    const indexFound = changeList.findIndex((change) => change.index === index);\n    const changeListNew = [\n      ...changeList.slice(0, indexFound),\n      ...changeList.slice(indexFound + 1),\n    ];\n    onChange(changeListNew);\n  }\n\n  const dataSource: any[] = [\n    { key: -1 },\n    ...changeList.map((change) => {\n      const {\n        index: key,\n        description,\n        beforeChange,\n        afterChange,\n        lineupIndex: lineup,\n      } = change;\n      return { key, description, beforeChange, afterChange, lineup };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps} style={{ verticalAlign: \"top\" }}>\n        {key === -1 && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescription}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addChange} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescriptionNew}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={onSubmitEditChange} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyDescription ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyBeforeChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyAfterChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n              <Button\n                onClick={() => removeChange(key)} icon={<DeleteOutlined />}\n                disabled={\n                  !!usedChangeIndexWithVersionIndexList.find((item) => {\n                    return item.versionIndex === versionIndex && item.changeIndex === key\n                  })\n                }\n              />\n            </Form.Item>\n          </Form>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { Enum, Pkg, VersionV2 } from \"./types\";\n\nexport const customerListInit: Enum[] = [];\nexport const lineupListInit: Enum[] = [];\nexport const pkgListInit: Pkg[] = [];\nexport const versionListInit: VersionV2[] = [];\n","import { Form, Radio, RadioChangeEvent } from \"antd\";\nimport React from \"react\";\n\nexport type Options = {\n  tagStyle: \"comma\" | \"separate\";\n};\n\nexport default function Options({\n  options,\n  onChangeOptions,\n}: {\n  options: Options;\n  onChangeOptions: React.Dispatch<React.SetStateAction<Options>>;\n}) {\n  const { tagStyle } = options;\n\n  function onChangeTagStyle(e: RadioChangeEvent) {\n    onChangeOptions({ ...options, tagStyle: e.target.value });\n  }\n\n  return (\n    <Form>\n      <Form.Item label=\"Tab style\">\n        <Radio.Group value={tagStyle} onChange={onChangeTagStyle}>\n          <Radio value=\"comma\">&lt;A, B, C&gt;</Radio>\n          <Radio value=\"separate\">&lt;A&gt;&lt;B&gt;&lt;C&gt;</Radio>\n        </Radio.Group>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Button, Col, Collapse, Modal, Row, Space, Tabs, Tag } from \"antd\";\nimport { CopyOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport EnumTable from \"./components/EnumTable\";\nimport PkgTable from \"./components/PkgTable\";\nimport {\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  ReleaseV2,\n  VersionV2,\n} from \"./types\";\nimport Title from \"antd/lib/typography/Title\";\nimport Link from \"antd/lib/typography/Link\";\nimport VersionTable from \"./components/VersionTable\";\nimport AppMenu from \"./components/AppMenu\";\nimport ReleaseTable from \"./components/ReleaseTable\";\nimport ChangeTable from \"./components/ChangeTable\";\nimport {\n  customerListInit,\n  lineupListInit,\n  pkgListInit,\n  versionListInit,\n} from \"./init\";\nimport { uniq, uniqWith } from \"lodash\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { publish } from \"./utils\";\nimport {\n  keyChanges,\n  keyReleases,\n  keyVersions,\n  parenError,\n  keyHistory,\n  keyLineups,\n  keyPackages,\n  keyCustomers,\n  titleHistory,\n  titleVersions,\n  titleChanges,\n  titleReleases,\n  titleCustomers,\n  titleCustomer,\n  titleLineups,\n  titleLineup,\n  titlePackages,\n  titleOptions,\n  keyOptions,\n} from \"./constants\";\nimport Options, { Options as OptionsType } from \"./components/Options\";\nconst { Panel } = Collapse;\n\nfunction App() {\n  const [options, setOptions] = useState<OptionsType>({ tagStyle: \"comma\" });\n  const [versionList, setVersionList] = useState<VersionV2[]>(versionListInit);\n  const [versionIndex, setVersionIndex] = useState(-1);\n  const [lineupList, setLineupList] = useState<Enum[]>(lineupListInit);\n  const [pkgList, setPkgList] = useState<Pkg[]>(pkgListInit);\n  const [customerList, setCustomerList] = useState<Enum[]>(customerListInit);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [releaseHistory, setReleaseHistory] = useState(\"\");\n\n  function onChangeChangeList(changeList: ChangeV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.changeList = changeList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeReleaseList(releaseList: ReleaseV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.releaseList = releaseList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeVersionList(versionList: VersionV2[]) {\n    const versionFound = versionList.find(\n      (version) => version.index === versionIndex\n    );\n    if (!versionFound) {\n      setVersionIndex(-1);\n    }\n    setVersionList(versionList);\n  }\n\n  function onLoad({\n    customerList,\n    lineupList,\n    pkgList,\n    versionList,\n    options,\n  }: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n    options?: OptionsType;\n  }) {\n    setVersionIndex(-1);\n    setCustomerList(customerList);\n    setLineupList(lineupList);\n    setPkgList(pkgList);\n    setVersionList(versionList);\n    setOptions(options ?? { tagStyle: \"comma\" });\n  }\n\n  function onNew() {\n    setVersionIndex(-1);\n    setCustomerList([]);\n    setLineupList([]);\n    setPkgList([]);\n    setVersionList([]);\n  }\n\n  function onPublish(versionIndex: number) {\n    const releaseHistory = publish(\n      versionList,\n      versionIndex,\n      lineupList,\n      pkgList,\n      customerList,\n      options.tagStyle\n    );\n    setReleaseHistory(releaseHistory ?? parenError);\n    setModalVisible(true);\n  }\n\n  function onSelectVersion(index: number) {\n    setVersionIndex(index);\n  }\n\n  type ChangeIndexWithVersionIndex = Omit<\n    CustomerIndexListPerChange,\n    \"customerIndexList\"\n  >;\n  const usedChangeIndexWithVersionIndexList: ChangeIndexWithVersionIndex[] =\n    uniqWith(\n      versionList.reduce(\n        (changeIndexListPrev: ChangeIndexWithVersionIndex[], version) => {\n          const { releaseList } = version;\n          const changeIndexListPerReleaseList = releaseList.reduce(\n            (\n              changeIndexListPerReleasePrev: ChangeIndexWithVersionIndex[],\n              release\n            ) => {\n              const { customerIndexListPerChangeList } = release;\n              return [\n                ...changeIndexListPerReleasePrev,\n                ...customerIndexListPerChangeList\n                  .filter((item) => {\n                    const { customerIndexList } = item;\n                    return customerIndexList && customerIndexList.length;\n                  })\n                  .map((item) => {\n                    const { versionIndex, changeIndex } = item;\n                    return { versionIndex, changeIndex };\n                  }),\n              ];\n            },\n            []\n          );\n          return [...changeIndexListPrev, ...changeIndexListPerReleaseList];\n        },\n        []\n      ),\n      (a, b) =>\n        a.versionIndex === b.versionIndex && a.changeIndex === b.changeIndex\n    );\n  const usedLineupIndexList = uniq([\n    ...versionList.reduce((lineupIndexListPrev: number[], version) => {\n      const { changeList } = version;\n      return [\n        ...lineupIndexListPrev,\n        ...changeList.map((change) => {\n          return change.lineupIndex;\n        }),\n      ];\n    }, []),\n    ...pkgList.map((pkg) => pkg.lineupIndex),\n  ]);\n  const usedPkgIndexList = uniq(\n    versionList.reduce((pkgIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...pkgIndexListPrev,\n        ...releaseList.map((release) => release.pkgIndex),\n      ];\n    }, [])\n  );\n  const usedCustomerIndexList = uniq(\n    versionList.reduce((customerIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...customerIndexListPrev,\n        ...releaseList.reduce(\n          (customerIndexListPerReleasePrev: number[], release) => {\n            const { customerIndexList, customerIndexListPerChangeList } =\n              release;\n            return [\n              ...customerIndexListPerReleasePrev,\n              ...customerIndexList,\n              ...customerIndexListPerChangeList.reduce(\n                (customerIndexListPerChangeListPrev: number[], item) => {\n                  const { customerIndexList } = item;\n                  return [\n                    ...customerIndexListPerChangeListPrev,\n                    ...customerIndexList,\n                  ];\n                },\n                []\n              ),\n            ];\n          },\n          []\n        ),\n      ];\n    }, [])\n  );\n\n  const versionCurr = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const versionPrev =\n    !versionCurr || versionCurr.indexPrev === -1\n      ? undefined\n      : versionList.find(\n          (version) => version.index === versionCurr.indexPrev\n        ) ?? -1;\n  return (\n    <div className=\"App\">\n      <AppMenu\n        customerList={customerList}\n        lineupList={lineupList}\n        pkgList={pkgList}\n        versionList={versionList}\n        options={options}\n        onNew={onNew}\n        onLoad={onLoad}\n      />\n      <Row>\n        <Col span={16} offset={4}>\n          <Tabs defaultActiveKey={keyHistory}>\n            <Tabs.TabPane tab={titleHistory} key={keyHistory}>\n              <Title level={2}>History</Title>\n              <Collapse defaultActiveKey={[keyVersions]}>\n                <Panel key={keyVersions} header={titleVersions}>\n                  <VersionTable\n                    versionList={versionList}\n                    onChange={onChangeVersionList}\n                    onPublish={onPublish}\n                    onSelect={onSelectVersion}\n                  />\n                </Panel>\n              </Collapse>\n              {!versionCurr ? null : (\n                <>\n                  <Title level={3}>{versionCurr.name}</Title>\n                  {!versionPrev ? null : (\n                    <>\n                      Previous{\" \"}\n                      <Tag>\n                        {versionPrev === -1 ? parenError : versionPrev.name}\n                      </Tag>\n                    </>\n                  )}\n                  <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                    <Collapse defaultActiveKey={[keyChanges]}>\n                      <Panel key={keyChanges} header={titleChanges}>\n                        <ChangeTable\n                          versionIndex={versionIndex}\n                          versionList={versionList}\n                          lineupList={lineupList}\n                          usedChangeIndexWithVersionIndexList={\n                            usedChangeIndexWithVersionIndexList\n                          }\n                          onChange={onChangeChangeList}\n                        />\n                      </Panel>\n                    </Collapse>\n                    <Collapse defaultActiveKey={[keyReleases]}>\n                      <Panel key={keyReleases} header={titleReleases}>\n                        <ReleaseTable\n                          lineupList={lineupList}\n                          pkgList={pkgList}\n                          customerList={customerList}\n                          usedPkgIndexList={usedPkgIndexList}\n                          versionList={versionList}\n                          versionIndex={versionIndex}\n                          onChange={onChangeReleaseList}\n                          // onChangeVersionList={setVersionList}\n                        />\n                      </Panel>\n                    </Collapse>\n                  </Space>\n                </>\n              )}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleCustomers} key={keyCustomers}>\n              <Title level={2}>Customers</Title>\n              <EnumTable\n                title={titleCustomer}\n                enumList={customerList}\n                onChange={setCustomerList}\n                usedIndexList={usedCustomerIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleLineups} key={keyLineups}>\n              <Title level={2}>Lineups</Title>\n              <EnumTable\n                title={titleLineup}\n                enumList={lineupList}\n                onChange={setLineupList}\n                usedIndexList={usedLineupIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titlePackages} key={keyPackages}>\n              <Title level={2}>Packages</Title>\n              <PkgTable\n                pkgList={pkgList}\n                lineupList={lineupList}\n                onChange={setPkgList}\n                usedPkgIndexList={usedPkgIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleOptions} key={keyOptions}>\n              <Title level={2}>Options</Title>\n              <Options options={options} onChangeOptions={setOptions} />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"1em\" }}>\n        <Col span={24} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Link\n            href=\"https://github.com/gsongsong/rhm\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <GithubOutlined />\n          </Link>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Release history\"\n        footer={\n          <Button onClick={() => navigator.clipboard.writeText(releaseHistory)}>\n            <CopyOutlined />\n            Copy to clipboard\n          </Button>\n        }\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        width={960}\n      >\n        <TextArea value={releaseHistory} cols={80} autoSize={true} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}