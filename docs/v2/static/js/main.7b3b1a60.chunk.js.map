{"version":3,"sources":["constants.ts","utils.ts","components/EnumTable.tsx","components/PkgTable.tsx","components/VersionTable.tsx","components/AppMenu.tsx","components/ChangePerReleaseTable.tsx","components/ReleaseTable.tsx","components/ChangeTable.tsx","init.ts","App.tsx","reportWebVitals.js","index.js"],"names":["formAfterChange","formAfterChangeNew","formBeforeChange","formBeforeChangeNew","formCustomerIndexList","formDescription","formDescriptionNew","formLineup","formLineupNew","formName","formNameNew","formPrevious","formPreviousNew","formVersion","invalidSortable","keyActions","keyAfterChange","keyBeforeChange","keyChanges","keyCustomers","keyDescription","keyDragHandle","keyHistory","keyLineup","keyName","keyPackage","keyPrevious","keyReleases","keyVersion","keyVersions","parenGlobal","parenNone","parenError","titleActions","titleAfterChange","titleBeforeChange","titleCustomers","titleDescription","titleLineup","titlePackage","titlePrevious","titleVersion","accumulateChangeList","changeListAccumulated","customerIndex","versionList","indexPrev","lineupIndex","versionNext","find","version","index","releaseList","changeList","rel","customerIndexList","includes","forEach","release","customerIndexListPerChangeList","changeListToAccumulate","filterChangeListToAccumulate","unshift","i","changeSource","slice","item","versionIndex","splice","length","accumulateVersionIndex","versionIndexList","versionFound","push","flatten","map","filter","change","customerIndexListPerChange","versionIndexOfChange","changeIndex","findEmptyIndex","indexList","sort","a","b","reduce","indent","input","replace","publishPerCustomer","lineupList","pkgList","customer","candidateLineupIndexList","lineup","releaseHistoryPerLineupList","releaseHistory","publishPerLineup","releaseHistoryPerLineup","lineupFound","lineupName","name","join","changeListPerPkgList","releaseFound","pkgIndex","pkg","pkgFound","pkgName","undefined","changeListPerPkg","changes","description","beforeChange","afterChange","listToChanges","trim","EnumTable","title","enumList","onChange","usedIndexList","useForm","form","refButtonAdd","createRef","refButtonEdit","useState","editIndex","setEditIndex","columns","key","dataIndex","column","onCell","record","addEnumItem","validateFields","then","getFieldValue","enumItem","enumListNew","localeCompare","setFieldsValue","catch","reason","console","error","onSubmitRename","nameNew","indexFound","findIndex","dataSource","components","body","cell","children","restProps","onFinish","Item","rules","required","help","onPressEnter","current","click","disabled","ref","onClick","PlusOutlined","CheckOutlined","CloseOutlined","onClickEdit","EditOutlined","removeEnumItem","DeleteOutlined","pagination","size","Option","Select","PkgTable","usedPkgIndexList","useEffect","addPkg","getFieldsValue","pkgListNew","onSubmitEditPkg","lineupIndexNew","lineupNew","package","initialValue","value","icon","removePkg","VersionTable","onPublish","onSelect","addVersion","previous","versionListNew","onSubmitEditVersion","previousNew","usedVersionIndexList","uniq","removeVersion","onClickPublish","ExportOutlined","AppMenu","file","customerList","onNew","onLoad","refLoad","refSave","featureName","setFeatureName","reader","FileReader","onload","e","result","target","indexLast","lastIndexOf","substring","parsed","JSON","parse","versionName","versionIndexPrev","targetCustomerList","targetCustomer","releaseIndex","customerName","customerIndexListPerChangeFound","load","mode","selectable","FileOutlined","FolderOpenOutlined","blob","Blob","stringify","type","download","href","window","URL","createObjectURL","onClickSave","SaveOutlined","accept","hidden","files","readAsText","Text","Typography","ChangePerReleaseTable","editVersionIndex","setEditVersionIndex","editChangeIndex","setEditChangeIndex","onCancelEdit","changeListFiltered","changeListPrev","changeListCurr","customerIndexListPerRelease","customerListPerRelease","colSpan","allowClear","filterOption","option","toLocaleLowerCase","indexOf","versionOfChangeFound","customerIndexListRaw","customerIndexListPerChangeListNew","onSubmitChange","color","content","PopoverContent","customerFound","strong","cols","autoSize","ReleaseTable","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","width","addRelease","releaseListNew","onChangeCustomerIndexListPerChangeList","onSubmitEditRelease","pkgIndexNew","customerIndexListNew","customers","releaseToDragFound","Number","pkgToDragFound","pkgNameToDrag","lineupIndexToDrag","lineupToDrag","collisionDetection","closestCenter","onDragStart","event","active","id","onDragEnd","over","oldIndex","toString","newIndex","arrayMove","wrapper","props","items","child","strategy","verticalListSortingStrategy","row","style","useSortable","attributes","listeners","setNodeRef","styleRowBold","fontWeight","styleNew","Object","assign","customerTag","removeRelease","MenuOutlined","cursor","expandable","expandedRowRender","rowExpandable","backgroundColor","border","display","alignItems","paddingLeft","ChangeTable","usedChangeIndexWithVersionIndexList","addChange","changeListNew","onSubmitEditChange","descriptionNew","beforeChangeNew","afterChangeNew","verticalAlign","changeFound","removeChange","customerListInit","lineupListInit","pkgListInit","versionListInit","Panel","Collapse","App","setVersionList","setVersionIndex","setLineupList","setPkgList","setCustomerList","modalVisible","setModalVisible","setReleaseHistory","uniqWith","changeIndexListPrev","changeIndexListPerReleaseList","changeIndexListPerReleasePrev","usedLineupIndexList","lineupIndexListPrev","pkgIndexListPrev","usedCustomerIndexList","customerIndexListPrev","customerIndexListPerReleasePrev","customerIndexListPerChangeListPrev","versionCurr","versionPrev","className","span","offset","defaultActiveKey","TabPane","tab","level","header","v1","index1","indexPrev1","v2","index2","indexPrev2","isVersionListCircular","releaseHistoryPerCustomerIndexListList","cil1","rh1","j","cil2","relaseHistoryPerCustomerIndexList","customerNameJoined","publish","direction","marginTop","justifyContent","GithubOutlined","footer","navigator","clipboard","writeText","CopyOutlined","visible","onCancel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b3b1a60.chunk.js","sourcesContent":["export const formAfterChange = \"afterChange\";\nexport const formAfterChangeNew = \"afterChangeNew\";\nexport const formBeforeChange = \"beforeChange\";\nexport const formBeforeChangeNew = \"beforeChangeNew\";\nexport const formCustomerIndexList = \"customerIndexList\";\nexport const formDescription = \"description\";\nexport const formDescriptionNew = \"descriptionNew\";\nexport const formLineup = \"lineup\";\nexport const formLineupNew = \"lineupNew\";\nexport const formName = \"name\";\nexport const formNameNew = \"nameNew\";\nexport const formPrevious = \"previous\";\nexport const formPreviousNew = \"previousNew\";\nexport const formVersion = \"version\";\n\nexport const invalidSortable = \"invalidSortable\";\n\nexport const keyActions = \"actions\";\nexport const keyAfterChange = \"afterChange\";\nexport const keyBeforeChange = \"beforeChange\";\nexport const keyChanges = \"changes\";\nexport const keyCustomers = \"customers\";\nexport const keyDescription = \"description\";\nexport const keyDragHandle = \"dragHandle\";\nexport const keyHistory = \"history\";\nexport const keyLineup = \"lineup\";\nexport const keyLineups = \"lineups\";\nexport const keyName = \"name\";\nexport const keyPackage = \"package\";\nexport const keyPackages = \"packages\";\nexport const keyPrevious = \"previous\";\nexport const keyReleases = \"releases\"\nexport const keyVersion = \"version\";\nexport const keyVersions = \"versions\";\n\nexport const parenGlobal = \"(Global)\";\nexport const parenNone = \"(None)\";\nexport const parenError = \"(Error)\";\n\nexport const titleActions = \"Actions\";\nexport const titleAfterChange = \"After change\";\nexport const titleBeforeChange = \"Before change\";\nexport const titleChanges = \"Changes\";\nexport const titleCustomer =\" Customer\";\nexport const titleCustomers = \"Customers\";\nexport const titleDescription = \"Description\";\nexport const titleHistory = \"History\";\nexport const titleLineup = \"Lineup\";\nexport const titleLineups = \"Lineups\";\nexport const titlePackage = \"Package\";\nexport const titlePackages = \"Packages\";\nexport const titlePrevious = \"Previous\";\nexport const titleReleases = \"Releases\";\nexport const titleVersion = \"Version\";\nexport const titleVersions = \"Versions\";\n","import { flatten, uniq } from \"lodash\";\nimport {\n  Change,\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  OldCustomer,\n  OldPkg,\n  OldVersion,\n  Pkg,\n  Release,\n  ReleaseV2,\n  Version,\n  VersionV2,\n} from \"./types\";\n\ntype ReleaseHistoryPerCustomerIndexList = {\n  customerIndexList: number[];\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerLineupIndex = {\n  lineupIndex: number;\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerPkg = {\n  pkgName: string;\n  changeList: ChangeV2[];\n};\n\nfunction accumulateChangeList(\n  changeListAccumulated: (ChangeV2 & { versionIndex: number | undefined })[],\n  customerIndex: number,\n  versionList: VersionV2[],\n  indexPrev: number,\n  lineupIndex: number\n) {\n  let versionNext = versionList.find((version) => version.index === indexPrev);\n  while (versionNext) {\n    const { indexPrev, changeList, releaseList } = versionNext;\n    /**\n     * If this version is released in a certain package to a given customer,\n     * this version shall not be accumulated\n     */\n    if (releaseList.find((rel) => rel.customerIndexList.includes(customerIndex))) {\n      break;\n    }\n    // Accumulate all changes of releases in a given version\n    releaseList.forEach((release) => {\n      const { customerIndexListPerChangeList } = release;\n      const changeListToAccumulate = filterChangeListToAccumulate(\n        customerIndex,\n        versionList,\n        customerIndexListPerChangeList,\n        lineupIndex,\n      );\n      changeListAccumulated.unshift(...changeListToAccumulate);\n    });\n    for (let i = changeListAccumulated.length - 1; i >= 0; i -= 1) {\n      const changeSource = changeListAccumulated[i];\n      const changeTarget = changeListAccumulated.slice(0, i).find((item) => {\n        return item.versionIndex === changeSource.versionIndex && item.index === changeSource.index;\n      });\n      if (changeTarget) {\n        changeListAccumulated.splice(i, 1);\n      }\n    }\n    versionNext = versionList.find((version) => version.index === indexPrev);\n  }\n  return versionNext;\n}\n\nexport function accumulateVersionIndex(\n  versionList: VersionV2[],\n  versionIndex: number\n): number[] {\n  const versionIndexList: number[] = [];\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  if (!versionFound) {\n    return versionIndexList;\n  }\n  versionIndexList.push(versionIndex);\n  const { indexPrev } = versionFound;\n  versionIndexList.push(...accumulateVersionIndex(versionList, indexPrev));\n  return versionIndexList;\n}\n\nfunction filterChangeListToAccumulate(\n  customerIndex: number,\n  versionList: VersionV2[],\n  customerIndexListPerChangeList: CustomerIndexListPerChange[],\n  lineupIndex: number,\n) {\n  return flatten(versionList.map((version) => {\n    const { index: versionIndex, changeList } = version;\n    const changeListFiltered = changeList.filter((change) => {\n      return customerIndexListPerChangeList.find(\n        (customerIndexListPerChange) => {\n          const {\n            versionIndex: versionIndexOfChange,\n            changeIndex,\n            customerIndexList,\n          } = customerIndexListPerChange;\n          return (\n            versionIndex === versionIndexOfChange &&\n            change.index === changeIndex &&\n            change.lineupIndex === lineupIndex &&\n            (customerIndexList.includes(customerIndex) ||\n              customerIndexList.includes(-1))\n          );\n        }\n      );\n    }).map((change) => ({ versionIndex, ...change }));\n    return changeListFiltered;\n  }));\n}\n\nexport function findEmptyIndex(indexList: number[]) {\n  return indexList\n    .sort((a, b) => a - b)\n    .reduce((indexPrev, index) => {\n      if (index === indexPrev) {\n        return indexPrev + 1;\n      }\n      return indexPrev;\n    }, 0);\n}\n\nexport function getEnumNameList(enumList: Enum[], indexList: number[]) {\n  return enumList\n    .filter((enumItem) => indexList.includes(enumItem.index))\n    .map((enumItem) => enumItem.name);\n}\n\nfunction indent(input: string) {\n  return input.replace(/^/gm, \"    \");\n}\n\nfunction isVersionListCircular(versionList: VersionV2[], index: number) {\n  const versionFound = versionList.find((version) => version.index === index);\n  if (!versionFound) {\n    return false;\n  }\n  let v1: VersionV2 | undefined = versionFound;\n  let { index: index1, indexPrev: indexPrev1 } = v1;\n  let v2: VersionV2 | undefined = versionFound;\n  let { index: index2, indexPrev: indexPrev2 } = v2;\n  while (v1 || v2) {\n    // eslint-disable-next-line no-loop-func\n    v1 = versionList.find((version) => version.index === indexPrev1);\n    if (!v1) {\n      return false;\n    }\n    ({ index: index1, indexPrev: indexPrev1 } = v1);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    if (index1 === index2) {\n      return true;\n    }\n  }\n}\n\nexport function load(input: string) {\n  const parsed = JSON.parse(input);\n  const { versionList, lineupList, pkgList, customerList } = parsed;\n  // Check if it comes from release-history-manager\n  if (versionList[0] && versionList[0].versionIndex !== undefined) {\n    // Migrate\n    const versionListNew: Version[] = (versionList as OldVersion[]).map(\n      (version) => {\n        const {\n          versionIndex: index,\n          versionName: name,\n          versionIndexPrev: indexPrev,\n          changeList,\n          releaseList,\n        } = version;\n        const changeListNew: Change[] = changeList.map((change) => {\n          const {\n            changeIndex: index,\n            description,\n            beforeChange,\n            afterChange,\n            targetCustomerList,\n          } = change;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return {\n            index,\n            description,\n            beforeChange,\n            afterChange,\n            customerIndexList,\n            lineupIndex: -1,\n          };\n        });\n        const releaseListNew: Release[] = releaseList.map((release) => {\n          const { releaseIndex: index, pkgIndex, targetCustomerList } = release;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return { index, pkgIndex, customerIndexList };\n        });\n        return {\n          index,\n          name,\n          indexPrev,\n          changeList: changeListNew,\n          releaseList: releaseListNew,\n        };\n      }\n    );\n    const pkgListNew: Pkg[] = (pkgList as OldPkg[]).map((pkg) => {\n      const { pkgIndex: index, pkgName: name } = pkg;\n      return { index, name, lineupIndex: -1 };\n    });\n    const customerListNew: Enum[] = (customerList as OldCustomer[]).map(\n      (customer) => {\n        const { customerIndex: index, customerName: name } = customer;\n        return { index, name };\n      }\n    );\n    return {\n      versionList: versionListNew,\n      lineupList: [],\n      pkgList: pkgListNew,\n      customerList: customerListNew,\n    };\n  } else {\n    // TODO: Check validity\n  }\n  // Migrate from rhm v1 to v2\n  versionList.forEach((version: Version & VersionV2) => {\n    const { index: versionIndex, changeList, releaseList } = version;\n    releaseList.forEach((release: Release & ReleaseV2) => {\n      release.customerIndexListPerChangeList = release.customerIndexListPerChangeList ?? [];\n    });\n    changeList.forEach((change: Change & ChangeV2) => {\n      const { index: changeIndex, customerIndexList } = change;\n      if (customerIndexList && customerIndexList.length) {\n        customerIndexList.forEach((customerIndex) => {\n          const releaseFound = releaseList.find((release) => {\n            const { pkgIndex } = release;\n            return (pkgList as Pkg[]).find((pkg) => {\n              return (\n                pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex &&\n                release.customerIndexList.includes(customerIndex)\n              );\n            });\n          });\n          if (releaseFound) {\n            const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n            const customerIndexListPerChangeFound = customerIndexListPerChangeList.find((item) => {\n              return item.versionIndex === versionIndex && item.changeIndex === changeIndex;\n            });\n            if (customerIndexListPerChangeFound) {\n              customerIndexListPerChangeFound.customerIndexList = uniq([\n                ...customerIndexListPerChangeFound.customerIndexList,\n                customerIndex,\n              ]);\n            } else {\n              customerIndexListPerChangeList.push({\n                versionIndex, changeIndex, customerIndexList: [customerIndex],\n              });\n            }\n          }\n        });\n      } else if (customerIndexList && !customerIndexList.length) {\n        // Global\n        const releaseFound = releaseList.find((release) => {\n          const { pkgIndex } = release;\n          return (pkgList as Pkg[]).find((pkg) => {\n            return (\n              pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex\n            );\n          });\n        });\n        if (releaseFound) {\n          const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n          const customerIndexListPerChangeFound = customerIndexListPerChangeList.find((item) => {\n            return item.versionIndex === versionIndex && item.changeIndex === changeIndex;\n          });\n          if (customerIndexListPerChangeFound) {\n            customerIndexListPerChangeFound.customerIndexList = [-1];\n          } else {\n            customerIndexListPerChangeList.push({\n              versionIndex, changeIndex, customerIndexList: [-1],\n            });\n          }\n        }\n      }\n    });\n  });\n  // TODO\n  return { versionList, lineupList, pkgList, customerList };\n}\n\nexport function publish(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customerList: Enum[]\n) {\n  if (isVersionListCircular(versionList, versionIndex)) {\n    return;\n  }\n  const releaseHistoryPerCustomerIndexListList: ReleaseHistoryPerCustomerIndexList[] =\n    [];\n  // Generate\n  customerList.forEach((customer) => {\n    releaseHistoryPerCustomerIndexListList.push({\n      customerIndexList: [customer.index],\n      releaseHistory: publishPerCustomer(\n        versionList,\n        versionIndex,\n        lineupList,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  // Merge\n  for (\n    let i = releaseHistoryPerCustomerIndexListList.length - 1;\n    i >= 0;\n    i -= 1\n  ) {\n    const { customerIndexList: cil1, releaseHistory: rh1 } =\n      releaseHistoryPerCustomerIndexListList[i];\n    for (let j = i - 1; j >= 0; j -= 1) {\n      const { customerIndexList: cil2, releaseHistory: rh2 } =\n        releaseHistoryPerCustomerIndexListList[j];\n      if (rh1 === rh2) {\n        cil2.push(...cil1);\n        releaseHistoryPerCustomerIndexListList.splice(i, 1);\n        break;\n      }\n    }\n  }\n  // Export\n  const releaseHistory = releaseHistoryPerCustomerIndexListList\n    .filter(\n      (relaseHistoryPerCustomerIndexList) =>\n        relaseHistoryPerCustomerIndexList.releaseHistory\n    )\n    .map((relaseHistoryPerCustomerIndexList) => {\n      const { customerIndexList, releaseHistory } =\n        relaseHistoryPerCustomerIndexList;\n      const customerNameJoined = getEnumNameList(\n        customerList,\n        customerIndexList\n      ).join(\", \");\n      return `<${customerNameJoined}>\n${indent(releaseHistory)}\n</${customerNameJoined}>`;\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerCustomer(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const candidateLineupIndexList = [-1, ...lineupList.map((lineup) => lineup.index)];\n  const releaseHistoryPerLineupList: ReleaseHistoryPerLineupIndex[] = [];\n  candidateLineupIndexList.forEach((lineupIndex) => {\n    releaseHistoryPerLineupList.push({\n      lineupIndex,\n      releaseHistory: publishPerLineup(\n        versionList,\n        versionIndex,\n        lineupIndex,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  const releaseHistory = releaseHistoryPerLineupList\n    .filter((releaseHistoryPerLineup) => releaseHistoryPerLineup.releaseHistory)\n    .map((releaseHistoryPerLineup) => {\n      const { lineupIndex, releaseHistory } = releaseHistoryPerLineup;\n      const lineupFound = lineupList.find(\n        (lineup) => lineup.index === lineupIndex\n      );\n      if (!lineupFound) {\n        return indent(releaseHistory);\n      } else {\n        const lineupName = lineupFound.name;\n        return `<${lineupName}>\n${indent(releaseHistory)}\n</${lineupName}>`;\n      }\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerLineup(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  let versionNext = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const { index: customerIndex } = customer;\n  const changeListPerPkgList: ReleaseHistoryPerPkg[] = [];\n  while (versionNext) {\n    const { indexPrev, changeList, releaseList } = versionNext;\n    // Check the current version is released\n    const releaseFound = releaseList.find((release) => {\n      const customerIncluded =\n        release.customerIndexList.includes(customerIndex);\n      if (!customerIncluded) {\n        return false;\n      }\n      const { pkgIndex } = release;\n      const pkgFound = pkgList.find(\n        (pkg) => pkg.lineupIndex === lineupIndex && pkg.index === pkgIndex\n      );\n      return !!pkgFound;\n    });\n    // If the current version is not released, it is not for the given customer\n    if (!releaseFound) {\n      versionNext = undefined;\n    } else {\n      const { customerIndexListPerChangeList, pkgIndex } = releaseFound;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      if (!pkgFound) {\n        // This is not going to happen\n        break;\n      } else {\n        const { name: pkgName, lineupIndex: pkgLineupIndex } = pkgFound;\n        const changeListAccumulated = filterChangeListToAccumulate(\n          customerIndex,\n          versionList,\n          customerIndexListPerChangeList,\n          lineupIndex,\n        );\n        // Accumulate unreleased versions and get the second latest released version\n        versionNext = accumulateChangeList(\n          changeListAccumulated,\n          customerIndex,\n          versionList,\n          indexPrev,\n          lineupIndex\n        );\n        changeListPerPkgList.unshift({\n          pkgName,\n          changeList: changeListAccumulated,\n        });\n      }\n    }\n  }\n  const releaseHistory = changeListPerPkgList\n    .map((changeListPerPkg, index) => {\n      const { pkgName, changeList } = changeListPerPkg;\n      const changes =\n        index === 0\n          ? \"- Initial release\"\n          : changeList\n              .map((change) => {\n                const { description, beforeChange, afterChange } = change;\n                const listToChanges = [\"[Description]\", indent(description)];\n                if (beforeChange || afterChange) {\n                  listToChanges.push(\"[Enhancement]\");\n                }\n                if (beforeChange) {\n                  listToChanges.push(indent(\"[Before change]\"));\n                  listToChanges.push(indent(indent(beforeChange)));\n                }\n                if (afterChange) {\n                  listToChanges.push(indent(\"[After change]\"));\n                  listToChanges.push(indent(indent(afterChange)));\n                }\n                return listToChanges.join(\"\\n\");\n              })\n              .join(\"\\n\");\n      if (!changes) {\n        return \"\";\n      }\n      return `${pkgName}\n${indent(changes)}`;\n    })\n    .filter((changes) => !!changes)\n    .join(\"\\n\")\n    .trim();\n  return releaseHistory;\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useState } from \"react\";\nimport { formName, formNameNew, keyActions, keyName, titleActions } from \"../constants\";\nimport { Enum } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\ntype Props = {\n  title: string;\n  enumList: Enum[];\n  onChange: (enumList: Enum[]) => void;\n  usedIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function EnumTable({\n  title,\n  enumList,\n  onChange,\n  usedIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    {\n      key: keyName,\n      dataIndex: keyName,\n      title,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addEnumItem() {\n    form\n      .validateFields([formName])\n      .then(() => {\n        const name = form.getFieldValue(formName);\n        const enumItemFound = enumList.find(\n          (enumItem) => enumItem.name === name\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          enumList.map((enumItem) => enumItem.index)\n        );\n        const enumListNew = [...enumList, { index, name }].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        onChange(enumListNew);\n        form.setFieldsValue({ name: \"\" });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const enumItem = enumList.find((enumItem) => enumItem.index === index);\n    if (!enumItem) {\n      return;\n    }\n    form.setFieldsValue({ nameNew: enumItem.name });\n    setEditIndex(index);\n  }\n\n  function onSubmitRename() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const nameNew = form.getFieldValue(formNameNew);\n        const enumItemFound = enumList.find(\n          (enumItem) =>\n            enumItem.index !== editIndex && enumItem.name === nameNew\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const indexFound = enumList.findIndex(\n          (enumItem) => enumItem.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const enumListNew = [\n          ...enumList.slice(0, indexFound),\n          { index: editIndex, name: nameNew },\n          ...enumList.slice(indexFound + 1),\n        ];\n        onChange(enumListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeEnumItem(index: number) {\n    if (usedIndexList && usedIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = enumList.findIndex(\n      (enumItem) => enumItem.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...enumList.slice(0, indexFound),\n      ...enumList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...enumList.map((enumItem) => {\n      const { index, name } = enumItem;\n      return { key: index, name };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyName ? (\n          <Form form={form} onFinish={addEnumItem}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input\n                onPressEnter={() => refButtonAdd.current?.click()}\n                disabled={editIndex !== -1}\n              />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addEnumItem} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyName ? (\n          <Form form={form} onFinish={onSubmitRename}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitRename}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyName ? (\n          children\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button\n              onClick={() => removeEnumItem(key)}\n              disabled={usedIndexList?.includes(key)}\n            >\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useEffect, useState } from \"react\";\nimport { formLineup, formLineupNew, formName, formNameNew, keyActions, keyLineup, keyPackage, parenError, parenNone, titleActions, titleLineup, titlePackage } from \"../constants\";\nimport { Enum, Pkg } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  pkgList: Pkg[];\n  lineupList: Enum[];\n  onChange: (pkgList: Pkg[]) => void;\n  usedPkgIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string; lineup: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function PkgTable({\n  pkgList,\n  lineupList,\n  onChange,\n  usedPkgIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList]);\n\n  const columns: any[] = [\n    {\n      key: keyPackage,\n      dataIndex: keyPackage,\n      title: titlePackage,\n    },\n    {\n      key: keyLineup,\n      dataIndex: keyLineup,\n      title: titleLineup,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addPkg() {\n    form\n      .validateFields([formName, formLineup])\n      .then(() => {\n        const { name, lineup: lineupIndex } = form.getFieldsValue([\n          formName,\n          formLineup,\n        ]);\n        const pkgFound = pkgList.find((pkg) => pkg.name === name);\n        if (pkgFound) {\n          return;\n        }\n        const index = findEmptyIndex(pkgList.map((pkg) => pkg.index));\n        const pkgListNew = [...pkgList, { index, name, lineupIndex }].sort(\n          (a, b) => a.name.localeCompare(b.name)\n        );\n        onChange(pkgListNew);\n        form.setFieldsValue({\n          name: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const pkgFound = pkgList.find((pkg) => pkg.index === index);\n    if (!pkgFound) {\n      return;\n    }\n    const { name, lineupIndex } = pkgFound;\n    form.setFieldsValue({\n      nameNew: name,\n      lineupNew: lineupIndex,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditPkg() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew, lineupNew: lineupIndexNew } = form.getFieldsValue([\n          formNameNew,\n          formLineupNew,\n        ]);\n        const pkgFound = pkgList.find(\n          (pkg) => pkg.index !== editIndex && pkg.name === nameNew\n        );\n        if (pkgFound) {\n          return;\n        }\n        const indexFound = pkgList.findIndex((pkg) => pkg.index === editIndex);\n        if (indexFound === -1) {\n          return;\n        }\n        const pkgListNew = [\n          ...pkgList.slice(0, indexFound),\n          { index: editIndex, name: nameNew, lineupIndex: lineupIndexNew },\n          ...pkgList.slice(indexFound + 1),\n        ];\n        onChange(pkgListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removePkg(index: number) {\n    if (usedPkgIndexList && usedPkgIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = pkgList.findIndex((pkg) => pkg.index === index);\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...pkgList.slice(0, indexFound),\n      ...pkgList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...pkgList.map((pkg) => {\n      const { index: key, name, lineupIndex: lineup } = pkg;\n      return { key, package: name, lineup };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form} onFinish={addPkg}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonAdd.current?.click()} disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addPkg} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitEditPkg} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          children\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removePkg(key)}\n              disabled={usedPkgIndexList?.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, ExportOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport Link from \"antd/lib/typography/Link\";\nimport { uniq } from \"lodash\";\nimport { createRef, useState } from \"react\";\nimport { formNameNew, formPrevious, formPreviousNew, formVersion, keyActions, keyPrevious, keyVersion, parenError, parenNone, titleActions, titlePrevious, titleVersion } from \"../constants\";\nimport { VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  versionList: VersionV2[];\n  onChange: (versionList: VersionV2[]) => void;\n  onPublish: (key: number) => void;\n  onSelect: (index: number) => void;\n};\n\ntype EditableCellPros = {\n  record: { key: number; version: string; previous: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function VersionTable({\n  versionList,\n  onChange,\n  onPublish,\n  onSelect,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyPrevious, dataIndex: keyPrevious, title: titlePrevious },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addVersion() {\n    form\n      .validateFields([formVersion])\n      .then(() => {\n        const { version: name, previous: indexPrev } = form.getFieldsValue([\n          formVersion,\n          formPrevious,\n        ]);\n        const versionFound = versionList.find(\n          (version) => version.name === name\n        );\n        if (versionFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          versionList.map((version) => version.index)\n        );\n        const versionListNew: VersionV2[] = [\n          ...versionList,\n          { index, name, indexPrev, changeList: [], releaseList: [] },\n        ];\n        form.setFieldsValue({ version: \"\" });\n        onChange(versionListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(key: number) {\n    const versionFound = versionList.find((version) => version.index === key);\n    if (!versionFound) {\n      return;\n    }\n    const { name: nameNew, indexPrev: previousNew } = versionFound;\n    form.setFieldsValue({ nameNew, previousNew });\n    setEditIndex(key);\n  }\n\n  function onClickPublish(key: number) {\n    onPublish(key);\n  }\n\n  function onSubmitEditVersion() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew: name, previousNew: indexPrev } = form.getFieldsValue([\n          formNameNew,\n          formPreviousNew,\n        ]);\n        const nameInUse = versionList.find(\n          (version) => version.index !== editIndex && version.name === name\n        );\n        if (nameInUse) {\n          return;\n        }\n        const indexFound = versionList.findIndex(\n          (version) => version.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const version = versionList[indexFound];\n        const { changeList, releaseList } = version;\n        const versionListNew: VersionV2[] = [\n          ...versionList.slice(0, indexFound),\n          { index: editIndex, name, indexPrev, changeList, releaseList },\n          ...versionList.slice(indexFound + 1),\n        ];\n        onChange(versionListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeVersion(index: number) {\n    const versionFound = versionList.find(\n      (version) => version.indexPrev === index\n    );\n    if (versionFound) {\n      return;\n    }\n    const indexFound = versionList.findIndex(\n      (version) => version.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      ...versionList.slice(indexFound + 1, 0),\n    ];\n    onChange(versionListNew);\n  }\n\n  const usedVersionIndexList = uniq(\n    versionList\n      .filter((version) => {\n        const { index } = version;\n        return !!versionList.find((version) => version.indexPrev === index);\n      })\n      .map((version) => version.index)\n  );\n\n  const dataSource = [\n    { key: -1 },\n    ...versionList.map((version) => {\n      const { index, name, indexPrev } = version;\n      return { key: index, version: name, previous: indexPrev };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellPros) {\n    const { key, previous: indexPrev } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formVersion} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonAdd.current?.click()} disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPrevious} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addVersion} disabled={editIndex !== -1} icon={<PlusOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPreviousNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index} disabled={index === key}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitEditVersion} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <Link onClick={() => onSelect(key)}>{children}</Link>\n        ) : dataIndex === keyPrevious ? (\n          indexPrev === -1 ? (\n            parenNone\n          ) : (\n            versionList.find((version) => version.index === indexPrev)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removeVersion(key)}\n              disabled={usedVersionIndexList.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n            <Button onClick={() => onClickPublish(key)} icon={<ExportOutlined />} />\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { FileOutlined, FolderOpenOutlined, SaveOutlined } from \"@ant-design/icons\";\nimport { Input, Menu } from \"antd\";\nimport { createRef, useState } from \"react\";\nimport { Enum, Pkg, VersionV2 } from \"../types\";\nimport { load } from \"../utils\";\n\ntype Props = {\n  customerList: Enum[];\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  versionList: VersionV2[];\n  onNew: () => void;\n  onLoad: (content: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) => void;\n};\n\nconst UNTITLED = \"Untitled\";\n\nexport default function AppMenu({\n  customerList,\n  lineupList,\n  pkgList,\n  versionList,\n  onNew,\n  onLoad,\n}: Props) {\n  const refLoad = createRef<HTMLInputElement>();\n  let file: File | undefined;\n  const refSave = createRef<HTMLAnchorElement>();\n\n  const [featureName, setFeatureName] = useState(UNTITLED);\n\n  function onChangeFile(e: React.ChangeEvent<HTMLInputElement>) {\n    file = e.target.files?.[0];\n    if (!file) {\n      return;\n    }\n    reader.readAsText(file);\n  }\n\n  function onClickSave() {\n    if (refSave.current === null) {\n      return;\n    }\n    const blob = new Blob(\n      [JSON.stringify({ versionList, lineupList, pkgList, customerList })],\n      { type: \"application/json\" }\n    );\n    refSave.current.download = `${featureName}.json`;\n    refSave.current.href = window.URL.createObjectURL(blob);\n    refSave.current.click();\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    if (!file) {\n      return;\n    }\n    const result = e.target?.result;\n    if (typeof result !== \"string\") {\n      return;\n    }\n    const { name } = file;\n    const indexLast = name.lastIndexOf(\".\");\n    const featureName = name.substring(0, indexLast);\n    const { versionList, lineupList, pkgList, customerList } = load(result);\n    setFeatureName(featureName);\n    onLoad({ customerList, lineupList, pkgList, versionList });\n  };\n\n  return (\n    <>\n      <Menu mode=\"horizontal\" selectable={false}>\n        <Menu.Item key=\"new\" onClick={onNew} icon={<FileOutlined />} />\n        <Menu.Item key=\"load\" onClick={() => refLoad.current?.click()} icon={<FolderOpenOutlined />} />\n        <Menu.Item key=\"featureName\" disabled>\n          <Input\n            value={featureName}\n            onChange={(e) => setFeatureName(e.target.value)}\n          />\n        </Menu.Item>\n        <Menu.Item key=\"save\" onClick={() => onClickSave()} icon={<SaveOutlined />} />\n      </Menu>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        hidden\n        ref={refLoad}\n        onChange={onChangeFile}\n      />\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content, jsx-a11y/anchor-is-valid */}\n      <a href=\"#\" ref={refSave} hidden />\n    </>\n  );\n}\n","import { CheckOutlined, CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, Form, Popover, Select, Table, Tag, Typography } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport {\n  formCustomerIndexList,\n  keyActions,\n  keyCustomers,\n  keyDescription,\n  keyVersion,\n  parenError,\n  parenGlobal,\n  titleActions,\n  titleCustomers,\n  titleDescription,\n  titleVersion,\n} from \"../constants\";\nimport {\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  VersionV2,\n} from \"../types\";\nimport { accumulateVersionIndex } from \"../utils\";\nconst { Option } = Select;\nconst { Text } = Typography;\n\ntype ChangePerReleaseTableProps = {\n  customerList: Enum[];\n  pkgList: Pkg[];\n  releaseIndex: number;\n  versionIndex: number;\n  versionList: VersionV2[];\n  onChange: (\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    changeIndex: number;\n    description: string;\n    beforeChange: string;\n    afterChange: string;\n    version: number;\n    customerIndexList: number[];\n  };\n  dataIndex: string;\n  children: any;\n};\n\ntype PopoverContentProps = {\n  beforeChange: string;\n  afterChange: string;\n};\n\nexport default function ChangePerReleaseTable({\n  customerList,\n  pkgList,\n  releaseIndex,\n  versionIndex,\n  versionList,\n  onChange,\n}: ChangePerReleaseTableProps) {\n  const [form] = useForm();\n  const [editVersionIndex, setEditVersionIndex] = useState(-1);\n  const [editChangeIndex, setEditChangeIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }, [customerList, pkgList, releaseIndex, versionIndex, versionList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n  const releaseFound = releaseList.find(\n    (release) => release.index === releaseIndex\n  );\n  const customerIndexListPerChangeList =\n    releaseFound?.customerIndexListPerChangeList ?? [];\n  const pkgIndex = releaseFound?.pkgIndex ?? undefined;\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyDescription, dataIndex: keyDescription, title: titleDescription },\n    { key: keyCustomers, dataIndex: keyCustomers, title: titleCustomers },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function onCancelEdit() {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }\n\n  function onClickEdit(versionIndex: number, changeIndex: number) {\n    const customerIndexListPerChangeFound = customerIndexListPerChangeList.find(\n      (item) => {\n        return (\n          item.versionIndex === versionIndex && item.changeIndex === changeIndex\n        );\n      }\n    );\n    if (customerIndexListPerChangeFound) {\n      const { customerIndexList } = customerIndexListPerChangeFound;\n      form.setFieldsValue({ customerIndexList });\n    }\n    setEditVersionIndex(versionIndex);\n    setEditChangeIndex(changeIndex);\n  }\n\n  function onSubmitChange(versionIndexOfChange: number, changeIndex: number) {\n    const versionOfChangeFound = versionList.find(\n      (version) => version.index === versionIndexOfChange\n    );\n    if (!versionOfChangeFound) {\n      return;\n    }\n    const { changeList } = versionOfChangeFound;\n    const changeFound = changeList.find(\n      (change) => change.index === changeIndex\n    );\n    if (!changeFound) {\n      return;\n    }\n    if (!releaseFound) {\n      return;\n    }\n    const customerIndexListRaw = form.getFieldValue(formCustomerIndexList);\n    const customerIndexList = customerIndexListRaw.includes(-1)\n      ? [-1]\n      : customerIndexListRaw;\n    const { customerIndexListPerChangeList } = releaseFound;\n    const indexFound = customerIndexListPerChangeList.findIndex((item) => {\n      return (\n        item.versionIndex === versionIndexOfChange &&\n        item.changeIndex === changeIndex\n      );\n    });\n    const customerIndexListPerChangeListNew =\n      indexFound === -1\n        ? [\n            ...customerIndexListPerChangeList,\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n          ]\n        : [\n            ...customerIndexListPerChangeList.slice(0, indexFound),\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n            ...customerIndexListPerChangeList.slice(indexFound + 1),\n          ];\n    onChange(customerIndexListPerChangeListNew);\n  }\n\n  /**\n   * versionIndexList[0]: Current version\n   * versionIndexList[n]: Previous version of versionIndexList[n-1]\n   */\n  const versionIndexList = accumulateVersionIndex(versionList, versionIndex);\n  const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n  const changeListFiltered = versionIndexList.reduce(\n    (changeListPrev: (ChangeV2 & { versionIndex: number })[], versionIndex) => {\n      const versionFound = versionList.find(\n        (version) => version.index === versionIndex\n      );\n      if (!versionFound) {\n        return changeListPrev;\n      }\n      const { changeList } = versionFound;\n      const changeListCurr = changeList.filter((change) => {\n        return change.lineupIndex === pkgFound?.lineupIndex;\n      });\n      return [\n        ...changeListPrev,\n        ...changeListCurr.map((change) => {\n          return { versionIndex, ...change };\n        }),\n      ];\n    },\n    []\n  );\n  const dataSource = [\n    ...changeListFiltered.map((change) => {\n      const {\n        index: changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        versionIndex: versionIndexOfChange,\n      } = change;\n      const customerIndexList =\n        customerIndexListPerChangeList.find((item) => {\n          return (\n            item.versionIndex === versionIndexOfChange &&\n            item.changeIndex === changeIndex\n          );\n        })?.customerIndexList ?? [];\n      return {\n        changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        version: versionIndexOfChange,\n        customerIndexList,\n      };\n    }),\n  ];\n\n  const customerIndexListPerRelease = releaseFound?.customerIndexList ?? [];\n  const customerListPerRelease = customerList.filter((customer) => {\n    return customerIndexListPerRelease.includes(customer.index);\n  });\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    // FIXME: No idea why the following check is required to render 'No Data'\n    if (!record) {\n      return (\n        <td colSpan={columns.length} {...restProps}>\n          {children}\n        </td>\n      );\n    }\n    const {\n      changeIndex,\n      beforeChange,\n      afterChange,\n      version: versionIndexOfChange,\n      customerIndexList,\n    } = record;\n    const versionFound = versionList.find((version) => version.index === versionIndexOfChange);\n    return (\n      <td {...restProps}>\n        {editVersionIndex === versionIndexOfChange &&\n        editChangeIndex === changeIndex &&\n        dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name={formCustomerIndexList}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                <Option key={-1} value={-1}>\n                  {parenGlobal}\n                </Option>\n                {customerListPerRelease.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editVersionIndex === versionIndexOfChange &&\n          editChangeIndex === changeIndex &&\n          dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={() => onSubmitChange(versionIndexOfChange, changeIndex)} icon={<CheckOutlined />} />\n              <Button onClick={onCancelEdit} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <>\n            {versionFound?.name ?? parenError}\n            {' '}\n            {versionIndexOfChange === versionIndex ? <Badge color=\"blue\" /> : null}\n          </>\n        ) : dataIndex === keyDescription ? (\n          <Popover\n            content={() => (\n              <PopoverContent\n                beforeChange={beforeChange}\n                afterChange={afterChange}\n              />\n            )}\n          >\n            {children}\n          </Popover>\n        ) : dataIndex === keyCustomers ? (\n          /**TODO\n           * Render previous customers in grey\n           * Render current customers in blue\n           */\n          customerIndexList.map((customerIndex) => {\n            const customerFound =\n              customerIndex === -1\n                ? { name: parenGlobal }\n                : customerList.find(\n                    (customer) => customer.index === customerIndex\n                  );\n            return (\n              <Tag key={customerIndex} color=\"blue\">{customerFound?.name ?? parenError}</Tag>\n            );\n          })\n        ) : dataIndex === keyActions ? (\n          <Button onClick={() => onClickEdit(versionIndexOfChange, changeIndex)} icon={<EditOutlined />} />\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n\n  function PopoverContent({ beforeChange, afterChange }: PopoverContentProps) {\n    return (\n      <>\n        <Text strong>Before change</Text>\n        <br />\n        <TextArea value={beforeChange} cols={80} autoSize />\n        <br />\n        <Text strong>After change</Text>\n        <br />\n        <TextArea value={afterChange} cols={80} autoSize />\n      </>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, MenuOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport {\n  useSensors,\n  useSensor,\n  PointerSensor,\n  KeyboardSensor,\n  DndContext,\n  closestCenter,\n  DragOverlay,\n} from \"@dnd-kit/core\";\nimport {\n  sortableKeyboardCoordinates,\n  arrayMove,\n  SortableContext,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { Button, Form, Select, Table, Tag } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useEffect, useState } from \"react\";\nimport {\n  invalidSortable,\n  keyActions,\n  keyCustomers,\n  keyDragHandle,\n  keyPackage,\n  parenError,\n  parenNone,\n  titleActions,\n  titleCustomers,\n  titlePackage,\n} from \"../constants\";\nimport {\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  ReleaseV2,\n  VersionV2,\n} from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nimport ChangePerReleaseTable from \"./ChangePerReleaseTable\";\n\nconst { Option } = Select;\n\ntype Props = {\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  customerList: Enum[];\n  usedPkgIndexList: number[];\n  versionList: VersionV2[];\n  versionIndex: number;\n  onChange: (releaseList: ReleaseV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    package: number;\n    pkgName: string;\n    customers: number[];\n    lineup: string;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ReleaseTable({\n  lineupList,\n  pkgList,\n  customerList,\n  usedPkgIndexList,\n  versionList,\n  versionIndex,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n  // ID to render overlay.\n  const [activeId, setActiveId] = useState(null);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  function onDragStart(event: any) {\n    const { active } = event;\n    setActiveId(active.id);\n  }\n\n  function onDragEnd(event: any) {\n    const { active, over } = event;\n    if (active.id !== \"-1\" && over.id !== \"-1\" && active.id !== over.id) {\n      const oldIndex = releaseList.findIndex(\n        (release) => release.index.toString() === active.id\n      );\n      const newIndex = releaseList.findIndex(\n        (release) => release.index.toString() === over.id\n      );\n      const releaseListNew = arrayMove(releaseList, oldIndex, newIndex);\n      onChange(releaseListNew);\n    }\n    // Stop overlay.\n    setActiveId(null);\n  }\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList, pkgList, customerList, versionList, versionIndex]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n\n  const columns: any[] = [\n    { key: keyPackage, dataIndex: keyPackage, title: titlePackage },\n    {\n      key: keyCustomers,\n      dataIndex: keyCustomers,\n      title: titleCustomers,\n      width: \"50%\",\n    },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n    { key: keyDragHandle, dataIndex: keyDragHandle, title: \"\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addRelease() {\n    form\n      .validateFields([\"pkgIndex\", \"customerList\"])\n      .then(() => {\n        const { pkgIndex, customerList: customerIndexList } =\n          form.getFieldsValue([\"pkgIndex\", \"customerList\"]);\n        if (pkgIndex === -1) {\n          return;\n        }\n        // Check if package is already in use\n        const pkgInUse = versionList.find((version) => {\n          const { releaseList } = version;\n          return releaseList.find((release) => release.pkgIndex === pkgIndex);\n        });\n        if (pkgInUse) {\n          return;\n        }\n        const index = findEmptyIndex(\n          releaseList.map((release) => release.index)\n        );\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList,\n          {\n            index,\n            pkgIndex,\n            customerIndexList,\n            customerIndexListPerChangeList: [],\n          },\n        ];\n        onChange(releaseListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onChangeCustomerIndexListPerChangeList(\n    releaseIndex: number,\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === releaseIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const release = releaseList[indexFound];\n    const { index, pkgIndex, customerIndexList } = release;\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      { index, pkgIndex, customerIndexList, customerIndexListPerChangeList },\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  function onClickEdit(index: number) {\n    const releaseFound = releaseList.find((release) => release.index === index);\n    if (!releaseFound) {\n      return;\n    }\n    const { pkgIndex: pkgIndexNew, customerIndexList: customerIndexListNew } =\n      releaseFound;\n    const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndexNew);\n    if (!pkgFound) {\n      return;\n    }\n    form.setFieldsValue({ pkgIndexNew, customerIndexListNew });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditRelease() {\n    form\n      .validateFields([\"pkgIndexNew\", \"customerIndexListNew\"])\n      .then(() => {\n        const { pkgIndexNew, customerIndexListNew } = form.getFieldsValue([\n          \"pkgIndexNew\",\n          \"customerIndexListNew\",\n        ]);\n        const releaseFound = releaseList.find(\n          (release) =>\n            release.index !== editIndex && release.pkgIndex === pkgIndexNew\n        );\n        if (releaseFound) {\n          return;\n        }\n        const indexFound = releaseList.findIndex(\n          (release) => release.index === editIndex\n        );\n        const { customerIndexListPerChangeList } = releaseList[indexFound];\n        if (indexFound === -1) {\n          return;\n        }\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList.slice(0, indexFound),\n          {\n            index: editIndex,\n            pkgIndex: pkgIndexNew,\n            customerIndexList: customerIndexListNew,\n            customerIndexListPerChangeList,\n          },\n          ...releaseList.slice(indexFound + 1),\n        ];\n        onChange(releaseListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeRelease(index: number) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...releaseList.map((release) => {\n      const { index: key, pkgIndex, customerIndexList: customers } = release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      const pkgName = pkgFound?.name;\n      const lineupIndex = pkgFound?.lineupIndex;\n      const lineup =\n        lineupIndex === -1\n          ? parenNone\n          : lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError;\n      return { key, package: pkgIndex, pkgName, customers, lineup };\n    }),\n  ];\n\n  const releaseToDragFound = releaseList.find((release) => release.index === Number(activeId));\n  const pkgToDragFound = pkgList.find((pkg) => pkg.index === releaseToDragFound?.pkgIndex);\n  const pkgNameToDrag = pkgToDragFound?.name;\n  const lineupIndexToDrag = pkgToDragFound?.lineupIndex;\n  const lineupToDrag = lineupList.find((lineup) => lineup.index === lineupIndexToDrag)?.name;\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        components={{\n          body: {\n            wrapper: DraggableWrapper,\n            row: DraggableRow,\n            cell: EditableCell,\n          },\n        }}\n        expandable={{\n          expandedRowRender,\n          rowExpandable: (record) => record.key !== -1,\n        }}\n        pagination={false}\n        size=\"small\"\n      />\n      {/* Render overlay component. */}\n      {\n        pkgToDragFound ? (\n          <DragOverlay\n            style={{\n              backgroundColor: \"#e0e0e07f\",\n              border: \"1px solid #e9e9e9\",\n              display: \"flex\",\n              alignItems: \"center\",\n              paddingLeft: 30,\n            }}\n          >\n            {pkgNameToDrag} <Tag>{lineupToDrag}</Tag>\n          </DragOverlay>\n        ) : null\n      }\n    </DndContext>\n  );\n\n  function DraggableWrapper(props: any) {\n    const { children, ...restProps } = props;\n    return (\n      <SortableContext\n        // `children[1]` is `dataSource`.\n        items={children[1].map((child: any) => child.key.toString())}\n        strategy={verticalListSortingStrategy}\n        {...restProps}\n      >\n        <tbody {...restProps}>\n          {\n            // This invokes `Table.components.body.row` for each element of `children`.\n            children\n          }\n        </tbody>\n      </SortableContext>\n    );\n  }\n\n  function DraggableRow(props: any) {\n    const { children, style, ...restProps } = props;\n    const id = props[\"data-row-key\"]?.toString() ?? invalidSortable;\n    const { attributes, listeners, setNodeRef } = useSortable({ id });\n    const styleRowBold = Number(id) > -1 ? { fontWeight: \"bold\" } : null;\n    const styleNew = Object.assign({}, style, styleRowBold);\n    return (\n      <tr ref={setNodeRef} {...attributes} {...restProps} style={styleNew}>\n        {id === invalidSortable\n          ? children\n          : children.map((child: any) => {\n              const { children, ...restProps } = child;\n              const { key } = restProps;\n              return key === keyDragHandle ? (\n                <td {...listeners} {...restProps}>\n                  {child}\n                </td>\n              ) : (\n                <td {...restProps}>{child}</td>\n              );\n            })}\n      </tr>\n    );\n  }\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    if (!record) {\n      return children;\n    }\n    const { key, pkgName, customers: customerIndexList, lineup } = record;\n    return (\n      <>\n        {/* <td {...restProps}> */}\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"pkgIndex\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select disabled={editIndex !== -1}>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option\n                      key={index}\n                      value={index}\n                      disabled={usedPkgIndexList.includes(index)}\n                    >\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerList\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n                disabled={editIndex !== -1}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addRelease} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyDragHandle ? null : editIndex ===\n            key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name=\"pkgIndexNew\">\n              <Select>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option key={index} value={index}>\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerIndexListNew\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditRelease}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          <>\n            {pkgName} <Tag>{lineup}</Tag>\n          </>\n        ) : dataIndex === keyCustomers ? (\n          customerIndexList\n            .map((customerIndex) => {\n              const customerFound = customerList.find(\n                (customer) => customer.index === customerIndex\n              );\n              return (\n                customerFound && (\n                  <Tag key={customerFound.index}>{customerFound.name}</Tag>\n                )\n              );\n            })\n            .filter((customerTag) => !!customerTag)\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button onClick={() => removeRelease(key)}>\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : dataIndex === keyDragHandle ? (\n          <MenuOutlined style={{ cursor: \"grab\" }} />\n        ) : (\n          children\n        )}\n        {/* </td> */}\n      </>\n    );\n  }\n\n  function expandedRowRender(record: any) {\n    const { key: releaseIndex } = record;\n    return (\n      <td colSpan={columns.length + 1}>\n        <ChangePerReleaseTable\n          customerList={customerList}\n          pkgList={pkgList}\n          releaseIndex={releaseIndex}\n          versionIndex={versionIndex}\n          versionList={versionList}\n          onChange={(customerIndexListPerChangeList) =>\n            onChangeCustomerIndexListPerChangeList(\n              releaseIndex,\n              customerIndexListPerChangeList\n            )\n          }\n        />\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport { formAfterChange, formAfterChangeNew, formBeforeChange, formBeforeChangeNew, formDescription, formDescriptionNew, formLineup, formLineupNew, keyActions, keyAfterChange, keyBeforeChange, keyDescription, keyLineup, parenError, parenNone, titleActions, titleAfterChange, titleBeforeChange, titleDescription, titleLineup } from \"../constants\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nconst { Option } = Select;\n\ntype Props = {\n  versionIndex: number;\n  versionList: VersionV2[];\n  lineupList: Enum[];\n  usedChangeIndexWithVersionIndexList: Omit<CustomerIndexListPerChange, \"customerIndexList\">[];\n  onChange: (changeList: ChangeV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    descriptoin: string;\n    beforeChange: string;\n    afterChange: string;\n    lineup: number;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ChangeTable({\n  versionIndex,\n  versionList,\n  lineupList,\n  usedChangeIndexWithVersionIndexList,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [versionIndex, versionList, lineupList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const changeList = versionFound?.changeList ?? [];\n\n  const columns: any[] = [\n    {\n      key: keyDescription,\n      dataIndex: keyDescription,\n      title: titleDescription,\n      width: \"25%\",\n    },\n    {\n      key: keyBeforeChange,\n      dataIndex: keyBeforeChange,\n      title: titleBeforeChange,\n      width: \"25%\",\n    },\n    {\n      key: keyAfterChange,\n      dataIndex: keyAfterChange,\n      title: titleAfterChange,\n      width: \"25%\",\n    },\n    { key: keyLineup, dataIndex: keyLineup, title: titleLineup, width: \"12.5%\" },\n    { key: keyActions, dataIndex: keyActions, title: titleActions, width: \"12.5%\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addChange() {\n    form\n      .validateFields([formDescription, formLineup])\n      .then(() => {\n        const {\n          description,\n          beforeChange,\n          afterChange,\n          lineup: lineupIndex,\n        } = form.getFieldsValue([\n          formDescription,\n          formBeforeChange,\n          formAfterChange,\n          formLineup,\n        ]);\n        const index = findEmptyIndex(changeList.map((change) => change.index));\n        const changeListNew: ChangeV2[] = [\n          ...changeList,\n          { index, description, beforeChange, afterChange, lineupIndex },\n        ];\n        onChange(changeListNew);\n        form.setFieldsValue({\n          description: \"\",\n          beforeChange: \"\",\n          afterChange: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const changeFound = changeList.find((change) => change.index === index);\n    if (!changeFound) {\n      return;\n    }\n    const {\n      description: descriptionNew,\n      beforeChange: beforeChangeNew,\n      afterChange: afterChangeNew,\n      lineupIndex: lineupNew,\n    } = changeFound;\n    form.setFieldsValue({\n      descriptionNew,\n      beforeChangeNew,\n      afterChangeNew,\n      lineupNew,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditChange() {\n    form\n      .validateFields([\n        formDescriptionNew,\n        formLineupNew,\n      ])\n      .then(() => {\n        const {\n          descriptionNew: description,\n          beforeChangeNew: beforeChange,\n          afterChangeNew: afterChange,\n          lineupNew: lineupIndex,\n        } = form.getFieldsValue([\n          formDescriptionNew,\n          formBeforeChangeNew,\n          formAfterChangeNew,\n          formLineupNew,\n        ]);\n        const indexFound = changeList.findIndex(\n          (change) => change.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const changeListNew: ChangeV2[] = [\n          ...changeList.slice(0, indexFound),\n          {\n            index: editIndex,\n            description,\n            beforeChange,\n            afterChange,\n            lineupIndex,\n          },\n          ...changeList.slice(indexFound + 1),\n        ];\n        onChange(changeListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeChange(index: number) {\n    const indexFound = changeList.findIndex((change) => change.index === index);\n    const changeListNew = [\n      ...changeList.slice(0, indexFound),\n      ...changeList.slice(indexFound + 1),\n    ];\n    onChange(changeListNew);\n  }\n\n  const dataSource: any[] = [\n    { key: -1 },\n    ...changeList.map((change) => {\n      const {\n        index: key,\n        description,\n        beforeChange,\n        afterChange,\n        lineupIndex: lineup,\n      } = change;\n      return { key, description, beforeChange, afterChange, lineup };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps} style={{ verticalAlign: \"top\" }}>\n        {key === -1 && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescription}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addChange} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescriptionNew}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={onSubmitEditChange} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyDescription ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyBeforeChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyAfterChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n              <Button\n                onClick={() => removeChange(key)} icon={<DeleteOutlined />}\n                disabled={\n                  !!usedChangeIndexWithVersionIndexList.find((item) => {\n                    return item.versionIndex === versionIndex && item.changeIndex === key\n                  })\n                }\n              />\n            </Form.Item>\n          </Form>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { Enum, Pkg, VersionV2 } from \"./types\";\n\nexport const customerListInit: Enum[] = [];\nexport const lineupListInit: Enum[] = [];\nexport const pkgListInit: Pkg[] = [];\nexport const versionListInit: VersionV2[] = [];\n","import { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Button, Col, Collapse, Modal, Row, Space, Tabs, Tag } from \"antd\";\nimport { CopyOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport EnumTable from \"./components/EnumTable\";\nimport PkgTable from \"./components/PkgTable\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, Pkg, ReleaseV2, VersionV2 } from \"./types\";\nimport Title from \"antd/lib/typography/Title\";\nimport Link from \"antd/lib/typography/Link\";\nimport VersionTable from \"./components/VersionTable\";\nimport AppMenu from \"./components/AppMenu\";\nimport ReleaseTable from \"./components/ReleaseTable\";\nimport ChangeTable from \"./components/ChangeTable\";\nimport {\n  customerListInit,\n  lineupListInit,\n  pkgListInit,\n  versionListInit,\n} from \"./init\";\nimport { uniq, uniqWith } from \"lodash\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { publish } from \"./utils\";\nimport { keyChanges, keyReleases, keyVersions, parenError, keyHistory, keyLineups, keyPackages, keyCustomers, titleHistory, titleVersions, titleChanges, titleReleases, titleCustomers, titleCustomer, titleLineups, titleLineup, titlePackages } from \"./constants\";\nconst { Panel } = Collapse;\n\nfunction App() {\n  const [versionList, setVersionList] = useState<VersionV2[]>(versionListInit);\n  const [versionIndex, setVersionIndex] = useState(-1);\n  const [lineupList, setLineupList] = useState<Enum[]>(lineupListInit);\n  const [pkgList, setPkgList] = useState<Pkg[]>(pkgListInit);\n  const [customerList, setCustomerList] = useState<Enum[]>(customerListInit);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [releaseHistory, setReleaseHistory] = useState(\"\");\n\n  function onChangeChangeList(changeList: ChangeV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.changeList = changeList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeReleaseList(releaseList: ReleaseV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.releaseList = releaseList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeVersionList(versionList: VersionV2[]) {\n    const versionFound = versionList.find(\n      (version) => version.index === versionIndex\n    );\n    if (!versionFound) {\n      setVersionIndex(-1);\n    }\n    setVersionList(versionList);\n  }\n\n  function onLoad({\n    customerList,\n    lineupList,\n    pkgList,\n    versionList,\n  }: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) {\n    setVersionIndex(-1);\n    setCustomerList(customerList);\n    setLineupList(lineupList);\n    setPkgList(pkgList);\n    setVersionList(versionList);\n  }\n\n  function onNew() {\n    setVersionIndex(-1);\n    setCustomerList([]);\n    setLineupList([]);\n    setPkgList([]);\n    setVersionList([]);\n  }\n\n  function onPublish(versionIndex: number) {\n    const releaseHistory = publish(\n      versionList,\n      versionIndex,\n      lineupList,\n      pkgList,\n      customerList\n    );\n    setReleaseHistory(releaseHistory ?? parenError);\n    setModalVisible(true);\n  }\n\n  function onSelectVersion(index: number) {\n    setVersionIndex(index);\n  }\n\n  type ChangeIndexWithVersionIndex = Omit<CustomerIndexListPerChange, \"customerIndexList\">;\n  const usedChangeIndexWithVersionIndexList: ChangeIndexWithVersionIndex[] =\n    uniqWith(\n      versionList.reduce(\n        (changeIndexListPrev: ChangeIndexWithVersionIndex[], version) => {\n          const { releaseList } = version;\n          const changeIndexListPerReleaseList = releaseList.reduce(\n            (\n              changeIndexListPerReleasePrev: ChangeIndexWithVersionIndex[],\n              release\n            ) => {\n              const { customerIndexListPerChangeList } = release;\n              return [\n                ...changeIndexListPerReleasePrev,\n                ...customerIndexListPerChangeList\n                  .filter((item) => {\n                    const { customerIndexList } = item;\n                    return customerIndexList && customerIndexList.length;\n                  })\n                  .map((item) => {\n                    const { versionIndex, changeIndex } = item;\n                    return { versionIndex, changeIndex };\n                  }),\n              ];\n            },\n            []\n          );\n          return [...changeIndexListPrev, ...changeIndexListPerReleaseList];\n        },\n        []\n      ),\n      (a, b) => a.versionIndex === b.versionIndex && a.changeIndex === b.changeIndex\n    );\n  const usedLineupIndexList = uniq([\n    ...versionList.reduce((lineupIndexListPrev: number[], version) => {\n      const { changeList } = version;\n      return [\n        ...lineupIndexListPrev,\n        ...changeList.map((change) => {\n          return change.lineupIndex;\n        }),\n      ];\n    }, []),\n    ...pkgList.map((pkg) => pkg.lineupIndex),\n  ]);\n  const usedPkgIndexList = uniq(\n    versionList.reduce((pkgIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...pkgIndexListPrev,\n        ...releaseList.map((release) => release.pkgIndex),\n      ];\n    }, [])\n  );\n  const usedCustomerIndexList = uniq(\n    versionList.reduce((customerIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...customerIndexListPrev,\n        ...releaseList.reduce(\n          (customerIndexListPerReleasePrev: number[], release) => {\n            const { customerIndexList, customerIndexListPerChangeList } =\n              release;\n            return [\n              ...customerIndexListPerReleasePrev,\n              ...customerIndexList,\n              ...customerIndexListPerChangeList.reduce(\n                (customerIndexListPerChangeListPrev: number[], item) => {\n                  const { customerIndexList } = item;\n                  return [\n                    ...customerIndexListPerChangeListPrev,\n                    ...customerIndexList,\n                  ];\n                },\n                []\n              ),\n            ];\n          },\n          []\n        ),\n      ];\n    }, [])\n  );\n\n  const versionCurr = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const versionPrev =\n    !versionCurr || versionCurr.indexPrev === -1\n      ? undefined\n      : versionList.find(\n          (version) => version.index === versionCurr.indexPrev\n        ) ?? -1;\n  return (\n    <div className=\"App\">\n      <AppMenu\n        customerList={customerList}\n        lineupList={lineupList}\n        pkgList={pkgList}\n        versionList={versionList}\n        onNew={onNew}\n        onLoad={onLoad}\n      />\n      <Row>\n        <Col span={16} offset={4}>\n          <Tabs defaultActiveKey={keyHistory}>\n            <Tabs.TabPane tab={titleHistory} key={keyHistory}>\n              <Title level={2}>History</Title>\n              <Collapse defaultActiveKey={[keyVersions]}>\n                <Panel key={keyVersions} header={titleVersions}>\n                  <VersionTable\n                    versionList={versionList}\n                    onChange={onChangeVersionList}\n                    onPublish={onPublish}\n                    onSelect={onSelectVersion}\n                  />\n                </Panel>\n              </Collapse>\n              {!versionCurr ? null : (\n                <>\n                  <Title level={3}>{versionCurr.name}</Title>\n                  {!versionPrev ? null : (\n                    <>\n                      Previous{\" \"}\n                      <Tag>\n                        {versionPrev === -1 ? parenError : versionPrev.name}\n                      </Tag>\n                    </>\n                  )}\n                  <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                    <Collapse defaultActiveKey={[keyChanges]}>\n                      <Panel key={keyChanges} header={titleChanges}>\n                        <ChangeTable\n                          versionIndex={versionIndex}\n                          versionList={versionList}\n                          lineupList={lineupList}\n                          usedChangeIndexWithVersionIndexList={usedChangeIndexWithVersionIndexList}\n                          onChange={onChangeChangeList}\n                        />\n                      </Panel>\n                    </Collapse>\n                    <Collapse defaultActiveKey={[keyReleases]}>\n                      <Panel key={keyReleases} header={titleReleases}>\n                        <ReleaseTable\n                          lineupList={lineupList}\n                          pkgList={pkgList}\n                          customerList={customerList}\n                          usedPkgIndexList={usedPkgIndexList}\n                          versionList={versionList}\n                          versionIndex={versionIndex}\n                          onChange={onChangeReleaseList}\n                          // onChangeVersionList={setVersionList}\n                        />\n                      </Panel>\n                    </Collapse>\n                  </Space>\n                </>\n              )}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleCustomers} key={keyCustomers}>\n              <Title level={2}>Customers</Title>\n              <EnumTable\n                title={titleCustomer}\n                enumList={customerList}\n                onChange={setCustomerList}\n                usedIndexList={usedCustomerIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleLineups} key={keyLineups}>\n              <Title level={2}>Lineups</Title>\n              <EnumTable\n                title={titleLineup}\n                enumList={lineupList}\n                onChange={setLineupList}\n                usedIndexList={usedLineupIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titlePackages} key={keyPackages}>\n              <Title level={2}>Packages</Title>\n              <PkgTable\n                pkgList={pkgList}\n                lineupList={lineupList}\n                onChange={setPkgList}\n                usedPkgIndexList={usedPkgIndexList}\n              />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"1em\" }}>\n        <Col span={24} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Link\n            href=\"https://github.com/gsongsong/rhm\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <GithubOutlined />\n          </Link>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Release history\"\n        footer={\n          <Button onClick={() => navigator.clipboard.writeText(releaseHistory)}>\n            <CopyOutlined />\n            Copy to clipboard\n          </Button>\n        }\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        width={960}\n      >\n        <TextArea value={releaseHistory} cols={80} autoSize={true} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}