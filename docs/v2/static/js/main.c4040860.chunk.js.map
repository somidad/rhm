{"version":3,"sources":["constants.ts","utils.ts","components/EnumTable.tsx","components/PkgTable.tsx","components/VersionTable.tsx","components/AppMenu.tsx","components/ChangePerReleaseTable.tsx","components/ReleaseTable.tsx","components/ChangeTable.tsx","init.ts","App.tsx","reportWebVitals.js","index.js"],"names":["formAfterChange","formAfterChangeNew","formBeforeChange","formBeforeChangeNew","formCustomerIndexList","formDescription","formDescriptionNew","formLineup","formLineupNew","formName","formNameNew","formPrevious","formPreviousNew","formVersion","invalidSortable","keyActions","keyAfterChange","keyBeforeChange","keyChanges","keyCustomers","keyDescription","keyDragHandle","keyHistory","keyLineup","keyName","keyPackage","keyPrevious","keyReleases","keyVersion","keyVersions","parenGlobal","parenNone","parenError","titleActions","titleAfterChange","titleBeforeChange","titleCustomers","titleDescription","titleLineup","titlePackage","titlePrevious","titleVersion","accumulateVersionIndex","versionList","versionIndex","versionIndexList","versionFound","find","version","index","push","indexPrev","findEmptyIndex","indexList","sort","a","b","reduce","indent","input","replace","publishPerCustomer","lineupList","pkgList","customer","candidateLineupIndexList","map","lineup","releaseHistoryPerLineupList","forEach","lineupIndex","releaseHistory","publishPerLineup","filter","releaseHistoryPerLineup","lineupFound","lineupName","name","join","changeListPerPkgList","customerIndex","console","group","changeList","versionNext","pkgName","changeListToAccumulate","initialVersion","releaseList","released","release","pkgIndex","customerIndexList","includes","pkg","i","customerIndexListPerChangeList","pkgFound","log","customerFound","findIndex","ci","unshift","length","chagneIndexListToAccumultate","item","changeListToAccumulatePerRelease","change","changeIndex","flat","groupEnd","filterChangeListToAccumulate","changeListPerPkg","changes","slice","description","beforeChange","afterChange","listToChanges","trim","EnumTable","title","enumList","onChange","usedIndexList","useForm","form","refButtonAdd","createRef","refButtonEdit","useState","editIndex","setEditIndex","columns","key","dataIndex","column","onCell","record","addEnumItem","validateFields","then","getFieldValue","enumItem","enumListNew","localeCompare","setFieldsValue","catch","reason","error","onSubmitRename","nameNew","indexFound","dataSource","components","body","cell","children","restProps","onFinish","Item","rules","required","help","onPressEnter","current","click","disabled","ref","onClick","PlusOutlined","CheckOutlined","CloseOutlined","onClickEdit","EditOutlined","removeEnumItem","DeleteOutlined","pagination","size","Option","Select","PkgTable","usedPkgIndexList","useEffect","addPkg","getFieldsValue","pkgListNew","onSubmitEditPkg","lineupIndexNew","lineupNew","package","initialValue","value","icon","removePkg","VersionTable","onPublish","onSelect","addVersion","previous","versionListNew","onSubmitEditVersion","previousNew","usedVersionIndexList","uniq","removeVersion","onClickPublish","ExportOutlined","AppMenu","file","customerList","onNew","onLoad","refLoad","refSave","featureName","setFeatureName","reader","FileReader","onload","e","result","target","indexLast","lastIndexOf","substring","parsed","JSON","parse","undefined","versionName","versionIndexPrev","targetCustomerList","targetCustomer","releaseIndex","customerName","releaseFound","customerIndexListPerChangeFound","load","mode","selectable","FileOutlined","FolderOpenOutlined","blob","Blob","stringify","type","download","href","window","URL","createObjectURL","onClickSave","SaveOutlined","accept","hidden","files","readAsText","Text","Typography","ChangePerReleaseTable","editVersionIndex","setEditVersionIndex","editChangeIndex","setEditChangeIndex","onCancelEdit","changeListFiltered","changeListPrev","changeListCurr","versionIndexOfChange","customerIndexListPerRelease","customerListPerRelease","colSpan","allowClear","filterOption","option","toLocaleLowerCase","indexOf","versionOfChangeFound","customerIndexListRaw","customerIndexListPerChangeListNew","onSubmitChange","color","content","PopoverContent","strong","cols","autoSize","ReleaseTable","activeId","setActiveId","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","width","addRelease","releaseListNew","onChangeCustomerIndexListPerChangeList","onSubmitEditRelease","pkgIndexNew","customerIndexListNew","customers","releaseToDragFound","Number","pkgToDragFound","pkgNameToDrag","lineupIndexToDrag","lineupToDrag","collisionDetection","closestCenter","onDragStart","event","active","id","onDragEnd","over","oldIndex","toString","newIndex","arrayMove","wrapper","props","items","child","strategy","verticalListSortingStrategy","row","style","useSortable","attributes","listeners","setNodeRef","styleRowBold","fontWeight","styleNew","Object","assign","customerTag","removeRelease","MenuOutlined","cursor","expandable","expandedRowRender","rowExpandable","backgroundColor","border","display","alignItems","paddingLeft","ChangeTable","usedChangeIndexWithVersionIndexList","addChange","changeListNew","onSubmitEditChange","descriptionNew","beforeChangeNew","afterChangeNew","verticalAlign","changeFound","removeChange","customerListInit","lineupListInit","pkgListInit","versionListInit","Panel","Collapse","App","setVersionList","setVersionIndex","setLineupList","setPkgList","setCustomerList","modalVisible","setModalVisible","setReleaseHistory","uniqWith","changeIndexListPrev","changeIndexListPerReleaseList","changeIndexListPerReleasePrev","usedLineupIndexList","lineupIndexListPrev","pkgIndexListPrev","usedCustomerIndexList","customerIndexListPrev","customerIndexListPerReleasePrev","customerIndexListPerChangeListPrev","versionCurr","versionPrev","className","span","offset","defaultActiveKey","TabPane","tab","level","header","v1","index1","indexPrev1","v2","index2","indexPrev2","isVersionListCircular","releaseHistoryPerCustomerIndexListList","cil1","rh1","j","cil2","splice","relaseHistoryPerCustomerIndexList","customerNameJoined","publish","direction","marginTop","justifyContent","rel","GithubOutlined","footer","navigator","clipboard","writeText","CopyOutlined","visible","onCancel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4040860.chunk.js","sourcesContent":["export const formAfterChange = \"afterChange\";\nexport const formAfterChangeNew = \"afterChangeNew\";\nexport const formBeforeChange = \"beforeChange\";\nexport const formBeforeChangeNew = \"beforeChangeNew\";\nexport const formCustomerIndexList = \"customerIndexList\";\nexport const formDescription = \"description\";\nexport const formDescriptionNew = \"descriptionNew\";\nexport const formLineup = \"lineup\";\nexport const formLineupNew = \"lineupNew\";\nexport const formName = \"name\";\nexport const formNameNew = \"nameNew\";\nexport const formPrevious = \"previous\";\nexport const formPreviousNew = \"previousNew\";\nexport const formVersion = \"version\";\n\nexport const invalidSortable = \"invalidSortable\";\n\nexport const keyActions = \"actions\";\nexport const keyAfterChange = \"afterChange\";\nexport const keyBeforeChange = \"beforeChange\";\nexport const keyChanges = \"changes\";\nexport const keyCustomers = \"customers\";\nexport const keyDescription = \"description\";\nexport const keyDragHandle = \"dragHandle\";\nexport const keyHistory = \"history\";\nexport const keyLineup = \"lineup\";\nexport const keyLineups = \"lineups\";\nexport const keyName = \"name\";\nexport const keyPackage = \"package\";\nexport const keyPackages = \"packages\";\nexport const keyPrevious = \"previous\";\nexport const keyReleases = \"releases\"\nexport const keyVersion = \"version\";\nexport const keyVersions = \"versions\";\n\nexport const parenGlobal = \"(Global)\";\nexport const parenNone = \"(None)\";\nexport const parenError = \"(Error)\";\n\nexport const titleActions = \"Actions\";\nexport const titleAfterChange = \"After change\";\nexport const titleBeforeChange = \"Before change\";\nexport const titleChanges = \"Changes\";\nexport const titleCustomer =\" Customer\";\nexport const titleCustomers = \"Customers\";\nexport const titleDescription = \"Description\";\nexport const titleHistory = \"History\";\nexport const titleLineup = \"Lineup\";\nexport const titleLineups = \"Lineups\";\nexport const titlePackage = \"Package\";\nexport const titlePackages = \"Packages\";\nexport const titlePrevious = \"Previous\";\nexport const titleReleases = \"Releases\";\nexport const titleVersion = \"Version\";\nexport const titleVersions = \"Versions\";\n","import { uniq } from \"lodash\";\nimport {\n  Change,\n  ChangeV2,\n  Enum,\n  OldCustomer,\n  OldPkg,\n  OldVersion,\n  Pkg,\n  Release,\n  ReleaseV2,\n  Version,\n  VersionV2,\n} from \"./types\";\n\ntype ReleaseHistoryPerCustomerIndexList = {\n  customerIndexList: number[];\n  releaseHistory: string;\n};\n\ntype ReleaseHistoryPerLineupIndex = {\n  lineupIndex: number;\n  releaseHistory: string;\n};\n\nexport function accumulateVersionIndex(\n  versionList: VersionV2[],\n  versionIndex: number\n): number[] {\n  const versionIndexList: number[] = [];\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  if (!versionFound) {\n    return versionIndexList;\n  }\n  versionIndexList.push(versionIndex);\n  const { indexPrev } = versionFound;\n  versionIndexList.push(...accumulateVersionIndex(versionList, indexPrev));\n  return versionIndexList;\n}\n\n/**\n * Filter change list to accumulate after the previous package to the current package\n * The previous package and the current package may be released in the same version or different versions\n */\nfunction filterChangeListToAccumulate(\n  customerIndex: number,\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[]\n) {\n  console.group({ customerIndex });\n  const changeList: { pkgName: string; changeList: ChangeV2[] }[] = [];\n  let versionNext = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  let pkgName = \"\";\n  const changeListToAccumulate: ChangeV2[] = [];\n  let initialVersion = true;\n  while (versionNext) {\n    console.group({ versionNext });\n    // Traverse the last release from the first release for each version\n    // If a package is released to the customer,\n    // - Push the accumulated change list with the package name, if package name is not empy\n    // - Reset the accumulated change list\n    // - Update the package name with the current package\n    // Common\n    // - Accumulate changes\n    const { indexPrev, releaseList } = versionNext;\n    // Check at least one package is released with the current version\n    if (initialVersion) {\n      const released = releaseList.find((release) => {\n        const { pkgIndex, customerIndexList } = release;\n        if (!customerIndexList.includes(customerIndex)) {\n          return false;\n        }\n        const pkgFound = pkgList.find((pkg) => {\n          return pkg.index === pkgIndex && pkg.lineupIndex === lineupIndex;\n        });\n        return !!pkgFound;\n      });\n      initialVersion = false;\n      if (!released) {\n        return changeList;\n      }\n    }\n    for (let i = releaseList.length - 1; i >= 0; i -= 1) {\n      const release = releaseList[i];\n      const { customerIndexList, customerIndexListPerChangeList, pkgIndex } =\n        release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      console.log({ customerIndexList });\n      const customerFound =\n        customerIndexList.findIndex((ci) => ci === customerIndex) !== -1;\n      // Check if the package is with the desired lineup\n      if (pkgFound?.lineupIndex !== lineupIndex) {\n        continue;\n      }\n      if (customerFound) {\n        if (pkgName) {\n          console.log(\"Pushed\", pkgName, changeListToAccumulate);\n          // - Push the accumulated change list with the package name, if package name is not empy\n          changeList.unshift({\n            pkgName,\n            changeList: [...changeListToAccumulate],\n          });\n          // - Reset the accumulated change list\n          changeListToAccumulate.length = 0;\n        }\n        // - Update the package name with the current package\n        pkgName = pkgFound?.name ?? \"\";\n      }\n      // - Accumulate changes\n      const chagneIndexListToAccumultate =\n        customerIndexListPerChangeList.filter((item) => {\n          const { customerIndexList } = item;\n          return (\n            customerIndexList.includes(customerIndex) ||\n            customerIndexList.includes(-1)\n          );\n        });\n      const changeListToAccumulatePerRelease = versionList\n        .map((version) => {\n          const { changeList: changeListPerVersion } = version;\n          const changeListToAccumulatePerVersion = changeListPerVersion.filter(\n            (change) => {\n              const { lineupIndex } = change;\n              return chagneIndexListToAccumultate.find(\n                (item) =>\n                  item.versionIndex === version.index &&\n                  item.changeIndex === change.index &&\n                  change.lineupIndex === lineupIndex\n              );\n            }\n          );\n          return changeListToAccumulatePerVersion;\n        })\n        .flat();\n      changeListToAccumulate.unshift(...changeListToAccumulatePerRelease);\n      console.log({ changeListToAccumulate });\n    }\n    versionNext = versionList.find((version) => version.index === indexPrev);\n    console.groupEnd();\n  }\n  if (pkgName) {\n    console.log(\"Pushed\", pkgName, changeListToAccumulate);\n    // - Push the accumulated change list with the package name, if package name is not empy\n    changeList.unshift({ pkgName, changeList: [...changeListToAccumulate] });\n  }\n  console.groupEnd();\n  return changeList;\n}\n\nexport function findEmptyIndex(indexList: number[]) {\n  return indexList\n    .sort((a, b) => a - b)\n    .reduce((indexPrev, index) => {\n      if (index === indexPrev) {\n        return indexPrev + 1;\n      }\n      return indexPrev;\n    }, 0);\n}\n\nexport function getEnumNameList(enumList: Enum[], indexList: number[]) {\n  return enumList\n    .filter((enumItem) => indexList.includes(enumItem.index))\n    .map((enumItem) => enumItem.name);\n}\n\nfunction indent(input: string) {\n  return input.replace(/^/gm, \"    \");\n}\n\nfunction isVersionListCircular(versionList: VersionV2[], index: number) {\n  const versionFound = versionList.find((version) => version.index === index);\n  if (!versionFound) {\n    return false;\n  }\n  let v1: VersionV2 | undefined = versionFound;\n  let { index: index1, indexPrev: indexPrev1 } = v1;\n  let v2: VersionV2 | undefined = versionFound;\n  let { index: index2, indexPrev: indexPrev2 } = v2;\n  while (v1 || v2) {\n    // eslint-disable-next-line no-loop-func\n    v1 = versionList.find((version) => version.index === indexPrev1);\n    if (!v1) {\n      return false;\n    }\n    ({ index: index1, indexPrev: indexPrev1 } = v1);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    // eslint-disable-next-line no-loop-func\n    v2 = versionList.find((version) => version.index === indexPrev2);\n    if (!v2) {\n      return false;\n    }\n    ({ index: index2, indexPrev: indexPrev2 } = v2);\n    if (index1 === index2) {\n      return true;\n    }\n  }\n}\n\nexport function load(input: string) {\n  const parsed = JSON.parse(input);\n  const { versionList, lineupList, pkgList, customerList } = parsed;\n  // Check if it comes from release-history-manager\n  if (versionList[0] && versionList[0].versionIndex !== undefined) {\n    // Migrate\n    const versionListNew: Version[] = (versionList as OldVersion[]).map(\n      (version) => {\n        const {\n          versionIndex: index,\n          versionName: name,\n          versionIndexPrev: indexPrev,\n          changeList,\n          releaseList,\n        } = version;\n        const changeListNew: Change[] = changeList.map((change) => {\n          const {\n            changeIndex: index,\n            description,\n            beforeChange,\n            afterChange,\n            targetCustomerList,\n          } = change;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return {\n            index,\n            description,\n            beforeChange,\n            afterChange,\n            customerIndexList,\n            lineupIndex: -1,\n          };\n        });\n        const releaseListNew: Release[] = releaseList.map((release) => {\n          const { releaseIndex: index, pkgIndex, targetCustomerList } = release;\n          const customerIndexList = targetCustomerList.map(\n            (targetCustomer) => targetCustomer.customerIndex\n          );\n          return { index, pkgIndex, customerIndexList };\n        });\n        return {\n          index,\n          name,\n          indexPrev,\n          changeList: changeListNew,\n          releaseList: releaseListNew,\n        };\n      }\n    );\n    const pkgListNew: Pkg[] = (pkgList as OldPkg[]).map((pkg) => {\n      const { pkgIndex: index, pkgName: name } = pkg;\n      return { index, name, lineupIndex: -1 };\n    });\n    const customerListNew: Enum[] = (customerList as OldCustomer[]).map(\n      (customer) => {\n        const { customerIndex: index, customerName: name } = customer;\n        return { index, name };\n      }\n    );\n    return {\n      versionList: versionListNew,\n      lineupList: [],\n      pkgList: pkgListNew,\n      customerList: customerListNew,\n    };\n  } else {\n    // TODO: Check validity\n  }\n  // Migrate from rhm v1 to v2\n  versionList.forEach((version: Version & VersionV2) => {\n    const { index: versionIndex, changeList, releaseList } = version;\n    releaseList.forEach((release: Release & ReleaseV2) => {\n      release.customerIndexListPerChangeList =\n        release.customerIndexListPerChangeList ?? [];\n    });\n    changeList.forEach((change: Change & ChangeV2) => {\n      const { index: changeIndex, customerIndexList } = change;\n      if (customerIndexList && customerIndexList.length) {\n        customerIndexList.forEach((customerIndex) => {\n          const releaseFound = releaseList.find((release) => {\n            const { pkgIndex } = release;\n            return (pkgList as Pkg[]).find((pkg) => {\n              return (\n                pkg.index === pkgIndex &&\n                pkg.lineupIndex === change.lineupIndex &&\n                release.customerIndexList.includes(customerIndex)\n              );\n            });\n          });\n          if (releaseFound) {\n            const { customerIndexListPerChangeList } =\n              releaseFound as ReleaseV2;\n            const customerIndexListPerChangeFound =\n              customerIndexListPerChangeList.find((item) => {\n                return (\n                  item.versionIndex === versionIndex &&\n                  item.changeIndex === changeIndex\n                );\n              });\n            if (customerIndexListPerChangeFound) {\n              customerIndexListPerChangeFound.customerIndexList = uniq([\n                ...customerIndexListPerChangeFound.customerIndexList,\n                customerIndex,\n              ]);\n            } else {\n              customerIndexListPerChangeList.push({\n                versionIndex,\n                changeIndex,\n                customerIndexList: [customerIndex],\n              });\n            }\n          }\n        });\n      } else if (customerIndexList && !customerIndexList.length) {\n        // Global\n        const releaseFound = releaseList.find((release) => {\n          const { pkgIndex } = release;\n          return (pkgList as Pkg[]).find((pkg) => {\n            return (\n              pkg.index === pkgIndex && pkg.lineupIndex === change.lineupIndex\n            );\n          });\n        });\n        if (releaseFound) {\n          const { customerIndexListPerChangeList } = releaseFound as ReleaseV2;\n          const customerIndexListPerChangeFound =\n            customerIndexListPerChangeList.find((item) => {\n              return (\n                item.versionIndex === versionIndex &&\n                item.changeIndex === changeIndex\n              );\n            });\n          if (customerIndexListPerChangeFound) {\n            customerIndexListPerChangeFound.customerIndexList = [-1];\n          } else {\n            customerIndexListPerChangeList.push({\n              versionIndex,\n              changeIndex,\n              customerIndexList: [-1],\n            });\n          }\n        }\n      }\n    });\n  });\n  // TODO\n  return { versionList, lineupList, pkgList, customerList };\n}\n\nexport function publish(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customerList: Enum[]\n) {\n  if (isVersionListCircular(versionList, versionIndex)) {\n    return;\n  }\n  const releaseHistoryPerCustomerIndexListList: ReleaseHistoryPerCustomerIndexList[] =\n    [];\n  // Generate\n  customerList.forEach((customer) => {\n    releaseHistoryPerCustomerIndexListList.push({\n      customerIndexList: [customer.index],\n      releaseHistory: publishPerCustomer(\n        versionList,\n        versionIndex,\n        lineupList,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  // Merge\n  for (\n    let i = releaseHistoryPerCustomerIndexListList.length - 1;\n    i >= 0;\n    i -= 1\n  ) {\n    const { customerIndexList: cil1, releaseHistory: rh1 } =\n      releaseHistoryPerCustomerIndexListList[i];\n    for (let j = i - 1; j >= 0; j -= 1) {\n      const { customerIndexList: cil2, releaseHistory: rh2 } =\n        releaseHistoryPerCustomerIndexListList[j];\n      if (rh1 === rh2) {\n        cil2.push(...cil1);\n        releaseHistoryPerCustomerIndexListList.splice(i, 1);\n        break;\n      }\n    }\n  }\n  // Export\n  const releaseHistory = releaseHistoryPerCustomerIndexListList\n    .filter(\n      (relaseHistoryPerCustomerIndexList) =>\n        relaseHistoryPerCustomerIndexList.releaseHistory\n    )\n    .map((relaseHistoryPerCustomerIndexList) => {\n      const { customerIndexList, releaseHistory } =\n        relaseHistoryPerCustomerIndexList;\n      const customerNameJoined = getEnumNameList(\n        customerList,\n        customerIndexList\n      ).join(\", \");\n      return `<${customerNameJoined}>\n${indent(releaseHistory)}\n</${customerNameJoined}>`;\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerCustomer(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupList: Enum[],\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const candidateLineupIndexList = [\n    -1,\n    ...lineupList.map((lineup) => lineup.index),\n  ];\n  const releaseHistoryPerLineupList: ReleaseHistoryPerLineupIndex[] = [];\n  candidateLineupIndexList.forEach((lineupIndex) => {\n    releaseHistoryPerLineupList.push({\n      lineupIndex,\n      releaseHistory: publishPerLineup(\n        versionList,\n        versionIndex,\n        lineupIndex,\n        pkgList,\n        customer\n      ),\n    });\n  });\n  const releaseHistory = releaseHistoryPerLineupList\n    .filter((releaseHistoryPerLineup) => releaseHistoryPerLineup.releaseHistory)\n    .map((releaseHistoryPerLineup) => {\n      const { lineupIndex, releaseHistory } = releaseHistoryPerLineup;\n      const lineupFound = lineupList.find(\n        (lineup) => lineup.index === lineupIndex\n      );\n      if (!lineupFound) {\n        return indent(releaseHistory);\n      } else {\n        const lineupName = lineupFound.name;\n        return `<${lineupName}>\n${indent(releaseHistory)}\n</${lineupName}>`;\n      }\n    })\n    .join(\"\\n\");\n  return releaseHistory;\n}\n\nfunction publishPerLineup(\n  versionList: VersionV2[],\n  versionIndex: number,\n  lineupIndex: number,\n  pkgList: Pkg[],\n  customer: Enum\n) {\n  const { index: customerIndex } = customer;\n  const changeListPerPkgList = filterChangeListToAccumulate(\n    customerIndex,\n    versionList,\n    versionIndex,\n    lineupIndex,\n    pkgList\n  );\n  const releaseHistory = changeListPerPkgList\n    .map((changeListPerPkg, pkgIndex) => {\n      const { pkgName, changeList } = changeListPerPkg;\n      const changes =\n        pkgIndex === 0\n          ? \"- Initial release\"\n          : changeList\n              .filter((change) => {\n                const { index: changeIndex, lineupIndex } = change;\n                const pkgFound = changeListPerPkgList\n                  .slice(0, pkgIndex)\n                  .find((pkg) => {\n                    const changeFound = pkg.changeList.find(\n                      (change) =>\n                        change.index === changeIndex &&\n                        change.lineupIndex === lineupIndex\n                    );\n                    return changeFound;\n                  });\n                return !pkgFound;\n              })\n              .map((change) => {\n                const { description, beforeChange, afterChange } = change;\n                const listToChanges = [\"[Description]\", indent(description)];\n                if (beforeChange || afterChange) {\n                  listToChanges.push(\"[Enhancement]\");\n                }\n                if (beforeChange) {\n                  listToChanges.push(indent(\"[Before change]\"));\n                  listToChanges.push(indent(indent(beforeChange)));\n                }\n                if (afterChange) {\n                  listToChanges.push(indent(\"[After change]\"));\n                  listToChanges.push(indent(indent(afterChange)));\n                }\n                return listToChanges.join(\"\\n\");\n              })\n              .join(\"\\n\");\n      if (!changes) {\n        return \"\";\n      }\n      return `${pkgName}\n${indent(changes)}`;\n    })\n    .filter((changes) => !!changes)\n    .join(\"\\n\")\n    .trim();\n  return releaseHistory;\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useState } from \"react\";\nimport { formName, formNameNew, keyActions, keyName, titleActions } from \"../constants\";\nimport { Enum } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\ntype Props = {\n  title: string;\n  enumList: Enum[];\n  onChange: (enumList: Enum[]) => void;\n  usedIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function EnumTable({\n  title,\n  enumList,\n  onChange,\n  usedIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    {\n      key: keyName,\n      dataIndex: keyName,\n      title,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addEnumItem() {\n    form\n      .validateFields([formName])\n      .then(() => {\n        const name = form.getFieldValue(formName);\n        const enumItemFound = enumList.find(\n          (enumItem) => enumItem.name === name\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          enumList.map((enumItem) => enumItem.index)\n        );\n        const enumListNew = [...enumList, { index, name }].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        );\n        onChange(enumListNew);\n        form.setFieldsValue({ name: \"\" });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const enumItem = enumList.find((enumItem) => enumItem.index === index);\n    if (!enumItem) {\n      return;\n    }\n    form.setFieldsValue({ nameNew: enumItem.name });\n    setEditIndex(index);\n  }\n\n  function onSubmitRename() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const nameNew = form.getFieldValue(formNameNew);\n        const enumItemFound = enumList.find(\n          (enumItem) =>\n            enumItem.index !== editIndex && enumItem.name === nameNew\n        );\n        if (enumItemFound) {\n          return;\n        }\n        const indexFound = enumList.findIndex(\n          (enumItem) => enumItem.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const enumListNew = [\n          ...enumList.slice(0, indexFound),\n          { index: editIndex, name: nameNew },\n          ...enumList.slice(indexFound + 1),\n        ];\n        onChange(enumListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeEnumItem(index: number) {\n    if (usedIndexList && usedIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = enumList.findIndex(\n      (enumItem) => enumItem.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...enumList.slice(0, indexFound),\n      ...enumList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...enumList.map((enumItem) => {\n      const { index, name } = enumItem;\n      return { key: index, name };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyName ? (\n          <Form form={form} onFinish={addEnumItem}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input\n                onPressEnter={() => refButtonAdd.current?.click()}\n                disabled={editIndex !== -1}\n              />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addEnumItem} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyName ? (\n          <Form form={form} onFinish={onSubmitRename}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitRename}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyName ? (\n          children\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button\n              onClick={() => removeEnumItem(key)}\n              disabled={usedIndexList?.includes(key)}\n            >\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { createRef, useEffect, useState } from \"react\";\nimport { formLineup, formLineupNew, formName, formNameNew, keyActions, keyLineup, keyPackage, parenError, parenNone, titleActions, titleLineup, titlePackage } from \"../constants\";\nimport { Enum, Pkg } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  pkgList: Pkg[];\n  lineupList: Enum[];\n  onChange: (pkgList: Pkg[]) => void;\n  usedPkgIndexList?: number[];\n};\n\ntype EditableCellProps = {\n  record: { key: number; name: string; lineup: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function PkgTable({\n  pkgList,\n  lineupList,\n  onChange,\n  usedPkgIndexList,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList]);\n\n  const columns: any[] = [\n    {\n      key: keyPackage,\n      dataIndex: keyPackage,\n      title: titlePackage,\n    },\n    {\n      key: keyLineup,\n      dataIndex: keyLineup,\n      title: titleLineup,\n    },\n    {\n      key: keyActions,\n      dataIndex: keyActions,\n      title: titleActions,\n    },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addPkg() {\n    form\n      .validateFields([formName, formLineup])\n      .then(() => {\n        const { name, lineup: lineupIndex } = form.getFieldsValue([\n          formName,\n          formLineup,\n        ]);\n        const pkgFound = pkgList.find((pkg) => pkg.name === name);\n        if (pkgFound) {\n          return;\n        }\n        const index = findEmptyIndex(pkgList.map((pkg) => pkg.index));\n        const pkgListNew = [...pkgList, { index, name, lineupIndex }].sort(\n          (a, b) => a.name.localeCompare(b.name)\n        );\n        onChange(pkgListNew);\n        form.setFieldsValue({\n          name: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const pkgFound = pkgList.find((pkg) => pkg.index === index);\n    if (!pkgFound) {\n      return;\n    }\n    const { name, lineupIndex } = pkgFound;\n    form.setFieldsValue({\n      nameNew: name,\n      lineupNew: lineupIndex,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditPkg() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew, lineupNew: lineupIndexNew } = form.getFieldsValue([\n          formNameNew,\n          formLineupNew,\n        ]);\n        const pkgFound = pkgList.find(\n          (pkg) => pkg.index !== editIndex && pkg.name === nameNew\n        );\n        if (pkgFound) {\n          return;\n        }\n        const indexFound = pkgList.findIndex((pkg) => pkg.index === editIndex);\n        if (indexFound === -1) {\n          return;\n        }\n        const pkgListNew = [\n          ...pkgList.slice(0, indexFound),\n          { index: editIndex, name: nameNew, lineupIndex: lineupIndexNew },\n          ...pkgList.slice(indexFound + 1),\n        ];\n        onChange(pkgListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removePkg(index: number) {\n    if (usedPkgIndexList && usedPkgIndexList.includes(index)) {\n      return;\n    }\n    const indexFound = pkgList.findIndex((pkg) => pkg.index === index);\n    if (indexFound === -1) {\n      return;\n    }\n    const enumListNew = [\n      ...pkgList.slice(0, indexFound),\n      ...pkgList.slice(indexFound + 1),\n    ];\n    onChange(enumListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...pkgList.map((pkg) => {\n      const { index: key, name, lineupIndex: lineup } = pkg;\n      return { key, package: name, lineup };\n    }),\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form} onFinish={addPkg}>\n            <Form.Item name={formName} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonAdd.current?.click()} disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addPkg} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitEditPkg} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          children\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removePkg(key)}\n              disabled={usedPkgIndexList?.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n          </>\n        ) : null}\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, ExportOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport Link from \"antd/lib/typography/Link\";\nimport { uniq } from \"lodash\";\nimport { createRef, useState } from \"react\";\nimport { formNameNew, formPrevious, formPreviousNew, formVersion, keyActions, keyPrevious, keyVersion, parenError, parenNone, titleActions, titlePrevious, titleVersion } from \"../constants\";\nimport { VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\n\nconst { Option } = Select;\n\ntype Props = {\n  versionList: VersionV2[];\n  onChange: (versionList: VersionV2[]) => void;\n  onPublish: (key: number) => void;\n  onSelect: (index: number) => void;\n};\n\ntype EditableCellPros = {\n  record: { key: number; version: string; previous: number };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function VersionTable({\n  versionList,\n  onChange,\n  onPublish,\n  onSelect,\n}: Props) {\n  const [form] = useForm();\n  const refButtonAdd = createRef<HTMLElement>();\n  const refButtonEdit = createRef<HTMLElement>();\n  const [editIndex, setEditIndex] = useState(-1);\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyPrevious, dataIndex: keyPrevious, title: titlePrevious },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addVersion() {\n    form\n      .validateFields([formVersion])\n      .then(() => {\n        const { version: name, previous: indexPrev } = form.getFieldsValue([\n          formVersion,\n          formPrevious,\n        ]);\n        const versionFound = versionList.find(\n          (version) => version.name === name\n        );\n        if (versionFound) {\n          return;\n        }\n        const index = findEmptyIndex(\n          versionList.map((version) => version.index)\n        );\n        const versionListNew: VersionV2[] = [\n          ...versionList,\n          { index, name, indexPrev, changeList: [], releaseList: [] },\n        ];\n        form.setFieldsValue({ version: \"\" });\n        onChange(versionListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(key: number) {\n    const versionFound = versionList.find((version) => version.index === key);\n    if (!versionFound) {\n      return;\n    }\n    const { name: nameNew, indexPrev: previousNew } = versionFound;\n    form.setFieldsValue({ nameNew, previousNew });\n    setEditIndex(key);\n  }\n\n  function onClickPublish(key: number) {\n    onPublish(key);\n  }\n\n  function onSubmitEditVersion() {\n    form\n      .validateFields([formNameNew])\n      .then(() => {\n        const { nameNew: name, previousNew: indexPrev } = form.getFieldsValue([\n          formNameNew,\n          formPreviousNew,\n        ]);\n        const nameInUse = versionList.find(\n          (version) => version.index !== editIndex && version.name === name\n        );\n        if (nameInUse) {\n          return;\n        }\n        const indexFound = versionList.findIndex(\n          (version) => version.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const version = versionList[indexFound];\n        const { changeList, releaseList } = version;\n        const versionListNew: VersionV2[] = [\n          ...versionList.slice(0, indexFound),\n          { index: editIndex, name, indexPrev, changeList, releaseList },\n          ...versionList.slice(indexFound + 1),\n        ];\n        onChange(versionListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeVersion(index: number) {\n    const versionFound = versionList.find(\n      (version) => version.indexPrev === index\n    );\n    if (versionFound) {\n      return;\n    }\n    const indexFound = versionList.findIndex(\n      (version) => version.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      ...versionList.slice(indexFound + 1, 0),\n    ];\n    onChange(versionListNew);\n  }\n\n  const usedVersionIndexList = uniq(\n    versionList\n      .filter((version) => {\n        const { index } = version;\n        return !!versionList.find((version) => version.indexPrev === index);\n      })\n      .map((version) => version.index)\n  );\n\n  const dataSource = [\n    { key: -1 },\n    ...versionList.map((version) => {\n      const { index, name, indexPrev } = version;\n      return { key: index, version: name, previous: indexPrev };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellPros) {\n    const { key, previous: indexPrev } = record;\n    return (\n      <td {...restProps}>\n        {key === -1 && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formVersion} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonAdd.current?.click()} disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPrevious} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button ref={refButtonAdd} onClick={addVersion} disabled={editIndex !== -1} icon={<PlusOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyVersion ? (\n          <Form form={form}>\n            <Form.Item name={formNameNew} rules={[{ required: true }]} help={false}>\n              <Input onPressEnter={() => refButtonEdit.current?.click()} />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyPrevious ? (\n          <Form form={form}>\n            <Form.Item name={formPreviousNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {versionList.map((version) => {\n                  const { index, name } = version;\n                  return (\n                    <Option key={index} value={index} disabled={index === key}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button ref={refButtonEdit} onClick={onSubmitEditVersion} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <Link onClick={() => onSelect(key)}>{children}</Link>\n        ) : dataIndex === keyPrevious ? (\n          indexPrev === -1 ? (\n            parenNone\n          ) : (\n            versionList.find((version) => version.index === indexPrev)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n            <Button\n              onClick={() => removeVersion(key)}\n              disabled={usedVersionIndexList.includes(key)}\n              icon={<DeleteOutlined />}\n            />\n            <Button onClick={() => onClickPublish(key)} icon={<ExportOutlined />} />\n          </>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { FileOutlined, FolderOpenOutlined, SaveOutlined } from \"@ant-design/icons\";\nimport { Input, Menu } from \"antd\";\nimport { createRef, useState } from \"react\";\nimport { Enum, Pkg, VersionV2 } from \"../types\";\nimport { load } from \"../utils\";\n\ntype Props = {\n  customerList: Enum[];\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  versionList: VersionV2[];\n  onNew: () => void;\n  onLoad: (content: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) => void;\n};\n\nconst UNTITLED = \"Untitled\";\n\nexport default function AppMenu({\n  customerList,\n  lineupList,\n  pkgList,\n  versionList,\n  onNew,\n  onLoad,\n}: Props) {\n  const refLoad = createRef<HTMLInputElement>();\n  let file: File | undefined;\n  const refSave = createRef<HTMLAnchorElement>();\n\n  const [featureName, setFeatureName] = useState(UNTITLED);\n\n  function onChangeFile(e: React.ChangeEvent<HTMLInputElement>) {\n    file = e.target.files?.[0];\n    if (!file) {\n      return;\n    }\n    reader.readAsText(file);\n  }\n\n  function onClickSave() {\n    if (refSave.current === null) {\n      return;\n    }\n    const blob = new Blob(\n      [JSON.stringify({ versionList, lineupList, pkgList, customerList })],\n      { type: \"application/json\" }\n    );\n    refSave.current.download = `${featureName}.json`;\n    refSave.current.href = window.URL.createObjectURL(blob);\n    refSave.current.click();\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    if (!file) {\n      return;\n    }\n    const result = e.target?.result;\n    if (typeof result !== \"string\") {\n      return;\n    }\n    const { name } = file;\n    const indexLast = name.lastIndexOf(\".\");\n    const featureName = name.substring(0, indexLast);\n    const { versionList, lineupList, pkgList, customerList } = load(result);\n    setFeatureName(featureName);\n    onLoad({ customerList, lineupList, pkgList, versionList });\n  };\n\n  return (\n    <>\n      <Menu mode=\"horizontal\" selectable={false}>\n        <Menu.Item key=\"new\" onClick={onNew} icon={<FileOutlined />} />\n        <Menu.Item key=\"load\" onClick={() => refLoad.current?.click()} icon={<FolderOpenOutlined />} />\n        <Menu.Item key=\"featureName\" disabled>\n          <Input\n            value={featureName}\n            onChange={(e) => setFeatureName(e.target.value)}\n          />\n        </Menu.Item>\n        <Menu.Item key=\"save\" onClick={() => onClickSave()} icon={<SaveOutlined />} />\n      </Menu>\n      <input\n        type=\"file\"\n        accept=\".json\"\n        hidden\n        ref={refLoad}\n        onChange={onChangeFile}\n      />\n      {/* eslint-disable-next-line jsx-a11y/anchor-has-content, jsx-a11y/anchor-is-valid */}\n      <a href=\"#\" ref={refSave} hidden />\n    </>\n  );\n}\n","import { CheckOutlined, CloseOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Badge, Button, Form, Popover, Select, Table, Tag, Typography } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport {\n  formCustomerIndexList,\n  keyActions,\n  keyCustomers,\n  keyDescription,\n  keyVersion,\n  parenError,\n  parenGlobal,\n  titleActions,\n  titleCustomers,\n  titleDescription,\n  titleVersion,\n} from \"../constants\";\nimport {\n  ChangeV2,\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  VersionV2,\n} from \"../types\";\nimport { accumulateVersionIndex } from \"../utils\";\nconst { Option } = Select;\nconst { Text } = Typography;\n\ntype ChangePerReleaseTableProps = {\n  customerList: Enum[];\n  pkgList: Pkg[];\n  releaseIndex: number;\n  versionIndex: number;\n  versionList: VersionV2[];\n  onChange: (\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    changeIndex: number;\n    description: string;\n    beforeChange: string;\n    afterChange: string;\n    version: number;\n    customerIndexList: number[];\n  };\n  dataIndex: string;\n  children: any;\n};\n\ntype PopoverContentProps = {\n  beforeChange: string;\n  afterChange: string;\n};\n\nexport default function ChangePerReleaseTable({\n  customerList,\n  pkgList,\n  releaseIndex,\n  versionIndex,\n  versionList,\n  onChange,\n}: ChangePerReleaseTableProps) {\n  const [form] = useForm();\n  const [editVersionIndex, setEditVersionIndex] = useState(-1);\n  const [editChangeIndex, setEditChangeIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }, [customerList, pkgList, releaseIndex, versionIndex, versionList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n  const releaseFound = releaseList.find(\n    (release) => release.index === releaseIndex\n  );\n  const customerIndexListPerChangeList =\n    releaseFound?.customerIndexListPerChangeList ?? [];\n  const pkgIndex = releaseFound?.pkgIndex ?? undefined;\n\n  const columns: any[] = [\n    { key: keyVersion, dataIndex: keyVersion, title: titleVersion },\n    { key: keyDescription, dataIndex: keyDescription, title: titleDescription },\n    { key: keyCustomers, dataIndex: keyCustomers, title: titleCustomers },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function onCancelEdit() {\n    setEditVersionIndex(-1);\n    setEditChangeIndex(-1);\n  }\n\n  function onClickEdit(versionIndex: number, changeIndex: number) {\n    const customerIndexListPerChangeFound = customerIndexListPerChangeList.find(\n      (item) => {\n        return (\n          item.versionIndex === versionIndex && item.changeIndex === changeIndex\n        );\n      }\n    );\n    if (customerIndexListPerChangeFound) {\n      const { customerIndexList } = customerIndexListPerChangeFound;\n      form.setFieldsValue({ customerIndexList });\n    }\n    setEditVersionIndex(versionIndex);\n    setEditChangeIndex(changeIndex);\n  }\n\n  function onSubmitChange(versionIndexOfChange: number, changeIndex: number) {\n    const versionOfChangeFound = versionList.find(\n      (version) => version.index === versionIndexOfChange\n    );\n    if (!versionOfChangeFound) {\n      return;\n    }\n    const { changeList } = versionOfChangeFound;\n    const changeFound = changeList.find(\n      (change) => change.index === changeIndex\n    );\n    if (!changeFound) {\n      return;\n    }\n    if (!releaseFound) {\n      return;\n    }\n    const customerIndexListRaw = form.getFieldValue(formCustomerIndexList);\n    const customerIndexList = customerIndexListRaw.includes(-1)\n      ? [-1]\n      : customerIndexListRaw;\n    const { customerIndexListPerChangeList } = releaseFound;\n    const indexFound = customerIndexListPerChangeList.findIndex((item) => {\n      return (\n        item.versionIndex === versionIndexOfChange &&\n        item.changeIndex === changeIndex\n      );\n    });\n    const customerIndexListPerChangeListNew =\n      indexFound === -1\n        ? [\n            ...customerIndexListPerChangeList,\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n          ]\n        : [\n            ...customerIndexListPerChangeList.slice(0, indexFound),\n            {\n              versionIndex: versionIndexOfChange,\n              changeIndex,\n              customerIndexList,\n            },\n            ...customerIndexListPerChangeList.slice(indexFound + 1),\n          ];\n    onChange(customerIndexListPerChangeListNew);\n  }\n\n  /**\n   * versionIndexList[0]: Current version\n   * versionIndexList[n]: Previous version of versionIndexList[n-1]\n   */\n  const versionIndexList = accumulateVersionIndex(versionList, versionIndex);\n  const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n  const changeListFiltered = versionIndexList.reduce(\n    (changeListPrev: (ChangeV2 & { versionIndex: number })[], versionIndex) => {\n      const versionFound = versionList.find(\n        (version) => version.index === versionIndex\n      );\n      if (!versionFound) {\n        return changeListPrev;\n      }\n      const { changeList } = versionFound;\n      const changeListCurr = changeList.filter((change) => {\n        return change.lineupIndex === pkgFound?.lineupIndex;\n      });\n      return [\n        ...changeListPrev,\n        ...changeListCurr.map((change) => {\n          return { versionIndex, ...change };\n        }),\n      ];\n    },\n    []\n  );\n  const dataSource = [\n    ...changeListFiltered.map((change) => {\n      const {\n        index: changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        versionIndex: versionIndexOfChange,\n      } = change;\n      const customerIndexList =\n        customerIndexListPerChangeList.find((item) => {\n          return (\n            item.versionIndex === versionIndexOfChange &&\n            item.changeIndex === changeIndex\n          );\n        })?.customerIndexList ?? [];\n      return {\n        changeIndex,\n        description,\n        beforeChange,\n        afterChange,\n        version: versionIndexOfChange,\n        customerIndexList,\n      };\n    }),\n  ];\n\n  const customerIndexListPerRelease = releaseFound?.customerIndexList ?? [];\n  const customerListPerRelease = customerList.filter((customer) => {\n    return customerIndexListPerRelease.includes(customer.index);\n  });\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    // FIXME: No idea why the following check is required to render 'No Data'\n    if (!record) {\n      return (\n        <td colSpan={columns.length} {...restProps}>\n          {children}\n        </td>\n      );\n    }\n    const {\n      changeIndex,\n      beforeChange,\n      afterChange,\n      version: versionIndexOfChange,\n      customerIndexList,\n    } = record;\n    const versionFound = versionList.find((version) => version.index === versionIndexOfChange);\n    return (\n      <td {...restProps}>\n        {editVersionIndex === versionIndexOfChange &&\n        editChangeIndex === changeIndex &&\n        dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name={formCustomerIndexList}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                <Option key={-1} value={-1}>\n                  {parenGlobal}\n                </Option>\n                {customerListPerRelease.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editVersionIndex === versionIndexOfChange &&\n          editChangeIndex === changeIndex &&\n          dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={() => onSubmitChange(versionIndexOfChange, changeIndex)} icon={<CheckOutlined />} />\n              <Button onClick={onCancelEdit} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyVersion ? (\n          <>\n            {versionFound?.name ?? parenError}\n            {' '}\n            {versionIndexOfChange === versionIndex ? <Badge color=\"blue\" /> : null}\n          </>\n        ) : dataIndex === keyDescription ? (\n          <Popover\n            content={() => (\n              <PopoverContent\n                beforeChange={beforeChange}\n                afterChange={afterChange}\n              />\n            )}\n          >\n            {children}\n          </Popover>\n        ) : dataIndex === keyCustomers ? (\n          /**TODO\n           * Render previous customers in grey\n           * Render current customers in blue\n           */\n          customerIndexList.map((customerIndex) => {\n            const customerFound =\n              customerIndex === -1\n                ? { name: parenGlobal }\n                : customerList.find(\n                    (customer) => customer.index === customerIndex\n                  );\n            return (\n              <Tag key={customerIndex} color=\"blue\">{customerFound?.name ?? parenError}</Tag>\n            );\n          })\n        ) : dataIndex === keyActions ? (\n          <Button onClick={() => onClickEdit(versionIndexOfChange, changeIndex)} icon={<EditOutlined />} />\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n\n  function PopoverContent({ beforeChange, afterChange }: PopoverContentProps) {\n    return (\n      <>\n        <Text strong>Before change</Text>\n        <br />\n        <TextArea value={beforeChange} cols={80} autoSize />\n        <br />\n        <Text strong>After change</Text>\n        <br />\n        <TextArea value={afterChange} cols={80} autoSize />\n      </>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, MenuOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport {\n  useSensors,\n  useSensor,\n  PointerSensor,\n  KeyboardSensor,\n  DndContext,\n  closestCenter,\n  DragOverlay,\n} from \"@dnd-kit/core\";\nimport {\n  sortableKeyboardCoordinates,\n  arrayMove,\n  SortableContext,\n  verticalListSortingStrategy,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { Button, Form, Select, Table, Tag } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { useEffect, useState } from \"react\";\nimport {\n  invalidSortable,\n  keyActions,\n  keyCustomers,\n  keyDragHandle,\n  keyPackage,\n  parenError,\n  parenNone,\n  titleActions,\n  titleCustomers,\n  titlePackage,\n} from \"../constants\";\nimport {\n  CustomerIndexListPerChange,\n  Enum,\n  Pkg,\n  ReleaseV2,\n  VersionV2,\n} from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nimport ChangePerReleaseTable from \"./ChangePerReleaseTable\";\n\nconst { Option } = Select;\n\ntype Props = {\n  lineupList: Enum[];\n  pkgList: Pkg[];\n  customerList: Enum[];\n  usedPkgIndexList: number[];\n  versionList: VersionV2[];\n  versionIndex: number;\n  onChange: (releaseList: ReleaseV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    package: number;\n    pkgName: string;\n    customers: number[];\n    lineup: string;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ReleaseTable({\n  lineupList,\n  pkgList,\n  customerList,\n  usedPkgIndexList,\n  versionList,\n  versionIndex,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n  // ID to render overlay.\n  const [activeId, setActiveId] = useState(null);\n\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  function onDragStart(event: any) {\n    const { active } = event;\n    setActiveId(active.id);\n  }\n\n  function onDragEnd(event: any) {\n    const { active, over } = event;\n    if (active.id !== \"-1\" && over.id !== \"-1\" && active.id !== over.id) {\n      const oldIndex = releaseList.findIndex(\n        (release) => release.index.toString() === active.id\n      );\n      const newIndex = releaseList.findIndex(\n        (release) => release.index.toString() === over.id\n      );\n      const releaseListNew = arrayMove(releaseList, oldIndex, newIndex);\n      onChange(releaseListNew);\n    }\n    // Stop overlay.\n    setActiveId(null);\n  }\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [lineupList, pkgList, customerList, versionList, versionIndex]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const releaseList = versionFound?.releaseList ?? [];\n\n  const columns: any[] = [\n    { key: keyPackage, dataIndex: keyPackage, title: titlePackage },\n    {\n      key: keyCustomers,\n      dataIndex: keyCustomers,\n      title: titleCustomers,\n      width: \"50%\",\n    },\n    { key: keyActions, dataIndex: keyActions, title: titleActions },\n    { key: keyDragHandle, dataIndex: keyDragHandle, title: \"\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addRelease() {\n    form\n      .validateFields([\"pkgIndex\", \"customerList\"])\n      .then(() => {\n        const { pkgIndex, customerList: customerIndexList } =\n          form.getFieldsValue([\"pkgIndex\", \"customerList\"]);\n        if (pkgIndex === -1) {\n          return;\n        }\n        // Check if package is already in use\n        const pkgInUse = versionList.find((version) => {\n          const { releaseList } = version;\n          return releaseList.find((release) => release.pkgIndex === pkgIndex);\n        });\n        if (pkgInUse) {\n          return;\n        }\n        const index = findEmptyIndex(\n          releaseList.map((release) => release.index)\n        );\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList,\n          {\n            index,\n            pkgIndex,\n            customerIndexList,\n            customerIndexListPerChangeList: [],\n          },\n        ];\n        onChange(releaseListNew);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onChangeCustomerIndexListPerChangeList(\n    releaseIndex: number,\n    customerIndexListPerChangeList: CustomerIndexListPerChange[]\n  ) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === releaseIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const release = releaseList[indexFound];\n    const { index, pkgIndex, customerIndexList } = release;\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      { index, pkgIndex, customerIndexList, customerIndexListPerChangeList },\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  function onClickEdit(index: number) {\n    const releaseFound = releaseList.find((release) => release.index === index);\n    if (!releaseFound) {\n      return;\n    }\n    const { pkgIndex: pkgIndexNew, customerIndexList: customerIndexListNew } =\n      releaseFound;\n    const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndexNew);\n    if (!pkgFound) {\n      return;\n    }\n    form.setFieldsValue({ pkgIndexNew, customerIndexListNew });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditRelease() {\n    form\n      .validateFields([\"pkgIndexNew\", \"customerIndexListNew\"])\n      .then(() => {\n        const { pkgIndexNew, customerIndexListNew } = form.getFieldsValue([\n          \"pkgIndexNew\",\n          \"customerIndexListNew\",\n        ]);\n        const releaseFound = releaseList.find(\n          (release) =>\n            release.index !== editIndex && release.pkgIndex === pkgIndexNew\n        );\n        if (releaseFound) {\n          return;\n        }\n        const indexFound = releaseList.findIndex(\n          (release) => release.index === editIndex\n        );\n        const { customerIndexListPerChangeList } = releaseList[indexFound];\n        if (indexFound === -1) {\n          return;\n        }\n        const releaseListNew: ReleaseV2[] = [\n          ...releaseList.slice(0, indexFound),\n          {\n            index: editIndex,\n            pkgIndex: pkgIndexNew,\n            customerIndexList: customerIndexListNew,\n            customerIndexListPerChangeList,\n          },\n          ...releaseList.slice(indexFound + 1),\n        ];\n        onChange(releaseListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeRelease(index: number) {\n    const indexFound = releaseList.findIndex(\n      (release) => release.index === index\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const releaseListNew = [\n      ...releaseList.slice(0, indexFound),\n      ...releaseList.slice(indexFound + 1),\n    ];\n    onChange(releaseListNew);\n  }\n\n  const dataSource = [\n    { key: -1 },\n    ...releaseList.map((release) => {\n      const { index: key, pkgIndex, customerIndexList: customers } = release;\n      const pkgFound = pkgList.find((pkg) => pkg.index === pkgIndex);\n      const pkgName = pkgFound?.name;\n      const lineupIndex = pkgFound?.lineupIndex;\n      const lineup =\n        lineupIndex === -1\n          ? parenNone\n          : lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError;\n      return { key, package: pkgIndex, pkgName, customers, lineup };\n    }),\n  ];\n\n  const releaseToDragFound = releaseList.find((release) => release.index === Number(activeId));\n  const pkgToDragFound = pkgList.find((pkg) => pkg.index === releaseToDragFound?.pkgIndex);\n  const pkgNameToDrag = pkgToDragFound?.name;\n  const lineupIndexToDrag = pkgToDragFound?.lineupIndex;\n  const lineupToDrag = lineupList.find((lineup) => lineup.index === lineupIndexToDrag)?.name;\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    >\n      <Table\n        columns={columns}\n        dataSource={dataSource}\n        components={{\n          body: {\n            wrapper: DraggableWrapper,\n            row: DraggableRow,\n            cell: EditableCell,\n          },\n        }}\n        expandable={{\n          expandedRowRender,\n          rowExpandable: (record) => record.key !== -1,\n        }}\n        pagination={false}\n        size=\"small\"\n      />\n      {/* Render overlay component. */}\n      {\n        pkgToDragFound ? (\n          <DragOverlay\n            style={{\n              backgroundColor: \"#e0e0e07f\",\n              border: \"1px solid #e9e9e9\",\n              display: \"flex\",\n              alignItems: \"center\",\n              paddingLeft: 30,\n            }}\n          >\n            {pkgNameToDrag} <Tag>{lineupToDrag}</Tag>\n          </DragOverlay>\n        ) : null\n      }\n    </DndContext>\n  );\n\n  function DraggableWrapper(props: any) {\n    const { children, ...restProps } = props;\n    return (\n      <SortableContext\n        // `children[1]` is `dataSource`.\n        items={children[1].map((child: any) => child.key.toString())}\n        strategy={verticalListSortingStrategy}\n        {...restProps}\n      >\n        <tbody {...restProps}>\n          {\n            // This invokes `Table.components.body.row` for each element of `children`.\n            children\n          }\n        </tbody>\n      </SortableContext>\n    );\n  }\n\n  function DraggableRow(props: any) {\n    const { children, style, ...restProps } = props;\n    const id = props[\"data-row-key\"]?.toString() ?? invalidSortable;\n    const { attributes, listeners, setNodeRef } = useSortable({ id });\n    const styleRowBold = Number(id) > -1 ? { fontWeight: \"bold\" } : null;\n    const styleNew = Object.assign({}, style, styleRowBold);\n    return (\n      <tr ref={setNodeRef} {...attributes} {...restProps} style={styleNew}>\n        {id === invalidSortable\n          ? children\n          : children.map((child: any) => {\n              const { children, ...restProps } = child;\n              const { key } = restProps;\n              return key === keyDragHandle ? (\n                <td {...listeners} {...restProps}>\n                  {child}\n                </td>\n              ) : (\n                <td {...restProps}>{child}</td>\n              );\n            })}\n      </tr>\n    );\n  }\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    if (!record) {\n      return children;\n    }\n    const { key, pkgName, customers: customerIndexList, lineup } = record;\n    return (\n      <>\n        {/* <td {...restProps}> */}\n        {key === -1 && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"pkgIndex\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select disabled={editIndex !== -1}>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option\n                      key={index}\n                      value={index}\n                      disabled={usedPkgIndexList.includes(index)}\n                    >\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerList\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n                disabled={editIndex !== -1}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addRelease} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyDragHandle ? null : editIndex ===\n            key && dataIndex === keyPackage ? (\n          <Form form={form}>\n            <Form.Item name=\"pkgIndexNew\">\n              <Select>\n                {pkgList.map((pkg) => {\n                  const { index, name, lineupIndex } = pkg;\n                  const lineup =\n                    lineupIndex === -1\n                      ? parenNone\n                      : lineupList.find(\n                          (lineup) => lineup.index === lineupIndex\n                        )?.name ?? parenError;\n                  return (\n                    <Option key={index} value={index}>\n                      {name} <Tag>{lineup}</Tag>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyCustomers ? (\n          <Form form={form}>\n            <Form.Item\n              name=\"customerIndexListNew\"\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <Select\n                mode=\"multiple\"\n                allowClear\n                filterOption={(input, option) => {\n                  if (!option) {\n                    return false;\n                  }\n                  const children = option.children as string;\n                  if (!children) {\n                    return false;\n                  }\n                  return (\n                    children\n                      .toLocaleLowerCase()\n                      .indexOf(input.toLocaleLowerCase()) !== -1\n                  );\n                }}\n              >\n                {customerList.map((customer) => {\n                  const { index, name } = customer;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form form={form}>\n            <Form.Item>\n              <Button onClick={onSubmitEditRelease}>\n                <CheckOutlined />\n              </Button>\n              <Button onClick={() => setEditIndex(-1)}>\n                <CloseOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyPackage ? (\n          <>\n            {pkgName} <Tag>{lineup}</Tag>\n          </>\n        ) : dataIndex === keyCustomers ? (\n          customerIndexList\n            .map((customerIndex) => {\n              const customerFound = customerList.find(\n                (customer) => customer.index === customerIndex\n              );\n              return (\n                customerFound && (\n                  <Tag key={customerFound.index}>{customerFound.name}</Tag>\n                )\n              );\n            })\n            .filter((customerTag) => !!customerTag)\n        ) : dataIndex === keyActions ? (\n          <>\n            <Button onClick={() => onClickEdit(key)}>\n              <EditOutlined />\n            </Button>\n            <Button onClick={() => removeRelease(key)}>\n              <DeleteOutlined />\n            </Button>\n          </>\n        ) : dataIndex === keyDragHandle ? (\n          <MenuOutlined style={{ cursor: \"grab\" }} />\n        ) : (\n          children\n        )}\n        {/* </td> */}\n      </>\n    );\n  }\n\n  function expandedRowRender(record: any) {\n    const { key: releaseIndex } = record;\n    return (\n      <td colSpan={columns.length + 1}>\n        <ChangePerReleaseTable\n          customerList={customerList}\n          pkgList={pkgList}\n          releaseIndex={releaseIndex}\n          versionIndex={versionIndex}\n          versionList={versionList}\n          onChange={(customerIndexListPerChangeList) =>\n            onChangeCustomerIndexListPerChangeList(\n              releaseIndex,\n              customerIndexListPerChangeList\n            )\n          }\n        />\n      </td>\n    );\n  }\n}\n","import { CheckOutlined, CloseOutlined, DeleteOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Select, Table } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { useEffect, useState } from \"react\";\nimport { formAfterChange, formAfterChangeNew, formBeforeChange, formBeforeChangeNew, formDescription, formDescriptionNew, formLineup, formLineupNew, keyActions, keyAfterChange, keyBeforeChange, keyDescription, keyLineup, parenError, parenNone, titleActions, titleAfterChange, titleBeforeChange, titleDescription, titleLineup } from \"../constants\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, VersionV2 } from \"../types\";\nimport { findEmptyIndex } from \"../utils\";\nconst { Option } = Select;\n\ntype Props = {\n  versionIndex: number;\n  versionList: VersionV2[];\n  lineupList: Enum[];\n  usedChangeIndexWithVersionIndexList: Omit<CustomerIndexListPerChange, \"customerIndexList\">[];\n  onChange: (changeList: ChangeV2[]) => void;\n};\n\ntype EditableCellProps = {\n  record: {\n    key: number;\n    descriptoin: string;\n    beforeChange: string;\n    afterChange: string;\n    lineup: number;\n  };\n  dataIndex: string;\n  children: any;\n};\n\nexport default function ChangeTable({\n  versionIndex,\n  versionList,\n  lineupList,\n  usedChangeIndexWithVersionIndexList,\n  onChange,\n}: Props) {\n  const [form] = useForm();\n\n  const [editIndex, setEditIndex] = useState(-1);\n\n  useEffect(() => {\n    setEditIndex(-1);\n  }, [versionIndex, versionList, lineupList]);\n\n  const versionFound = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const changeList = versionFound?.changeList ?? [];\n\n  const columns: any[] = [\n    {\n      key: keyDescription,\n      dataIndex: keyDescription,\n      title: titleDescription,\n      width: \"25%\",\n    },\n    {\n      key: keyBeforeChange,\n      dataIndex: keyBeforeChange,\n      title: titleBeforeChange,\n      width: \"25%\",\n    },\n    {\n      key: keyAfterChange,\n      dataIndex: keyAfterChange,\n      title: titleAfterChange,\n      width: \"25%\",\n    },\n    { key: keyLineup, dataIndex: keyLineup, title: titleLineup, width: \"12.5%\" },\n    { key: keyActions, dataIndex: keyActions, title: titleActions, width: \"12.5%\" },\n  ].map((column) => {\n    const { dataIndex } = column;\n    return {\n      ...column,\n      onCell: (record: any) => ({\n        record,\n        dataIndex,\n      }),\n    };\n  });\n\n  function addChange() {\n    form\n      .validateFields([formDescription, formLineup])\n      .then(() => {\n        const {\n          description,\n          beforeChange,\n          afterChange,\n          lineup: lineupIndex,\n        } = form.getFieldsValue([\n          formDescription,\n          formBeforeChange,\n          formAfterChange,\n          formLineup,\n        ]);\n        const index = findEmptyIndex(changeList.map((change) => change.index));\n        const changeListNew: ChangeV2[] = [\n          ...changeList,\n          { index, description, beforeChange, afterChange, lineupIndex },\n        ];\n        onChange(changeListNew);\n        form.setFieldsValue({\n          description: \"\",\n          beforeChange: \"\",\n          afterChange: \"\",\n          lineup: -1,\n        });\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function onClickEdit(index: number) {\n    const changeFound = changeList.find((change) => change.index === index);\n    if (!changeFound) {\n      return;\n    }\n    const {\n      description: descriptionNew,\n      beforeChange: beforeChangeNew,\n      afterChange: afterChangeNew,\n      lineupIndex: lineupNew,\n    } = changeFound;\n    form.setFieldsValue({\n      descriptionNew,\n      beforeChangeNew,\n      afterChangeNew,\n      lineupNew,\n    });\n    setEditIndex(index);\n  }\n\n  function onSubmitEditChange() {\n    form\n      .validateFields([\n        formDescriptionNew,\n        formLineupNew,\n      ])\n      .then(() => {\n        const {\n          descriptionNew: description,\n          beforeChangeNew: beforeChange,\n          afterChangeNew: afterChange,\n          lineupNew: lineupIndex,\n        } = form.getFieldsValue([\n          formDescriptionNew,\n          formBeforeChangeNew,\n          formAfterChangeNew,\n          formLineupNew,\n        ]);\n        const indexFound = changeList.findIndex(\n          (change) => change.index === editIndex\n        );\n        if (indexFound === -1) {\n          return;\n        }\n        const changeListNew: ChangeV2[] = [\n          ...changeList.slice(0, indexFound),\n          {\n            index: editIndex,\n            description,\n            beforeChange,\n            afterChange,\n            lineupIndex,\n          },\n          ...changeList.slice(indexFound + 1),\n        ];\n        onChange(changeListNew);\n        setEditIndex(-1);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n  }\n\n  function removeChange(index: number) {\n    const indexFound = changeList.findIndex((change) => change.index === index);\n    const changeListNew = [\n      ...changeList.slice(0, indexFound),\n      ...changeList.slice(indexFound + 1),\n    ];\n    onChange(changeListNew);\n  }\n\n  const dataSource: any[] = [\n    { key: -1 },\n    ...changeList.map((change) => {\n      const {\n        index: key,\n        description,\n        beforeChange,\n        afterChange,\n        lineupIndex: lineup,\n      } = change;\n      return { key, description, beforeChange, afterChange, lineup };\n    }),\n  ];\n  return (\n    <Table\n      columns={columns}\n      dataSource={dataSource}\n      components={{\n        body: {\n          cell: EditableCell,\n        },\n      }}\n      pagination={false}\n      size=\"small\"\n    />\n  );\n\n  function EditableCell({\n    record,\n    dataIndex,\n    children,\n    ...restProps\n  }: EditableCellProps) {\n    const { key, lineup: lineupIndex } = record;\n    return (\n      <td {...restProps} style={{ verticalAlign: \"top\" }}>\n        {key === -1 && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescription}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChange}\n              help={false}\n            >\n              <TextArea autoSize disabled={editIndex !== -1} />\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineup} initialValue={-1}>\n              <Select disabled={editIndex !== -1}>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : key === -1 && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={addChange} disabled={editIndex !== -1}>\n                <PlusOutlined />\n              </Button>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyDescription ? (\n          <Form form={form}>\n            <Form.Item\n              name={formDescriptionNew}\n              rules={[{ required: true }]}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyBeforeChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formBeforeChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyAfterChange ? (\n          <Form form={form}>\n            <Form.Item\n              name={formAfterChangeNew}\n              help={false}\n            >\n              <TextArea autoSize />\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyLineup ? (\n          <Form form={form}>\n            <Form.Item name={formLineupNew}>\n              <Select>\n                <Option key={-1} value={-1}>\n                  {parenNone}\n                </Option>\n                {lineupList.map((lineup) => {\n                  const { index, name } = lineup;\n                  return (\n                    <Option key={index} value={index}>\n                      {name}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Form>\n        ) : editIndex === key && dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={onSubmitEditChange} icon={<CheckOutlined />} />\n              <Button onClick={() => setEditIndex(-1)} icon={<CloseOutlined />} />\n            </Form.Item>\n          </Form>\n        ) : dataIndex === keyDescription ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyBeforeChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyAfterChange ? (\n          <TextArea value={children[1]} autoSize style={{ border: \"none \" }} />\n        ) : dataIndex === keyLineup ? (\n          lineupIndex === -1 ? (\n            parenNone\n          ) : (\n            lineupList.find((lineup) => lineup.index === lineupIndex)?.name ??\n            parenError\n          )\n        ) : dataIndex === keyActions ? (\n          <Form>\n            <Form.Item>\n              <Button onClick={() => onClickEdit(key)} icon={<EditOutlined />} />\n              <Button\n                onClick={() => removeChange(key)} icon={<DeleteOutlined />}\n                disabled={\n                  !!usedChangeIndexWithVersionIndexList.find((item) => {\n                    return item.versionIndex === versionIndex && item.changeIndex === key\n                  })\n                }\n              />\n            </Form.Item>\n          </Form>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n","import { Enum, Pkg, VersionV2 } from \"./types\";\n\nexport const customerListInit: Enum[] = [];\nexport const lineupListInit: Enum[] = [];\nexport const pkgListInit: Pkg[] = [];\nexport const versionListInit: VersionV2[] = [];\n","import { useState } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { Button, Col, Collapse, Modal, Row, Space, Tabs, Tag } from \"antd\";\nimport { CopyOutlined, GithubOutlined } from \"@ant-design/icons\";\nimport EnumTable from \"./components/EnumTable\";\nimport PkgTable from \"./components/PkgTable\";\nimport { ChangeV2, CustomerIndexListPerChange, Enum, Pkg, ReleaseV2, VersionV2 } from \"./types\";\nimport Title from \"antd/lib/typography/Title\";\nimport Link from \"antd/lib/typography/Link\";\nimport VersionTable from \"./components/VersionTable\";\nimport AppMenu from \"./components/AppMenu\";\nimport ReleaseTable from \"./components/ReleaseTable\";\nimport ChangeTable from \"./components/ChangeTable\";\nimport {\n  customerListInit,\n  lineupListInit,\n  pkgListInit,\n  versionListInit,\n} from \"./init\";\nimport { uniq, uniqWith } from \"lodash\";\nimport TextArea from \"antd/lib/input/TextArea\";\nimport { publish } from \"./utils\";\nimport { keyChanges, keyReleases, keyVersions, parenError, keyHistory, keyLineups, keyPackages, keyCustomers, titleHistory, titleVersions, titleChanges, titleReleases, titleCustomers, titleCustomer, titleLineups, titleLineup, titlePackages } from \"./constants\";\nconst { Panel } = Collapse;\n\nfunction App() {\n  const [versionList, setVersionList] = useState<VersionV2[]>(versionListInit);\n  const [versionIndex, setVersionIndex] = useState(-1);\n  const [lineupList, setLineupList] = useState<Enum[]>(lineupListInit);\n  const [pkgList, setPkgList] = useState<Pkg[]>(pkgListInit);\n  const [customerList, setCustomerList] = useState<Enum[]>(customerListInit);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [releaseHistory, setReleaseHistory] = useState(\"\");\n\n  function onChangeChangeList(changeList: ChangeV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.changeList = changeList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeReleaseList(releaseList: ReleaseV2[]) {\n    const indexFound = versionList.findIndex(\n      (version) => version.index === versionIndex\n    );\n    if (indexFound === -1) {\n      return;\n    }\n    const version = versionList[indexFound];\n    version.releaseList = releaseList;\n    const versionListNew = [\n      ...versionList.slice(0, indexFound),\n      version,\n      ...versionList.slice(indexFound + 1),\n    ];\n    setVersionList(versionListNew);\n  }\n\n  function onChangeVersionList(versionList: VersionV2[]) {\n    const versionFound = versionList.find(\n      (version) => version.index === versionIndex\n    );\n    if (!versionFound) {\n      setVersionIndex(-1);\n    }\n    setVersionList(versionList);\n  }\n\n  function onLoad({\n    customerList,\n    lineupList,\n    pkgList,\n    versionList,\n  }: {\n    customerList: Enum[];\n    lineupList: Enum[];\n    pkgList: Pkg[];\n    versionList: VersionV2[];\n  }) {\n    setVersionIndex(-1);\n    setCustomerList(customerList);\n    setLineupList(lineupList);\n    setPkgList(pkgList);\n    setVersionList(versionList);\n  }\n\n  function onNew() {\n    setVersionIndex(-1);\n    setCustomerList([]);\n    setLineupList([]);\n    setPkgList([]);\n    setVersionList([]);\n  }\n\n  function onPublish(versionIndex: number) {\n    const releaseHistory = publish(\n      versionList,\n      versionIndex,\n      lineupList,\n      pkgList,\n      customerList\n    );\n    setReleaseHistory(releaseHistory ?? parenError);\n    setModalVisible(true);\n  }\n\n  function onSelectVersion(index: number) {\n    setVersionIndex(index);\n  }\n\n  type ChangeIndexWithVersionIndex = Omit<CustomerIndexListPerChange, \"customerIndexList\">;\n  const usedChangeIndexWithVersionIndexList: ChangeIndexWithVersionIndex[] =\n    uniqWith(\n      versionList.reduce(\n        (changeIndexListPrev: ChangeIndexWithVersionIndex[], version) => {\n          const { releaseList } = version;\n          const changeIndexListPerReleaseList = releaseList.reduce(\n            (\n              changeIndexListPerReleasePrev: ChangeIndexWithVersionIndex[],\n              release\n            ) => {\n              const { customerIndexListPerChangeList } = release;\n              return [\n                ...changeIndexListPerReleasePrev,\n                ...customerIndexListPerChangeList\n                  .filter((item) => {\n                    const { customerIndexList } = item;\n                    return customerIndexList && customerIndexList.length;\n                  })\n                  .map((item) => {\n                    const { versionIndex, changeIndex } = item;\n                    return { versionIndex, changeIndex };\n                  }),\n              ];\n            },\n            []\n          );\n          return [...changeIndexListPrev, ...changeIndexListPerReleaseList];\n        },\n        []\n      ),\n      (a, b) => a.versionIndex === b.versionIndex && a.changeIndex === b.changeIndex\n    );\n  const usedLineupIndexList = uniq([\n    ...versionList.reduce((lineupIndexListPrev: number[], version) => {\n      const { changeList } = version;\n      return [\n        ...lineupIndexListPrev,\n        ...changeList.map((change) => {\n          return change.lineupIndex;\n        }),\n      ];\n    }, []),\n    ...pkgList.map((pkg) => pkg.lineupIndex),\n  ]);\n  const usedPkgIndexList = uniq(\n    versionList.reduce((pkgIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...pkgIndexListPrev,\n        ...releaseList.map((release) => release.pkgIndex),\n      ];\n    }, [])\n  );\n  const usedCustomerIndexList = uniq(\n    versionList.reduce((customerIndexListPrev: number[], version) => {\n      const { releaseList } = version;\n      return [\n        ...customerIndexListPrev,\n        ...releaseList.reduce(\n          (customerIndexListPerReleasePrev: number[], release) => {\n            const { customerIndexList, customerIndexListPerChangeList } =\n              release;\n            return [\n              ...customerIndexListPerReleasePrev,\n              ...customerIndexList,\n              ...customerIndexListPerChangeList.reduce(\n                (customerIndexListPerChangeListPrev: number[], item) => {\n                  const { customerIndexList } = item;\n                  return [\n                    ...customerIndexListPerChangeListPrev,\n                    ...customerIndexList,\n                  ];\n                },\n                []\n              ),\n            ];\n          },\n          []\n        ),\n      ];\n    }, [])\n  );\n\n  const versionCurr = versionList.find(\n    (version) => version.index === versionIndex\n  );\n  const versionPrev =\n    !versionCurr || versionCurr.indexPrev === -1\n      ? undefined\n      : versionList.find(\n          (version) => version.index === versionCurr.indexPrev\n        ) ?? -1;\n  return (\n    <div className=\"App\">\n      <AppMenu\n        customerList={customerList}\n        lineupList={lineupList}\n        pkgList={pkgList}\n        versionList={versionList}\n        onNew={onNew}\n        onLoad={onLoad}\n      />\n      <Row>\n        <Col span={16} offset={4}>\n          <Tabs defaultActiveKey={keyHistory}>\n            <Tabs.TabPane tab={titleHistory} key={keyHistory}>\n              <Title level={2}>History</Title>\n              <Collapse defaultActiveKey={[keyVersions]}>\n                <Panel key={keyVersions} header={titleVersions}>\n                  <VersionTable\n                    versionList={versionList}\n                    onChange={onChangeVersionList}\n                    onPublish={onPublish}\n                    onSelect={onSelectVersion}\n                  />\n                </Panel>\n              </Collapse>\n              {!versionCurr ? null : (\n                <>\n                  <Title level={3}>{versionCurr.name}</Title>\n                  {!versionPrev ? null : (\n                    <>\n                      Previous{\" \"}\n                      <Tag>\n                        {versionPrev === -1 ? parenError : versionPrev.name}\n                      </Tag>\n                    </>\n                  )}\n                  <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n                    <Collapse defaultActiveKey={[keyChanges]}>\n                      <Panel key={keyChanges} header={titleChanges}>\n                        <ChangeTable\n                          versionIndex={versionIndex}\n                          versionList={versionList}\n                          lineupList={lineupList}\n                          usedChangeIndexWithVersionIndexList={usedChangeIndexWithVersionIndexList}\n                          onChange={onChangeChangeList}\n                        />\n                      </Panel>\n                    </Collapse>\n                    <Collapse defaultActiveKey={[keyReleases]}>\n                      <Panel key={keyReleases} header={titleReleases}>\n                        <ReleaseTable\n                          lineupList={lineupList}\n                          pkgList={pkgList}\n                          customerList={customerList}\n                          usedPkgIndexList={usedPkgIndexList}\n                          versionList={versionList}\n                          versionIndex={versionIndex}\n                          onChange={onChangeReleaseList}\n                          // onChangeVersionList={setVersionList}\n                        />\n                      </Panel>\n                    </Collapse>\n                  </Space>\n                </>\n              )}\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleCustomers} key={keyCustomers}>\n              <Title level={2}>Customers</Title>\n              <EnumTable\n                title={titleCustomer}\n                enumList={customerList}\n                onChange={setCustomerList}\n                usedIndexList={usedCustomerIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titleLineups} key={keyLineups}>\n              <Title level={2}>Lineups</Title>\n              <EnumTable\n                title={titleLineup}\n                enumList={lineupList}\n                onChange={setLineupList}\n                usedIndexList={usedLineupIndexList}\n              />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab={titlePackages} key={keyPackages}>\n              <Title level={2}>Packages</Title>\n              <PkgTable\n                pkgList={pkgList}\n                lineupList={lineupList}\n                onChange={setPkgList}\n                usedPkgIndexList={usedPkgIndexList}\n              />\n            </Tabs.TabPane>\n          </Tabs>\n        </Col>\n      </Row>\n      <Row style={{ marginTop: \"1em\" }}>\n        <Col span={24} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Link\n            href=\"https://github.com/gsongsong/rhm\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <GithubOutlined />\n          </Link>\n        </Col>\n      </Row>\n      <Modal\n        title=\"Release history\"\n        footer={\n          <Button onClick={() => navigator.clipboard.writeText(releaseHistory)}>\n            <CopyOutlined />\n            Copy to clipboard\n          </Button>\n        }\n        visible={modalVisible}\n        onCancel={() => setModalVisible(false)}\n        width={960}\n      >\n        <TextArea value={releaseHistory} cols={80} autoSize={true} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}